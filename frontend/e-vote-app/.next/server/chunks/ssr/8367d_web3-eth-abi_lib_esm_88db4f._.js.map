{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/utils.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport { isNullish, isUint8Array, leftPad, rightPad, toHex } from 'web3-utils';\nimport {\n\tAbiInput,\n\tAbiCoderStruct,\n\tAbiFragment,\n\tAbiParameter,\n\tAbiStruct,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tAbiConstructorFragment,\n} from 'web3-types';\n\nexport const isAbiFragment = (item: unknown): item is AbiFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t['function', 'event', 'constructor', 'error'].includes((item as { type: string }).type);\n\nexport const isAbiErrorFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'error';\n\nexport const isAbiEventFragment = (item: unknown): item is AbiEventFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'event';\n\nexport const isAbiFunctionFragment = (item: unknown): item is AbiFunctionFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'function';\n\nexport const isAbiConstructorFragment = (item: unknown): item is AbiConstructorFragment =>\n\t!isNullish(item) &&\n\ttypeof item === 'object' &&\n\t!isNullish((item as { type: string }).type) &&\n\t(item as { type: string }).type === 'constructor';\n\n/**\n * Check if type is simplified struct format\n */\nexport const isSimplifiedStructFormat = (\n\ttype: string | Partial<AbiParameter> | Partial<AbiInput>,\n): type is Omit<AbiParameter, 'components' | 'name'> =>\n\ttypeof type === 'object' &&\n\ttypeof (type as { components: unknown }).components === 'undefined' &&\n\ttypeof (type as { name: unknown }).name === 'undefined';\n\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n */\nexport const mapStructNameAndType = (structName: string): AbiStruct =>\n\tstructName.includes('[]')\n\t\t? { type: 'tuple[]', name: structName.slice(0, -2) }\n\t\t: { type: 'tuple', name: structName };\n\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n */\nexport const mapStructToCoderFormat = (struct: AbiStruct): Array<AbiCoderStruct> => {\n\tconst components: Array<AbiCoderStruct> = [];\n\n\tfor (const key of Object.keys(struct)) {\n\t\tconst item = struct[key];\n\n\t\tif (typeof item === 'object') {\n\t\t\tcomponents.push({\n\t\t\t\t...mapStructNameAndType(key),\n\t\t\t\tcomponents: mapStructToCoderFormat(item as unknown as AbiStruct),\n\t\t\t});\n\t\t} else {\n\t\t\tcomponents.push({\n\t\t\t\tname: key,\n\t\t\t\ttype: struct[key] as string,\n\t\t\t});\n\t\t}\n\t}\n\treturn components;\n};\n\n/**\n * Map types if simplified format is used\n */\nexport const mapTypes = (\n\ttypes: AbiInput[],\n): Array<string | AbiParameter | Record<string, unknown>> => {\n\tconst mappedTypes: Array<string | AbiParameter | Record<string, unknown>> = [];\n\n\tfor (const type of types) {\n\t\tlet modifiedType = type;\n\n\t\t// Clone object\n\t\tif (typeof type === 'object') {\n\t\t\tmodifiedType = { ...type };\n\t\t}\n\n\t\t// Remap `function` type params to bytes24 since Ethers does not\n\t\t// recognize former type. Solidity docs say `Function` is a bytes24\n\t\t// encoding the contract address followed by the function selector hash.\n\t\tif (typeof type === 'object' && type.type === 'function') {\n\t\t\tmodifiedType = { ...type, type: 'bytes24' };\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(modifiedType)) {\n\t\t\tconst structName = Object.keys(modifiedType)[0] as unknown as keyof typeof modifiedType;\n\n\t\t\tmappedTypes.push({\n\t\t\t\t...mapStructNameAndType(structName),\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tmodifiedType[structName] as unknown as AbiStruct,\n\t\t\t\t) as unknown as AbiParameter[],\n\t\t\t});\n\t\t} else {\n\t\t\tmappedTypes.push(modifiedType);\n\t\t}\n\t}\n\n\treturn mappedTypes;\n};\n\n/**\n * returns true if input is a hexstring and is odd-lengthed\n */\nexport const isOddHexstring = (param: unknown): boolean =>\n\ttypeof param === 'string' && /^(-)?0x[0-9a-f]*$/i.test(param) && param.length % 2 === 1;\n\n/**\n * format odd-length bytes to even-length\n */\nexport const formatOddHexstrings = (param: string): string =>\n\tisOddHexstring(param) ? `0x0${param.substring(2)}` : param;\n\nconst paramTypeBytes = /^bytes([0-9]*)$/;\nconst paramTypeBytesArray = /^bytes([0-9]*)\\[\\]$/;\nconst paramTypeNumber = /^(u?int)([0-9]*)$/;\nconst paramTypeNumberArray = /^(u?int)([0-9]*)\\[\\]$/;\n/**\n * Handle some formatting of params for backwards compatibility with Ethers V4\n */\nexport const formatParam = (type: string, _param: unknown): unknown => {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\t// clone if _param is an object\n\tconst param = typeof _param === 'object' && !Array.isArray(_param) ? { ..._param } : _param;\n\n\t// Format BN to string\n\tif (param instanceof BigInt || typeof param === 'bigint') {\n\t\treturn param.toString(10);\n\t}\n\n\tif (paramTypeBytesArray.exec(type) || paramTypeNumberArray.exec(type)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\tconst paramClone = [...(param as Array<unknown>)];\n\t\treturn paramClone.map(p => formatParam(type.replace('[]', ''), p));\n\t}\n\n\t// Format correct width for u?int[0-9]*\n\tlet match = paramTypeNumber.exec(type);\n\tif (match) {\n\t\tconst size = parseInt(match[2] ? match[2] : '256', 10);\n\t\tif (size / 8 < (param as { length: number }).length) {\n\t\t\t// pad to correct bit width\n\t\t\treturn leftPad(param as string, size);\n\t\t}\n\t}\n\n\t// Format correct length for bytes[0-9]+\n\tmatch = paramTypeBytes.exec(type);\n\tif (match) {\n\t\tconst hexParam = isUint8Array(param) ? toHex(param) : param;\n\n\t\t// format to correct length\n\t\tconst size = parseInt(match[1], 10);\n\t\tif (size) {\n\t\t\tlet maxSize = size * 2;\n\n\t\t\tif ((param as string).startsWith('0x')) {\n\t\t\t\tmaxSize += 2;\n\t\t\t}\n\t\t\t// pad to correct length\n\t\t\tconst paddedParam =\n\t\t\t\t(hexParam as string).length < maxSize\n\t\t\t\t\t? rightPad(param as string, size * 2)\n\t\t\t\t\t: hexParam;\n\t\t\treturn formatOddHexstrings(paddedParam as string);\n\t\t}\n\n\t\treturn formatOddHexstrings(hexParam as string);\n\t}\n\treturn param;\n};\n\n/**\n *  used to flatten json abi inputs/outputs into an array of type-representing-strings\n */\n\nexport const flattenTypes = (\n\tincludeTuple: boolean,\n\tputs: ReadonlyArray<AbiParameter>,\n): string[] => {\n\tconst types: string[] = [];\n\n\tputs.forEach(param => {\n\t\tif (typeof param.components === 'object') {\n\t\t\tif (!param.type.startsWith('tuple')) {\n\t\t\t\tthrow new AbiError(\n\t\t\t\t\t`Invalid value given \"${param.type}\". Error: components found but type is not tuple.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst arrayBracket = param.type.indexOf('[');\n\t\t\tconst suffix = arrayBracket >= 0 ? param.type.substring(arrayBracket) : '';\n\t\t\tconst result = flattenTypes(includeTuple, param.components);\n\n\t\t\tif (Array.isArray(result) && includeTuple) {\n\t\t\t\ttypes.push(`tuple(${result.join(',')})${suffix}`);\n\t\t\t} else if (!includeTuple) {\n\t\t\t\ttypes.push(`(${result.join(',')})${suffix}`);\n\t\t\t} else {\n\t\t\t\ttypes.push(`(${result.join()})`);\n\t\t\t}\n\t\t} else {\n\t\t\ttypes.push(param.type);\n\t\t}\n\t});\n\n\treturn types;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n * returns a string\n */\nexport const jsonInterfaceMethodToString = (json: AbiFragment): string => {\n\t// eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n\tif (isAbiErrorFragment(json) || isAbiEventFragment(json) || isAbiFunctionFragment(json)) {\n\t\tif (json.name?.includes('(')) {\n\t\t\treturn json.name;\n\t\t}\n\n\t\treturn `${json.name ?? ''}(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n\t}\n\n\t// Constructor fragment\n\treturn `(${flattenTypes(false, json.inputs ?? []).join(',')})`;\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;;;;;;;;;;;AAEF,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;;;;;;;;AAYxE,MAAM,aAAa,GAAG,CAAC,IAAa,EAAuB,CACjE,CADmE,wNAClE,YAAA,AAAS,EAAC,IAAI,CAAC,IAChB,OAAO,IAAI,KAAK,QAAQ,IACxB,yNAAC,YAAA,AAAS,EAAE,IAAyB,CAAC,IAAI,CAAC,IAC3C;QAAC,UAAU;QAAE,OAAO;QAAE,aAAa;QAAE,OAAO;KAAC,CAAC,QAAQ,CAAE,IAAyB,CAAC,IAAI,CAAC,CAAC;AAElF,MAAM,kBAAkB,GAAG,CAAC,IAAa,EAA4B,CAC3E,CAAC,AAD4E,oOAC5E,AAAS,EAAC,IAAI,CAAC,IAChB,OAAO,IAAI,KAAK,QAAQ,IACxB,yNAAC,YAAA,AAAS,EAAE,IAAyB,CAAC,IAAI,CAAC,IAC1C,IAAyB,CAAC,IAAI,KAAK,OAAO,CAAC;AAEtC,MAAM,kBAAkB,GAAG,CAAC,IAAa,EAA4B,CAC3E,CAD6E,uNAC5E,aAAA,AAAS,EAAC,IAAI,CAAC,IAChB,OAAO,IAAI,KAAK,QAAQ,IACxB,yNAAC,YAAA,AAAS,EAAE,IAAyB,CAAC,IAAI,CAAC,IAC1C,IAAyB,CAAC,IAAI,KAAK,OAAO,CAAC;AAEtC,MAAM,qBAAqB,GAAG,CAAC,IAAa,EAA+B,CACjF,CADmF,wNAClF,YAAA,AAAS,EAAC,IAAI,CAAC,IAChB,OAAO,IAAI,KAAK,QAAQ,IACxB,CAAC,oOAAA,AAAS,EAAE,IAAyB,CAAC,IAAI,CAAC,IAC1C,IAAyB,CAAC,IAAI,KAAK,UAAU,CAAC;AAEzC,MAAM,wBAAwB,GAAG,CAAC,IAAa,EAAkC,CACvF,CADyF,wNACxF,YAAA,AAAS,EAAC,IAAI,CAAC,IAChB,OAAO,IAAI,KAAK,QAAQ,IACxB,CAAC,oOAAA,AAAS,EAAE,IAAyB,CAAC,IAAI,CAAC,IAC1C,IAAyB,CAAC,IAAI,KAAK,aAAa,CAAC;AAK5C,MAAM,wBAAwB,GAAG,CACvC,IAAwD,EACJ,CACpD,CADsD,MAC/C,IAAI,KAAK,QAAQ,IACxB,OAAQ,IAAgC,CAAC,UAAU,KAAK,WAAW,IACnE,OAAQ,IAA0B,CAAC,IAAI,KAAK,WAAW,CAAC;AAKlD,MAAM,oBAAoB,GAAG,CAAC,UAAkB,EAAa,CACnE,CADqE,SAC3D,CAAC,QAAQ,CAAC,IAAI,CAAC,GACtB;QAAE,IAAI,EAAE,SAAS;QAAE,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAA,CAAE,GAClD;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,UAAU;IAAA,CAAE,CAAC;AAKjC,MAAM,sBAAsB,GAAG,CAAC,MAAiB,EAAyB,EAAE;IAClF,MAAM,UAAU,GAA0B,EAAE,CAAC;IAE7C,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAE,CAAC;QACvC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAEzB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC9B,UAAU,CAAC,IAAI,CAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACX,oBAAoB,CAAC,GAAG,CAAC,GAAA;gBAC5B,UAAU,EAAE,sBAAsB,CAAC,IAA4B,CAAC;YAAA,GAC/D,CAAC;QACJ,CAAC,MAAM,CAAC;YACP,UAAU,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,MAAM,CAAC,GAAG,CAAW;aAC3B,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IACD,OAAO,UAAU,CAAC;AACnB,CAAC,CAAC;AAKK,MAAM,QAAQ,GAAG,CACvB,KAAiB,EACwC,EAAE;IAC3D,MAAM,WAAW,GAA2D,EAAE,CAAC;IAE/E,KAAK,MAAM,IAAI,IAAI,KAAK,CAAE,CAAC;QAC1B,IAAI,YAAY,GAAG,IAAI,CAAC;QAExB,eAAe;QACf,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC9B,YAAY,GAAA,OAAA,MAAA,CAAA,CAAA,GAAQ,IAAI,CAAE,CAAC;QAC5B,CAAC;QAED,gEAAgE;QAChE,mEAAmE;QACnE,wEAAwE;QACxE,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC;YAC1D,YAAY,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAQ,IAAI,GAAA;gBAAE,IAAI,EAAE,SAAS;YAAA,EAAE,CAAC;QAC7C,CAAC;QAED,IAAI,wBAAwB,CAAC,YAAY,CAAC,EAAE,CAAC;YAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAyC,CAAC;YAExF,WAAW,CAAC,IAAI,CAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACZ,oBAAoB,CAAC,UAAU,CAAC,GAAA;gBACnC,UAAU,EAAE,sBAAsB,CACjC,YAAY,CAAC,UAAU,CAAyB,CACnB;YAAA,GAC7B,CAAC;QACJ,CAAC,MAAM,CAAC;YACP,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC;IACF,CAAC;IAED,OAAO,WAAW,CAAC;AACpB,CAAC,CAAC;AAKK,MAAM,cAAc,GAAG,CAAC,KAAc,EAAW,CACvD,CADyD,MAClD,KAAK,KAAK,QAAQ,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;AAKlF,MAAM,mBAAmB,GAAG,CAAC,KAAa,EAAU,CAC1D,CAD4D,aAC9C,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA,GAAA,EAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;AAE5D,MAAM,cAAc,GAAG,iBAAiB,CAAC;AACzC,MAAM,mBAAmB,GAAG,qBAAqB,CAAC;AAClD,MAAM,eAAe,GAAG,mBAAmB,CAAC;AAC5C,MAAM,oBAAoB,GAAG,uBAAuB,CAAC;AAI9C,MAAM,WAAW,GAAG,CAAC,IAAY,EAAE,MAAe,EAAW,EAAE;IACrE,mEAAmE;IAEnE,+BAA+B;IAC/B,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,OAAA,MAAA,CAAA,CAAA,GAAM,MAAM,EAAG,CAAC,CAAC,MAAM,CAAC;IAE5F,sBAAsB;IACtB,IAAI,KAAK,YAAY,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC1D,OAAO,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACvE,+DAA+D;QAC/D,MAAM,UAAU,GAAG,CAAC;eAAI,KAAwB;SAAC,CAAC;QAClD,OAAO,UAAU,CAAC,GAAG,EAAC,CAAC,CAAC,EAAG,AAAD,WAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,uCAAuC;IACvC,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,IAAI,KAAK,EAAE,CAAC;QACX,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,CAAC,GAAI,KAA4B,CAAC,MAAM,EAAE,CAAC;YACrD,2BAA2B;YAC3B,wOAAO,UAAA,AAAO,EAAC,KAAe,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC;IACF,CAAC;IAED,wCAAwC;IACxC,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,IAAI,KAAK,EAAE,CAAC;QACX,MAAM,QAAQ,OAAG,mOAAA,AAAY,EAAC,KAAK,CAAC,CAAC,CAAC,yNAAC,QAAA,AAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAE5D,2BAA2B;QAC3B,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACpC,IAAI,IAAI,EAAE,CAAC;YACV,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;YAEvB,IAAK,KAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;gBACxC,OAAO,IAAI,CAAC,CAAC;YACd,CAAC;YACD,wBAAwB;YACxB,MAAM,WAAW,GACf,QAAmB,CAAC,MAAM,GAAG,OAAO,IAClC,2OAAA,AAAQ,EAAC,KAAe,EAAE,IAAI,GAAG,CAAC,CAAC,GACnC,QAAQ,CAAC;YACb,OAAO,mBAAmB,CAAC,WAAqB,CAAC,CAAC;QACnD,CAAC;QAED,OAAO,mBAAmB,CAAC,QAAkB,CAAC,CAAC;IAChD,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAMK,MAAM,YAAY,GAAG,CAC3B,YAAqB,EACrB,IAAiC,EACtB,EAAE;IACb,MAAM,KAAK,GAAa,EAAE,CAAC;IAE3B,IAAI,CAAC,OAAO,EAAC,KAAK,CAAC,EAAE;QACpB,IAAI,OAAO,KAAK,CAAC,UAAU,KAAK,QAAQ,EAAE,CAAC;YAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;gBACrC,MAAM,wOAAI,WAAQ,CACjB,CAAA,qBAAA,EAAwB,KAAK,CAAC,IAAI,CAAA,iDAAA,CAAmD,CACrF,CAAC;YACH,CAAC;YACD,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC7C,MAAM,MAAM,GAAG,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3E,MAAM,MAAM,GAAG,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YAE5D,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,YAAY,EAAE,CAAC;gBAC3C,KAAK,CAAC,IAAI,CAAC,CAAA,MAAA,EAAS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,MAAM,EAAE,CAAC,CAAC;YACnD,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;gBAC1B,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,EAAI,MAAM,EAAE,CAAC,CAAC;YAC9C,CAAC,MAAM,CAAC;gBACP,KAAK,CAAC,IAAI,CAAC,CAAA,CAAA,EAAI,MAAM,CAAC,IAAI,EAAE,CAAA,CAAA,CAAG,CAAC,CAAC;YAClC,CAAC;QACF,CAAC,MAAM,CAAC;YACP,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAMK,MAAM,2BAA2B,GAAG,CAAC,IAAiB,EAAU,EAAE;;IACxE,wEAAwE;IACxE,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC;QACzF,IAAI,CAAA,KAAA,IAAI,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;QAED,OAAO,GAAG,CAAA,KAAA,IAAI,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAA,CAAA,EAAI,YAAY,CAAC,KAAK,EAAE,CAAA,KAAA,IAAI,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,CAAG,CAAC;IAClF,CAAC;IAED,uBAAuB;IACvB,OAAO,CAAA,CAAA,EAAI,YAAY,CAAC,KAAK,EAAE,CAAA,KAAA,IAAI,CAAC,MAAM,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,CAAG,CAAC;AAChE,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"file":"errors_api.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/api/errors_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n *\n *  @module ABI\n */\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiErrorFragment } from '../utils.js';\n\n/**\n * Encodes the error name to its ABI signature, which are the sha3 hash of the error name including input types.\n */\nexport const encodeErrorSignature = (functionName: string | AbiErrorFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiErrorFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeErrorSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;;GAGG;;;;;AAKH,OAAO,EAAE,2BAA2B,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAF9E,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AADvC,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;;;;AAQ9B,MAAM,oBAAoB,GAAG,CAAC,YAAuC,EAAU,EAAE;IACvF,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,EAAC,+RAAA,AAAkB,EAAC,YAAY,CAAC,EAAE,CAAC;QAC3E,MAAM,wOAAI,WAAQ,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,IAAY,CAAC;IAEjB,IAAI,YAAY,IAAI,CAAC,OAAO,YAAY,KAAK,UAAU,IAAI,OAAO,YAAY,KAAK,QAAQ,CAAC,EAAE,CAAC;QAC9F,IAAI,8QAAG,8BAAA,AAA2B,EAAC,YAAY,CAAC,CAAC;IAClD,CAAC,MAAM,CAAC;QACP,IAAI,GAAG,YAAY,CAAC;IACrB,CAAC;IAED,yNAAO,UAAA,AAAO,EAAC,IAAI,CAAC,CAAC;AACtB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"file":"events_api.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/api/events_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n *\n *  @module ABI\n */\n\nimport { sha3Raw } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { AbiEventFragment } from 'web3-types';\nimport { jsonInterfaceMethodToString, isAbiEventFragment } from '../utils.js';\n\n/**\n * Encodes the event name to its ABI signature, which are the sha3 hash of the event name including input types.\n * @param functionName - The event name to encode, or the {@link AbiEventFragment} object of the event. If string, it has to be in the form of `eventName(param1Type,param2Type,...)`. eg: myEvent(uint256,bytes32).\n * @returns - The ABI signature of the event.\n *\n * @example\n * ```ts\n * const event = web3.eth.abi.encodeEventSignature({\n *   name: \"myEvent\",\n *   type: \"event\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"bytes32\",\n *       name: \"myBytes\",\n *     },\n *   ],\n * });\n * console.log(event);\n * > 0xf2eeb729e636a8cb783be044acf6b7b1e2c5863735b60d6daae84c366ee87d97\n *\n *  const event = web3.eth.abi.encodeEventSignature({\n *   inputs: [\n *     {\n *       indexed: true,\n *       name: \"from\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: true,\n *       name: \"to\",\n *       type: \"address\",\n *     },\n *     {\n *       indexed: false,\n *       name: \"value\",\n *       type: \"uint256\",\n *     },\n *   ],\n *   name: \"Transfer\",\n *   type: \"event\",\n * });\n * console.log(event);\n * > 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n * ```\n */\nexport const encodeEventSignature = (functionName: string | AbiEventFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiEventFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeEventSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name);\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;;GAGG;;;;;AAKH,OAAO,EAAE,2BAA2B,EAAE,kBAAkB,EAAE,MAAM,aAAa,CAAC;AAF9E,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AADvC,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;;;;AAsD9B,MAAM,oBAAoB,GAAG,CAAC,YAAuC,EAAU,EAAE;IACvF,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,EAAC,+RAAA,AAAkB,EAAC,YAAY,CAAC,EAAE,CAAC;QAC3E,MAAM,wOAAI,WAAQ,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,IAAY,CAAC;IAEjB,IAAI,YAAY,IAAI,CAAC,OAAO,YAAY,KAAK,UAAU,IAAI,OAAO,YAAY,KAAK,QAAQ,CAAC,EAAE,CAAC;QAC9F,IAAI,8QAAG,8BAAA,AAA2B,EAAC,YAAY,CAAC,CAAC;IAClD,CAAC,MAAM,CAAC;QACP,IAAI,GAAG,YAAY,CAAC;IACrB,CAAC;IAED,yNAAO,UAAA,AAAO,EAAC,IAAI,CAAC,CAAC;AACtB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/utils.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter as ExternalAbiParameter, parseAbiParameter } from 'abitype';\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, AbiParameter, AbiStruct } from 'web3-types';\nimport { isNullish } from 'web3-utils';\nimport {\n\tisSimplifiedStructFormat,\n\tmapStructNameAndType,\n\tmapStructToCoderFormat,\n} from '../utils.js';\n\nexport const WORD_SIZE = 32;\n\nexport function alloc(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.alloc !== undefined) {\n\t\tconst buf = globalThis.Buffer.alloc(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0): Uint8Array {\n\tif (globalThis.Buffer?.allocUnsafe !== undefined) {\n\t\tconst buf = globalThis.Buffer.allocUnsafe(size);\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n\t}\n\n\treturn new Uint8Array(size);\n}\n\nexport function convertExternalAbiParameter(abiParam: ExternalAbiParameter): AbiParameter {\n\treturn {\n\t\t...abiParam,\n\t\tname: abiParam.name ?? '',\n\t\tcomponents: (abiParam as { components: readonly AbiParameter[] }).components?.map(c =>\n\t\t\tconvertExternalAbiParameter(c),\n\t\t),\n\t};\n}\n\nexport function isAbiParameter(param: unknown): param is AbiParameter {\n\treturn (\n\t\t!isNullish(param) &&\n\t\ttypeof param === 'object' &&\n\t\t!isNullish((param as { type: unknown }).type) &&\n\t\ttypeof (param as { type: unknown }).type === 'string'\n\t);\n}\n\nexport function toAbiParams(abi: ReadonlyArray<AbiInput>): ReadonlyArray<AbiParameter> {\n\treturn abi.map(input => {\n\t\tif (isAbiParameter(input)) {\n\t\t\treturn input;\n\t\t}\n\t\tif (typeof input === 'string') {\n\t\t\treturn convertExternalAbiParameter(parseAbiParameter(input.replace(/tuple/, '')));\n\t\t}\n\n\t\tif (isSimplifiedStructFormat(input)) {\n\t\t\tconst structName = Object.keys(input)[0];\n\t\t\tconst structInfo = mapStructNameAndType(structName);\n\t\t\tstructInfo.name = structInfo.name ?? '';\n\t\t\treturn {\n\t\t\t\t...structInfo,\n\t\t\t\tcomponents: mapStructToCoderFormat(\n\t\t\t\t\tinput[structName as keyof typeof input] as unknown as AbiStruct,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tthrow new AbiError('Invalid abi');\n\t});\n}\n\nexport function extractArrayType(param: AbiParameter): { size: number; param: AbiParameter } {\n\tconst arrayParenthesisStart = param.type.lastIndexOf('[');\n\tconst arrayParamType = param.type.substring(0, arrayParenthesisStart);\n\tconst sizeString = param.type.substring(arrayParenthesisStart);\n\tlet size = -1;\n\tif (sizeString !== '[]') {\n\t\tsize = Number(sizeString.slice(1, -1));\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tif (isNaN(size)) {\n\t\t\tthrow new AbiError('Invalid fixed array size', { size: sizeString });\n\t\t}\n\t}\n\treturn {\n\t\tparam: { type: arrayParamType, name: '', components: param.components },\n\t\tsize,\n\t};\n}\n\n/**\n * Param is dynamic if it's dynamic base type or if some of his children (components, array items)\n * is of dynamic type\n * @param param\n */\nexport function isDynamic(param: AbiParameter): boolean {\n\tif (param.type === 'string' || param.type === 'bytes' || param.type.endsWith('[]')) return true;\n\tif (param.type === 'tuple') {\n\t\treturn param.components?.some(isDynamic) ?? false;\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn isDynamic(extractArrayType(param).param);\n\t}\n\treturn false;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/address.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toChecksumAddress } from 'web3-utils';\nimport { isAddress, utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\n\nconst ADDRESS_BYTES_COUNT = 20;\nconst ADDRESS_OFFSET = WORD_SIZE - ADDRESS_BYTES_COUNT;\n\nexport function encodeAddress(param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('address type expects string as input type', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\tlet address = input.toLowerCase();\n\tif (!address.startsWith('0x')) {\n\t\taddress = `0x${address}`;\n\t}\n\tif (!isAddress(address)) {\n\t\tthrow new AbiError('provided input is not valid address', {\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\ttype: param.type,\n\t\t});\n\t}\n\t// for better performance, we could convert hex to destination bytes directly (encoded var)\n\tconst addressBytes = utils.hexToUint8Array(address);\n\t// expand address to WORD_SIZE\n\tconst encoded = alloc(WORD_SIZE);\n\tencoded.set(addressBytes, ADDRESS_OFFSET);\n\treturn {\n\t\tdynamic: false,\n\t\tencoded,\n\t};\n}\n\nexport function decodeAddress(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst addressBytes = bytes.subarray(ADDRESS_OFFSET, WORD_SIZE);\n\tif (addressBytes.length !== ADDRESS_BYTES_COUNT) {\n\t\tthrow new AbiError('Invalid decoding input, not enough bytes to decode address', { bytes });\n\t}\n\tconst result = utils.uint8ArrayToHexString(addressBytes);\n\n\t// should we check is decoded value is valid address?\n\t// if(!isAddress(result)) {\n\t//     throw new AbiError(\"encoded data is not valid address\", {\n\t//         address: result,\n\t//     });\n\t// }\n\treturn {\n\t\tresult: toChecksumAddress(result),\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;AACF,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;;;AAKvC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;;;AAF/C,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AADlD,OAAO,EAAE,iBAAiB,EAAE,MAAM,YAAY,CAAC;;;;;AAK/C,MAAM,mBAAmB,GAAG,EAAE,CAAC;AAC/B,MAAM,cAAc,oRAAG,YAAS,GAAG,mBAAmB,CAAC;AAEjD,SAAU,aAAa,CAAC,KAAmB,EAAE,KAAc;IAChE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC/B,MAAM,wOAAI,WAAQ,CAAC,2CAA2C,EAAE;YAC/D,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,IAAI,EAAE,KAAK,CAAC,IAAI;SAChB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IAClC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAA,EAAA,EAAK,OAAO,EAAE,CAAC;IAC1B,CAAC;IACD,IAAI,4OAAC,YAAA,AAAS,EAAC,OAAO,CAAC,EAAE,CAAC;QACzB,MAAM,wOAAI,WAAQ,CAAC,qCAAqC,EAAE;YACzD,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,KAAK,CAAC,IAAI;YAChB,IAAI,EAAE,KAAK,CAAC,IAAI;SAChB,CAAC,CAAC;IACJ,CAAC;IACD,2FAA2F;IAC3F,MAAM,YAAY,2PAAG,QAAK,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IACpD,8BAA8B;IAC9B,MAAM,OAAO,IAAG,4RAAA,AAAK,mRAAC,YAAS,CAAC,CAAC;IACjC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IAC1C,OAAO;QACN,OAAO,EAAE,KAAK;QACd,OAAO;KACP,CAAC;AACH,CAAC;AAEK,SAAU,aAAa,CAAC,MAAoB,EAAE,KAAiB;IACpE,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,cAAc,mRAAE,YAAS,CAAC,CAAC;IAC/D,IAAI,YAAY,CAAC,MAAM,KAAK,mBAAmB,EAAE,CAAC;QACjD,MAAM,wOAAI,WAAQ,CAAC,4DAA4D,EAAE;YAAE,KAAK;QAAA,CAAE,CAAC,CAAC;IAC7F,CAAC;IACD,MAAM,MAAM,GAAG,gQAAK,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;IAEzD,qDAAqD;IACrD,2BAA2B;IAC3B,gEAAgE;IAChE,2BAA2B;IAC3B,UAAU;IACV,IAAI;IACJ,OAAO;QACN,MAAM,0NAAE,oBAAA,AAAiB,EAAC,MAAM,CAAC;QACjC,OAAO,EAAE,KAAK,CAAC,QAAQ,kRAAC,YAAS,CAAC;QAClC,QAAQ,mRAAE,YAAS;KACnB,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"file":"numbersLimits.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/numbersLimits.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n */\nexport const numberLimits = new Map<string, { min: bigint; max: bigint }>();\n\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n\tnumberLimits.set(`uint${i}`, {\n\t\tmin: BigInt(0),\n\t\tmax: base - BigInt(1),\n\t});\n\tnumberLimits.set(`int${i}`, {\n\t\tmin: -base / BigInt(2),\n\t\tmax: base / BigInt(2) - BigInt(1),\n\t});\n\tbase *= BigInt(256);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256')!);\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256')!);\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;GAEG;;;AACI,MAAM,YAAY,GAAG,IAAI,GAAG,EAAwC,CAAC;AAE5E,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc;AACtC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE,CAAC;IAClC,YAAY,CAAC,GAAG,CAAC,CAAA,IAAA,EAAO,CAAC,EAAE,EAAE;QAC5B,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;QACd,GAAG,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;KACrB,CAAC,CAAC;IACH,YAAY,CAAC,GAAG,CAAC,CAAA,GAAA,EAAM,CAAC,EAAE,EAAE;QAC3B,GAAG,EAAE,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;QACtB,GAAG,EAAE,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;KACjC,CAAC,CAAC;IACH,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC;AAED,oEAAoE;AACpE,YAAY,CAAC,GAAG,CAAC,CAAA,GAAA,CAAK,EAAE,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC,CAAC;AACrD,oEAAoE;AACpE,YAAY,CAAC,GAAG,CAAC,CAAA,IAAA,CAAM,EAAE,YAAY,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"file":"number.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/number.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiError } from 'web3-errors';\nimport type { AbiParameter } from 'web3-types';\nimport { padLeft, toBigInt } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { numberLimits } from './numbersLimits.js';\n\n// eslint-disable-next-line no-bitwise\nconst mask = BigInt(1) << BigInt(256);\n\nfunction bigIntToUint8Array(value: bigint, byteLength = WORD_SIZE): Uint8Array {\n\tlet hexValue;\n\tif (value < 0) {\n\t\thexValue = (mask + value).toString(16);\n\t} else {\n\t\thexValue = value.toString(16);\n\t}\n\thexValue = padLeft(hexValue, byteLength * 2);\n\treturn utils.hexToUint8Array(hexValue);\n}\n\nfunction uint8ArrayToBigInt(value: Uint8Array, max: bigint): bigint {\n\tconst hexValue = utils.uint8ArrayToHexString(value);\n\tconst result = BigInt(hexValue);\n\tif (result <= max) return result;\n\treturn result - mask;\n}\n\nexport function encodeNumber(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBigInt(input);\n\t} catch (e) {\n\t\tthrow new AbiError('provided input is not number value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tif (value < limit.min) {\n\t\tthrow new AbiError('provided input is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (value > limit.max) {\n\t\tthrow new AbiError('provided input is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: bigIntToUint8Array(value),\n\t};\n}\n\nexport function decodeNumber(param: AbiParameter, bytes: Uint8Array): DecoderResult<bigint> {\n\tif (bytes.length < WORD_SIZE) {\n\t\tthrow new AbiError('Not enough bytes left to decode', { param, bytesLeft: bytes.length });\n\t}\n\tconst boolBytes = bytes.subarray(0, WORD_SIZE);\n\tconst limit = numberLimits.get(param.type);\n\tif (!limit) {\n\t\tthrow new AbiError('provided abi contains invalid number datatype', { type: param.type });\n\t}\n\tconst numberResult = uint8ArrayToBigInt(boolBytes, limit.max);\n\n\tif (numberResult < limit.min) {\n\t\tthrow new AbiError('decoded value is less then minimum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tminimum: limit.min.toString(),\n\t\t});\n\t}\n\tif (numberResult > limit.max) {\n\t\tthrow new AbiError('decoded value is greater then maximum for given type', {\n\t\t\ttype: param.type,\n\t\t\tvalue: numberResult,\n\t\t\tname: param.name,\n\t\t\tmaximum: limit.max.toString(),\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult,\n\t\tencoded: bytes.subarray(WORD_SIZE),\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"file":"bool.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/bool.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError, InvalidBooleanError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { toBool } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nexport function encodeBoolean(param: AbiParameter, input: unknown): EncoderResult {\n\tlet value;\n\ttry {\n\t\tvalue = toBool(input);\n\t} catch (e) {\n\t\tif (e instanceof InvalidBooleanError) {\n\t\t\tthrow new AbiError('provided input is not valid boolean value', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn encodeNumber({ type: 'uint8', name: '' }, Number(value));\n}\n\nexport function decodeBool(_param: AbiParameter, bytes: Uint8Array): DecoderResult<boolean> {\n\tconst numberResult = decodeNumber({ type: 'uint8', name: '' }, bytes);\n\tif (numberResult.result > 1 || numberResult.result < 0) {\n\t\tthrow new AbiError('Invalid boolean value encoded', {\n\t\t\tboolBytes: bytes.subarray(0, WORD_SIZE),\n\t\t\tnumberResult,\n\t\t});\n\t}\n\treturn {\n\t\tresult: numberResult.result === BigInt(1),\n\t\tencoded: numberResult.encoded,\n\t\tconsumed: WORD_SIZE,\n\t};\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;AACF,OAAO,EAAE,QAAQ,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;;AAI5D,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AAHzD,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;;;;;;;AAK9B,SAAU,aAAa,CAAC,KAAmB,EAAE,KAAc;IAChE,IAAI,KAAK,CAAC;IACV,IAAI,CAAC;QACJ,KAAK,GAAG,iOAAA,AAAM,EAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;QACZ,IAAI,CAAC,8OAAY,sBAAmB,EAAE,CAAC;YACtC,MAAM,wOAAI,WAAQ,CAAC,2CAA2C,EAAE;gBAC/D,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;aAChB,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAED,QAAO,4SAAA,AAAY,EAAC;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;IAAA,CAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACjE,CAAC;AAEK,SAAU,UAAU,CAAC,MAAoB,EAAE,KAAiB;IACjE,MAAM,YAAY,iSAAG,eAAA,AAAY,EAAC;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;IAAA,CAAE,EAAE,KAAK,CAAC,CAAC;IACtE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACxD,MAAM,wOAAI,WAAQ,CAAC,+BAA+B,EAAE;YACnD,SAAS,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,mRAAE,YAAS,CAAC;YACvC,YAAY;SACZ,CAAC,CAAC;IACJ,CAAC;IACD,OAAO;QACN,MAAM,EAAE,YAAY,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,YAAY,CAAC,OAAO;QAC7B,QAAQ,mRAAE,YAAS;KACnB,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"file":"bytes.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/bytes.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter, Bytes } from 'web3-types';\nimport { bytesToHex, bytesToUint8Array } from 'web3-utils';\nimport { isBytes, ValidInputTypes } from 'web3-validator';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { alloc, WORD_SIZE } from '../utils.js';\nimport { decodeNumber, encodeNumber } from './number.js';\n\nconst MAX_STATIC_BYTES_COUNT = 32;\n\nexport function encodeBytes(param: AbiParameter, input: unknown): EncoderResult {\n\t// hack for odd length hex strings\n\tif (typeof input === 'string' && input.length % 2 !== 0) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tinput += '0';\n\t}\n\tif (!isBytes(input as ValidInputTypes)) {\n\t\tthrow new AbiError('provided input is not valid bytes value', {\n\t\t\ttype: param.type,\n\t\t\tvalue: input,\n\t\t\tname: param.name,\n\t\t});\n\t}\n\tconst bytes = bytesToUint8Array(input as Bytes);\n\tconst [, size] = param.type.split('bytes');\n\t// fixed size\n\tif (size) {\n\t\tif (Number(size) > MAX_STATIC_BYTES_COUNT || Number(size) < 1) {\n\t\t\tthrow new AbiError(\n\t\t\t\t'invalid bytes type. Static byte type can have between 1 and 32 bytes',\n\t\t\t\t{\n\t\t\t\t\ttype: param.type,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tif (Number(size) < bytes.length) {\n\t\t\tthrow new AbiError('provided input size is different than type size', {\n\t\t\t\ttype: param.type,\n\t\t\t\tvalue: input,\n\t\t\t\tname: param.name,\n\t\t\t});\n\t\t}\n\t\tconst encoded = alloc(WORD_SIZE);\n\t\tencoded.set(bytes);\n\t\treturn {\n\t\t\tdynamic: false,\n\t\t\tencoded,\n\t\t};\n\t}\n\n\tconst partsLength = Math.ceil(bytes.length / WORD_SIZE);\n\t// one word for length of data + WORD for each part of actual data\n\tconst encoded = alloc(WORD_SIZE + partsLength * WORD_SIZE);\n\n\tencoded.set(encodeNumber({ type: 'uint32', name: '' }, bytes.length).encoded);\n\tencoded.set(bytes, WORD_SIZE);\n\treturn {\n\t\tdynamic: true,\n\t\tencoded,\n\t};\n}\n\nexport function decodeBytes(param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst [, sizeString] = param.type.split('bytes');\n\tlet size = Number(sizeString);\n\tlet remainingBytes = bytes;\n\tlet partsCount = 1;\n\tlet consumed = 0;\n\tif (!size) {\n\t\t// dynamic bytes\n\t\tconst result = decodeNumber({ type: 'uint32', name: '' }, remainingBytes);\n\t\tsize = Number(result.result);\n\t\tconsumed += result.consumed;\n\t\tremainingBytes = result.encoded;\n\t\tpartsCount = Math.ceil(size / WORD_SIZE);\n\t}\n\tif (size > bytes.length) {\n\t\tthrow new AbiError('there is not enough data to decode', {\n\t\t\ttype: param.type,\n\t\t\tencoded: bytes,\n\t\t\tsize,\n\t\t});\n\t}\n\n\treturn {\n\t\tresult: bytesToHex(remainingBytes.subarray(0, size)),\n\t\tencoded: remainingBytes.subarray(partsCount * WORD_SIZE),\n\t\tconsumed: consumed + partsCount * WORD_SIZE,\n\t};\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"file":"string.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/string.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { hexToUtf8, utf8ToBytes } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\n\nexport function encodeString(_param: AbiParameter, input: unknown): EncoderResult {\n\tif (typeof input !== 'string') {\n\t\tthrow new AbiError('invalid input, should be string', { input });\n\t}\n\tconst bytes = utf8ToBytes(input);\n\treturn encodeBytes({ type: 'bytes', name: '' }, bytes);\n}\n\nexport function decodeString(_param: AbiParameter, bytes: Uint8Array): DecoderResult<string> {\n\tconst r = decodeBytes({ type: 'bytes', name: '' }, bytes);\n\treturn {\n\t\tresult: hexToUtf8(r.result),\n\t\tencoded: r.encoded,\n\t\tconsumed: r.consumed,\n\t};\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;AAKF,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAJtD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;;;;AAI9C,SAAU,YAAY,CAAC,MAAoB,EAAE,KAAc;IAChE,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC/B,MAAM,wOAAI,WAAQ,CAAC,iCAAiC,EAAE;YAAE,KAAK;QAAA,CAAE,CAAC,CAAC;IAClE,CAAC;IACD,MAAM,KAAK,2NAAG,cAAW,AAAX,EAAY,KAAK,CAAC,CAAC;IACjC,oSAAO,cAAA,AAAW,EAAC;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;IAAA,CAAE,EAAE,KAAK,CAAC,CAAC;AACxD,CAAC;AAEK,SAAU,YAAY,CAAC,MAAoB,EAAE,KAAiB;IACnE,MAAM,CAAC,gSAAG,cAAA,AAAW,EAAC;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;IAAA,CAAE,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO;QACN,MAAM,0NAAE,YAAA,AAAS,EAAC,CAAC,CAAC,MAAM,CAAC;QAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;QAClB,QAAQ,EAAE,CAAC,CAAC,QAAQ;KACpB,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/utils.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\n\nexport function encodeDynamicParams(encodedParams: ReadonlyArray<EncoderResult>): Uint8Array {\n\tlet staticSize = 0;\n\tlet dynamicSize = 0;\n\tconst staticParams: EncoderResult[] = [];\n\tconst dynamicParams: EncoderResult[] = [];\n\t// figure out static size\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticSize += WORD_SIZE;\n\t\t} else {\n\t\t\tstaticSize += encodedParam.encoded.length;\n\t\t}\n\t}\n\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticParams.push(\n\t\t\t\tencodeNumber({ type: 'uint256', name: '' }, staticSize + dynamicSize),\n\t\t\t);\n\t\t\tdynamicParams.push(encodedParam);\n\t\t\tdynamicSize += encodedParam.encoded.length;\n\t\t} else {\n\t\t\tstaticParams.push(encodedParam);\n\t\t}\n\t}\n\treturn uint8ArrayConcat(\n\t\t...staticParams.map(p => p.encoded),\n\t\t...dynamicParams.map(p => p.encoded),\n\t);\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AACF,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAE9C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;;;;;AAErC,SAAU,mBAAmB,CAAC,aAA2C;IAC9E,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,MAAM,YAAY,GAAoB,EAAE,CAAC;IACzC,MAAM,aAAa,GAAoB,EAAE,CAAC;IAC1C,yBAAyB;IACzB,KAAK,MAAM,YAAY,IAAI,aAAa,CAAE,CAAC;QAC1C,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YAC1B,UAAU,oRAAI,aAAS,CAAC;QACzB,CAAC,MAAM,CAAC;YACP,UAAU,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAC3C,CAAC;IACF,CAAC;IAED,KAAK,MAAM,YAAY,IAAI,aAAa,CAAE,CAAC;QAC1C,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YAC1B,YAAY,CAAC,IAAI,EAChB,4SAAA,AAAY,EAAC;gBAAE,IAAI,EAAE,SAAS;gBAAE,IAAI,EAAE,EAAE;YAAA,CAAE,EAAE,UAAU,GAAG,WAAW,CAAC,CACrE,CAAC;YACF,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjC,WAAW,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAC5C,CAAC,MAAM,CAAC;YACP,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;IACD,+NAAO,mBAAA,AAAgB,CACtB,IAAG,YAAY,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,OAAO,CAAC,EACnC,GAAG,aAAa,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,OAAO,CAAC,CACpC,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiParameter } from 'web3-types';\nimport { AbiError } from 'web3-errors';\nimport { EncoderResult, DecoderResult } from '../types.js';\nimport { decodeAddress, encodeAddress } from './address.js';\nimport { decodeBool, encodeBoolean } from './bool.js';\nimport { decodeBytes, encodeBytes } from './bytes.js';\nimport { decodeNumber, encodeNumber } from './number.js';\nimport { decodeString, encodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeTuple, encodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeArray, encodeArray } from './array.js';\n\nexport { encodeAddress, decodeAddress } from './address.js';\nexport { encodeBoolean, decodeBool } from './bool.js';\nexport { encodeBytes, decodeBytes } from './bytes.js';\nexport { encodeNumber, decodeNumber } from './number.js';\nexport { encodeString, decodeString } from './string.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeTuple, decodeTuple } from './tuple.js';\n// eslint-disable-next-line import/no-cycle\nexport { encodeArray, decodeArray } from './array.js';\n\nexport function encodeParamFromAbiParameter(param: AbiParameter, value: unknown): EncoderResult {\n\tif (param.type === 'string') {\n\t\treturn encodeString(param, value);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn encodeBoolean(param, value);\n\t}\n\tif (param.type === 'address') {\n\t\treturn encodeAddress(param, value);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn encodeTuple(param, value);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn encodeArray(param, value);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn encodeBytes(param, value);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn encodeNumber(param, value);\n\t}\n\tthrow new AbiError('Unsupported', {\n\t\tparam,\n\t\tvalue,\n\t});\n}\n\nexport function decodeParamFromAbiParameter(param: AbiParameter, bytes: Uint8Array): DecoderResult {\n\tif (param.type === 'string') {\n\t\treturn decodeString(param, bytes);\n\t}\n\tif (param.type === 'bool') {\n\t\treturn decodeBool(param, bytes);\n\t}\n\tif (param.type === 'address') {\n\t\treturn decodeAddress(param, bytes);\n\t}\n\tif (param.type === 'tuple') {\n\t\treturn decodeTuple(param, bytes);\n\t}\n\tif (param.type.endsWith(']')) {\n\t\treturn decodeArray(param, bytes);\n\t}\n\tif (param.type.startsWith('bytes')) {\n\t\treturn decodeBytes(param, bytes);\n\t}\n\tif (param.type.startsWith('uint') || param.type.startsWith('int')) {\n\t\treturn decodeNumber(param, bytes);\n\t}\n\tthrow new AbiError('Unsupported', {\n\t\tparam,\n\t\tbytes,\n\t});\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1085, "column": 0}, "map": {"version":3,"file":"array.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/array.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\n\nexport function encodeArray(param: AbiParameter, values: unknown): EncoderResult {\n\tif (!Array.isArray(values)) {\n\t\tthrow new AbiError('Expected value to be array', { abi: param, values });\n\t}\n\tconst { size, param: arrayItemParam } = extractArrayType(param);\n\tconst encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n\tconst dynamic = size === -1;\n\tconst dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n\tif (!dynamic && values.length !== size) {\n\t\tthrow new AbiError(\"Given arguments count doesn't match array length\", {\n\t\t\tarrayLength: size,\n\t\t\targumentsLength: values.length,\n\t\t});\n\t}\n\tif (dynamic || dynamicItems) {\n\t\tconst encodingResult = encodeDynamicParams(encodedParams);\n\t\tif (dynamic) {\n\t\t\tconst encodedLength = encodeNumber(\n\t\t\t\t{ type: 'uint256', name: '' },\n\t\t\t\tencodedParams.length,\n\t\t\t).encoded;\n\t\t\treturn {\n\t\t\t\tdynamic: true,\n\t\t\t\tencoded:\n\t\t\t\t\tencodedParams.length > 0\n\t\t\t\t\t\t? uint8ArrayConcat(encodedLength, encodingResult)\n\t\t\t\t\t\t: encodedLength,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodingResult,\n\t\t};\n\t}\n\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n\t};\n}\n\nexport function decodeArray(param: AbiParameter, bytes: Uint8Array): DecoderResult<unknown[]> {\n\t// eslint-disable-next-line prefer-const\n\tlet { size, param: arrayItemParam } = extractArrayType(param);\n\tconst dynamic = size === -1;\n\n\tlet consumed = 0;\n\tconst result: unknown[] = [];\n\tlet remaining = bytes;\n\t// dynamic array, we need to decode length\n\tif (dynamic) {\n\t\tconst lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n\t\tsize = Number(lengthResult.result);\n\t\tconsumed = lengthResult.consumed;\n\t\tremaining = lengthResult.encoded;\n\t}\n\tconst hasDynamicChild = isDynamic(arrayItemParam);\n\tif (hasDynamicChild) {\n\t\t// known length but dynamic child, each child is actually head element with encoded offset\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tremaining.subarray(i * WORD_SIZE),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\t\tarrayItemParam,\n\t\t\t\tremaining.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += decodedChildResult.consumed;\n\t\t\tresult.push(decodedChildResult.result);\n\t\t}\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: remaining.subarray(consumed),\n\t\t\tconsumed,\n\t\t};\n\t}\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\t// decode static params\n\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\tarrayItemParam,\n\t\t\tbytes.subarray(consumed),\n\t\t);\n\t\tconsumed += decodedChildResult.consumed;\n\t\tresult.push(decodedChildResult.result);\n\t}\n\treturn {\n\t\tresult,\n\t\tencoded: bytes.subarray(consumed),\n\t\tconsumed,\n\t};\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"file":"tuple.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/base/tuple.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { DecoderResult, EncoderResult } from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeParamFromAbiParameter } from './index.js';\nimport { encodeDynamicParams } from './utils.js';\nimport { isDynamic } from '../utils.js';\nimport { decodeNumber } from './number.js';\n\nexport function encodeTuple(param: AbiParameter, input: unknown): EncoderResult {\n\tlet dynamic = false;\n\tif (!Array.isArray(input) && typeof input !== 'object') {\n\t\tthrow new AbiError('param must be either Array or Object', {\n\t\t\tparam,\n\t\t\tinput,\n\t\t});\n\t}\n\tconst narrowedInput = input as Array<unknown> | Record<string, unknown>;\n\tconst encoded: Array<EncoderResult> = [];\n\tfor (let i = 0; i < (param.components?.length ?? 0); i += 1) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst paramComponent = param.components![i];\n\t\tlet result: EncoderResult;\n\t\tif (Array.isArray(narrowedInput)) {\n\t\t\tif (i >= narrowedInput.length) {\n\t\t\t\tthrow new AbiError('input param length missmatch', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, narrowedInput[i]);\n\t\t} else {\n\t\t\tconst paramInput = narrowedInput[paramComponent.name ?? ''];\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (paramInput === undefined || paramInput === null) {\n\t\t\t\tthrow new AbiError('missing input defined in abi', {\n\t\t\t\t\tparam,\n\t\t\t\t\tinput,\n\t\t\t\t\tparamName: paramComponent.name,\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult = encodeParamFromAbiParameter(paramComponent, paramInput);\n\t\t}\n\t\tif (result.dynamic) {\n\t\t\tdynamic = true;\n\t\t}\n\t\tencoded.push(result);\n\t}\n\n\tif (dynamic) {\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodeDynamicParams(encoded),\n\t\t};\n\t}\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encoded.map(e => e.encoded)),\n\t};\n}\n\nexport function decodeTuple(\n\tparam: AbiParameter,\n\tbytes: Uint8Array,\n): DecoderResult<{ [key: string]: unknown; __length__: number }> {\n\tconst result: { [key: string]: unknown; __length__: number } = {\n\t\t__length__: 0,\n\t};\n\n\t// tracks how much static params consumed bytes\n\tlet consumed = 0;\n\n\tif (!param.components) {\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: bytes,\n\t\t\tconsumed,\n\t\t};\n\t}\n\t// track how much dynamic params consumed bytes\n\tlet dynamicConsumed = 0;\n\tfor (const [index, childParam] of param.components.entries()) {\n\t\tlet decodedResult: DecoderResult;\n\t\tif (isDynamic(childParam)) {\n\t\t\t// if dynamic, we will have offset encoded\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tbytes.subarray(consumed),\n\t\t\t);\n\t\t\t// offset counts from start of original byte sequence\n\t\t\tdecodedResult = decodeParamFromAbiParameter(\n\t\t\t\tchildParam,\n\t\t\t\tbytes.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tdynamicConsumed += decodedResult.consumed;\n\t\t} else {\n\t\t\t// static param, just decode\n\t\t\tdecodedResult = decodeParamFromAbiParameter(childParam, bytes.subarray(consumed));\n\t\t\tconsumed += decodedResult.consumed;\n\t\t}\n\t\tresult.__length__ += 1;\n\t\tresult[index] = decodedResult.result;\n\t\tif (childParam.name && childParam.name !== '') {\n\t\t\tresult[childParam.name] = decodedResult.result;\n\t\t}\n\t}\n\treturn {\n\t\tencoded: bytes.subarray(consumed + dynamicConsumed),\n\t\tresult,\n\t\tconsumed: consumed + dynamicConsumed,\n\t};\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1365, "column": 0}, "map": {"version":3,"file":"decode.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/decode.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AbiInput, HexString } from 'web3-types';\nimport { utils } from 'web3-validator';\nimport { decodeTuple } from './base/tuple.js';\nimport { toAbiParams } from './utils.js';\n\nexport function decodeParameters(\n\tabis: AbiInput[] | ReadonlyArray<AbiInput>,\n\tbytes: HexString,\n\t_loose: boolean,\n): { [key: string]: unknown; __length__: number } {\n\tconst abiParams = toAbiParams(abis);\n\tconst bytesArray = utils.hexToUint8Array(bytes);\n\n\treturn decodeTuple({ type: 'tuple', name: '', components: abiParams }, bytesArray).result;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;AAIF,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAFzC,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;;;;AAIjC,SAAU,gBAAgB,CAC/B,IAA0C,EAC1C,KAAgB,EAChB,MAAe;IAEf,MAAM,SAAS,wRAAG,cAAA,AAAW,EAAC,IAAI,CAAC,CAAC;IACpC,MAAM,UAAU,2PAAG,QAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAEhD,oSAAO,cAAA,AAAW,EAAC;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;QAAE,UAAU,EAAE,SAAS;IAAA,CAAE,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC;AAC3F,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"file":"encode.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/coders/encode.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, AbiParameter } from 'web3-types';\nimport { toHex } from 'web3-utils';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\n\n/**\n * @param params - The params to infer the ABI from\n * @returns The inferred ABI\n * @example\n * ```\n * inferParamsAbi([1, -1, 'hello', '0x1234', ])\n * ```\n * > [{ type: 'int256' }, { type: 'uint256' }, { type: 'string' }, { type: 'bytes' }]\n * ```\n */\nfunction inferParamsAbi(params: unknown[]): ReadonlyArray<AbiParameter> {\n\tconst abi: AbiParameter[] = [];\n\tparams.forEach(param => {\n\t\tif (Array.isArray(param)) {\n\t\t\tconst inferredParams = inferParamsAbi(param);\n\t\t\tabi.push({\n\t\t\t\ttype: 'tuple',\n\t\t\t\tcomponents: inferredParams,\n\t\t\t\tname: '',\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t} as AbiParameter);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\tabi.push({ type: toHex(param as object, true) } as AbiParameter);\n\t\t}\n\t});\n\treturn abi;\n}\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi - An array of {@link AbiInput}. See [Solidity's documentation](https://solidity.readthedocs.io/en/v0.5.3/abi-spec.html#json) for more details.\n * @param params - The actual parameters to encode.\n * @returns - The ABI encoded parameters\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"uint256\", \"string\"],\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function encodeParameters(abi: ReadonlyArray<AbiInput>, params: unknown[]): string {\n\tif (abi?.length !== params.length) {\n\t\tthrow new AbiError('Invalid number of values received for given ABI', {\n\t\t\texpected: abi?.length,\n\t\t\treceived: params.length,\n\t\t});\n\t}\n\n\tconst abiParams = toAbiParams(abi);\n\treturn utils.uint8ArrayToHexString(\n\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t);\n}\n\n/**\n * Infer a smart contract method parameter type and then encode this parameter.\n * @param params - The parameters to encode.\n * @returns - The ABI encoded parameters\n *\n * @remarks\n * This method is useful when you don't know the type of the parameters you want to encode. It will infer the type of the parameters and then encode them.\n * However, it is not recommended to use this method when you know the type of the parameters you want to encode. In this case, use the {@link encodeParameters} method instead.\n * The type inference is not perfect and can lead to unexpected results. Especially when you want to encode an array, uint that is not uint256 or bytes....\n * @example\n * ```ts\n * const res = web3.eth.abi.encodeParameters(\n *    [\"2345675643\", \"Hello!%\"]\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n * ```\n */\nexport function inferTypesAndEncodeParameters(params: unknown[]): string {\n\ttry {\n\t\tconst abiParams = inferParamsAbi(params);\n\t\treturn utils.uint8ArrayToHexString(\n\t\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t\t);\n\t} catch (e) {\n\t\t// throws If the inferred params type caused an error\n\t\tthrow new AbiError('Could not infer types from given params', {\n\t\t\tparams,\n\t\t});\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;AACF,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;;;;AAKvC,OAAO,EAAE,WAAW,EAAE,MAAM,YAAY,CAAC;AAHzC,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;;;;;;AAG9C;;;;;;;;;GASG,CACH,SAAS,cAAc,CAAC,MAAiB;IACxC,MAAM,GAAG,GAAmB,EAAE,CAAC;IAC/B,MAAM,CAAC,OAAO,EAAC,KAAK,CAAC,EAAE;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,cAAc,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YAC7C,GAAG,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,OAAO;gBACb,UAAU,EAAE,cAAc;gBAC1B,IAAI,EAAE,EAAE;aAEQ,CAAC,CAAC;QACpB,CAAC,MAAM,CAAC;YACP,iEAAiE;YACjE,GAAG,CAAC,IAAI,CAAC;gBAAE,IAAI,0NAAE,QAAA,AAAK,EAAC,KAAe,EAAE,IAAI,CAAC;YAAA,CAAkB,CAAC,CAAC;QAClE,CAAC;IACF,CAAC,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;AACZ,CAAC;AAkBK,SAAU,gBAAgB,CAAC,GAA4B,EAAE,MAAiB;IAC/E,IAAI,CAAA,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,MAAM,MAAK,MAAM,CAAC,MAAM,EAAE,CAAC;QACnC,MAAM,wOAAI,WAAQ,CAAC,iDAAiD,EAAE;YACrE,QAAQ,EAAE,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,MAAM;YACrB,QAAQ,EAAE,MAAM,CAAC,MAAM;SACvB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,SAAS,wRAAG,cAAA,AAAW,EAAC,GAAG,CAAC,CAAC;IACnC,+PAAO,QAAK,CAAC,qBAAqB,8RACjC,cAAW,AAAX,EAAY;QAAE,IAAI,EAAE,OAAO;QAAE,IAAI,EAAE,EAAE;QAAE,UAAU,EAAE,SAAS;IAAA,CAAE,EAAE,MAAM,CAAC,CAAC,OAAO,CAC/E,CAAC;AACH,CAAC;AAqBK,SAAU,6BAA6B,CAAC,MAAiB;IAC9D,IAAI,CAAC;QACJ,MAAM,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;QACzC,8PAAO,SAAK,CAAC,qBAAqB,8RACjC,cAAA,AAAW,EAAC;YAAE,IAAI,EAAE,OAAO;YAAE,IAAI,EAAE,EAAE;YAAE,UAAU,EAAE,SAAS;QAAA,CAAE,EAAE,MAAM,CAAC,CAAC,OAAO,CAC/E,CAAC;IACH,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;QACZ,qDAAqD;QACrD,MAAM,wOAAI,WAAQ,CAAC,yCAAyC,EAAE;YAC7D,MAAM;SACN,CAAC,CAAC;IACJ,CAAC;AACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"file":"parameters_api.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/api/parameters_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n *\n *  @module ABI\n */\n\nimport { AbiError } from 'web3-errors';\nimport { AbiInput, HexString } from 'web3-types';\nimport { decodeParameters as decodeParametersInternal } from '../coders/decode.js';\nimport { encodeParameters } from '../coders/encode.js';\n\nexport { encodeParameters, inferTypesAndEncodeParameters } from '../coders/encode.js';\n\n/**\n * Encodes a parameter based on its type to its ABI representation.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param param - The actual parameter to encode.\n * @returns -  The ABI encoded parameter\n * @example\n * ```ts\n *  const res = web3.eth.abi.encodeParameter(\"uint256\", \"2345675643\");\n *  console.log(res);\n *  0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *  const res = web3.eth.abi.encodeParameter(\"uint\", \"2345675643\");\n *\n *  console.log(res);\n *  >0x000000000000000000000000000000000000000000000000000000008bd02b7b\n *\n *    const res = web3.eth.abi.encodeParameter(\"bytes32\", \"0xdf3234\");\n *\n *  console.log(res);\n *  >0xdf32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes\", \"0xdf3234\");\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003df32340000000000000000000000000000000000000000000000000000000000\n *\n *   const res = web3.eth.abi.encodeParameter(\"bytes32[]\", [\"0xdf3234\", \"0xfdfd\"]);\n *\n *  console.log(res);\n *  > 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002df32340000000000000000000000000000000000000000000000000000000000fdfd000000000000000000000000000000000000000000000000000000000000\n *\n *  const res = web3.eth.abi.encodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    {\n *      propertyOne: 42,\n *      propertyTwo: 56,\n *      childStruct: {\n *        propertyOne: 45,\n *        propertyTwo: 78,\n *      },\n *    }\n *  );\n *\n *  console.log(res);\n *  > 0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\n * ```\n */\nexport const encodeParameter = (abi: AbiInput, param: unknown): string =>\n\tencodeParameters([abi], [param]);\n/**\n * Should be used to decode list of params\n */\nexport const decodeParametersWith = (\n\tabis: AbiInput[] | ReadonlyArray<AbiInput>,\n\tbytes: HexString,\n\tloose: boolean,\n): { [key: string]: unknown; __length__: number } => {\n\ttry {\n\t\tif (abis.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {\n\t\t\tthrow new AbiError(\n\t\t\t\t\"Returned values aren't valid, did it run Out of Gas? \" +\n\t\t\t\t\t'You might also see this error if you are not using the ' +\n\t\t\t\t\t'correct ABI for the contract you are retrieving data from, ' +\n\t\t\t\t\t'requesting data from a block number that does not exist, ' +\n\t\t\t\t\t'or querying a node which is not fully synced.',\n\t\t\t);\n\t\t}\n\t\treturn decodeParametersInternal(abis, `0x${bytes.replace(/0x/i, '')}`, loose);\n\t} catch (err) {\n\t\tthrow new AbiError(`Parameter decoding error: ${(err as Error).message}`, {\n\t\t\tinternalErr: err,\n\t\t});\n\t}\n};\n\n/**\n * Should be used to decode list of params\n */\n/**\n * Decodes ABI encoded parameters to its JavaScript types.\n * @param abi -  An array of {@link AbiInput}. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The result object containing the decoded parameters.\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeParameters(\n *    [\"string\", \"uint256\"],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *  console.log(res);\n *  > { '0': 'Hello!%!', '1': 234n, __length__: 2 }\n *\n * let res = web3.eth.abi.decodeParameters(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *      },\n *    ],\n *    \"0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n * console.log(res);\n *  > {\n *  '0': 'Hello!%!',\n *  '1': 234n,\n *  __length__: 2,\n *  myString: 'Hello!%!',\n *  myNumber: 234n\n * }\n *\n * const res = web3.eth.abi.decodeParameters(\n *    [\n *      \"uint8[]\",\n *      {\n *        ParentStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *          childStruct: {\n *            propertyOne: \"uint256\",\n *            propertyTwo: \"uint256\",\n *          },\n *        },\n *      },\n *    ],\n *    \"0x00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000018\"\n *  );\n *  console.log(res);\n *  >\n *  '0': [ 42n, 24n ],\n *  '1': {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  },\n *  __length__: 2,\n *  ParentStruct: {\n *    '0': 42n,\n *    '1': 56n,\n *    '2': {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    },\n *    __length__: 3,\n *    propertyOne: 42n,\n *    propertyTwo: 56n,\n *    childStruct: {\n *      '0': 45n,\n *      '1': 78n,\n *      __length__: 2,\n *      propertyOne: 45n,\n *      propertyTwo: 78n\n *    }\n *  }\n *}\n * ```\n */\nexport const decodeParameters = (\n\tabi: AbiInput[] | ReadonlyArray<AbiInput>,\n\tbytes: HexString,\n): { [key: string]: unknown; __length__: number } => decodeParametersWith(abi, bytes, false);\n\n/**\n * Should be used to decode bytes to plain param\n */\n/**\n * Decodes an ABI encoded parameter to its JavaScript type.\n * @param abi -  The type of the parameter. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param bytes - The ABI byte code to decode\n * @returns - The decoded parameter\n * @example\n * ```ts\n *   const res = web3.eth.abi.decodeParameter(\n *    \"uint256\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000010\"\n *  );\n *  console.log(res);\n * > 16n\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    \"string\",\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000\"\n *  );\n *\n *  console.log(res);\n *  > Hello!%!\n *\n *  const res = web3.eth.abi.decodeParameter(\n *    {\n *      ParentStruct: {\n *        propertyOne: \"uint256\",\n *        propertyTwo: \"uint256\",\n *        childStruct: {\n *          propertyOne: \"uint256\",\n *          propertyTwo: \"uint256\",\n *        },\n *      },\n *    },\n *    \"0x000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000002d000000000000000000000000000000000000000000000000000000000000004e\"\n *  );\n *\n *  console.log(res);\n *   {\n *  '0': 42n,\n *  '1': 56n,\n *  '2': {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  },\n *  __length__: 3,\n *  propertyOne: 42n,\n *  propertyTwo: 56n,\n *  childStruct: {\n *    '0': 45n,\n *    '1': 78n,\n *    __length__: 2,\n *    propertyOne: 45n,\n *    propertyTwo: 78n\n *  }\n *}\n * ```\n */\nexport const decodeParameter = (abi: AbiInput, bytes: HexString): unknown =>\n\tdecodeParameters([abi], bytes)['0'];\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;;GAGG;;;;;;AAKH,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAHvD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,OAAO,EAAE,gBAAgB,IAAI,wBAAwB,EAAE,MAAM,qBAAqB,CAAC;;;;;AA6D5E,MAAM,eAAe,GAAG,CAAC,GAAa,EAAE,KAAc,EAAU,EAAE,qRACxE,mBAAA,AAAgB,EAAC;QAAC,GAAG;KAAC,EAAE;QAAC,KAAK;KAAC,CAAC,CAAC;AAI3B,MAAM,oBAAoB,GAAG,CACnC,IAA0C,EAC1C,KAAgB,EAChB,KAAc,EACmC,EAAE;IACnD,IAAI,CAAC;QACJ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC;YACrE,MAAM,wOAAI,WAAQ,CACjB,uDAAuD,GACtD,yDAAyD,GACzD,6DAA6D,GAC7D,2DAA2D,GAC3D,+CAA+C,CAChD,CAAC;QACH,CAAC;QACD,QAAO,wSAAA,AAAwB,EAAC,IAAI,EAAE,CAAA,EAAA,EAAK,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;QACd,MAAM,wOAAI,WAAQ,CAAC,CAAA,0BAAA,EAA8B,GAAa,CAAC,OAAO,EAAE,EAAE;YACzE,WAAW,EAAE,GAAG;SAChB,CAAC,CAAC;IACJ,CAAC;AACF,CAAC,CAAC;AA0GK,MAAM,gBAAgB,GAAG,CAC/B,GAAyC,EACzC,KAAgB,EACiC,CAAG,CAAD,mBAAqB,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAiEtF,MAAM,eAAe,GAAG,CAAC,GAAa,EAAE,KAAgB,EAAW,CACzE,CAD2E,eAC3D,CAAC;QAAC,GAAG;KAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"file":"functions_api.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/api/functions_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n *\n *  @module ABI\n */\nimport { AbiError, Web3ContractError } from 'web3-errors';\nimport { sha3Raw } from 'web3-utils';\nimport { AbiConstructorFragment, AbiFunctionFragment, DecodedParams, HexString } from 'web3-types';\nimport { isAbiFunctionFragment, jsonInterfaceMethodToString } from '../utils.js';\nimport { decodeParameters, encodeParameters } from './parameters_api.js';\n\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionName - The function name to encode or the `JSON interface` object of the function.\n * If the passed parameter is a string, it has to be in the form of `functionName(param1Type,param2Type,...)`. eg: myFunction(uint256,uint32[],bytes10,bytes)\n * @returns - The ABI signature of the function.\n * @example\n * ```ts\n * const signature = web3.eth.abi.encodeFunctionSignature({\n *   name: \"myMethod\",\n *   type: \"function\",\n *   inputs: [\n *     {\n *       type: \"uint256\",\n *       name: \"myNumber\",\n *     },\n *     {\n *       type: \"string\",\n *       name: \"myString\",\n *     },\n *   ],\n * });\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('myMethod(uint256,string)')\n * console.log(signature);\n * > 0x24ee0097\n *\n * const signature = web3.eth.abi.encodeFunctionSignature('safeTransferFrom(address,address,uint256,bytes)');\n * console.log(signature);\n * > 0xb88d4fde\n * ```\n */\nexport const encodeFunctionSignature = (functionName: string | AbiFunctionFragment): string => {\n\tif (typeof functionName !== 'string' && !isAbiFunctionFragment(functionName)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionSignature');\n\t}\n\n\tlet name: string;\n\n\tif (functionName && (typeof functionName === 'function' || typeof functionName === 'object')) {\n\t\tname = jsonInterfaceMethodToString(functionName);\n\t} else {\n\t\tname = functionName;\n\t}\n\n\treturn sha3Raw(name).slice(0, 10);\n};\n\n/**\n * Encodes a function call using its `JSON interface` object and given parameters.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param jsonInterface - The `JSON interface` object of the function.\n * @param params - The parameters to encode\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @example\n * ```ts\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     name: \"myMethod\",\n *     type: \"function\",\n *     inputs: [\n *       {\n *         type: \"uint256\",\n *         name: \"myNumber\",\n *       },\n *       {\n *         type: \"string\",\n *         name: \"myString\",\n *       },\n *     ],\n *   },\n *   [\"2345675643\", \"Hello!%\"]\n * );\n * console.log(sig);\n * > 0x24ee0097000000000000000000000000000000000000000000000000000000008bd02b7b0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000748656c6c6f212500000000000000000000000000000000000000000000000000\n *\n *\n *\n * const sig = web3.eth.abi.encodeFunctionCall(\n *   {\n *     inputs: [\n *       {\n *         name: \"account\",\n *         type: \"address\",\n *       },\n *     ],\n *     name: \"balanceOf\",\n *     outputs: [\n *       {\n *         name: \"\",\n *         type: \"uint256\",\n *       },\n *     ],\n *     stateMutability: \"view\",\n *     type: \"function\",\n *   },\n *   [\"0x1234567890123456789012345678901234567890\"]\n * );\n *\n * console.log(sig);\n * > 0x70a082310000000000000000000000001234567890123456789012345678901234567890\n * ```\n */\nexport const encodeFunctionCall = (\n\tjsonInterface: AbiFunctionFragment,\n\tparams: unknown[],\n): string => {\n\tif (!isAbiFunctionFragment(jsonInterface)) {\n\t\tthrow new AbiError('Invalid parameter value in encodeFunctionCall');\n\t}\n\n\treturn `${encodeFunctionSignature(jsonInterface)}${encodeParameters(\n\t\tjsonInterface.inputs ?? [],\n\t\tparams ?? [],\n\t).replace('0x', '')}`;\n};\n\n/**\n * Decodes a function call data using its `JSON interface` object.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @param functionsAbi - The `JSON interface` object of the function.\n * @param data - The data to decode\n * @param methodSignatureProvided - (Optional) if `false` do not remove the first 4 bytes that would rather contain the function signature.\n * @returns - The data decoded according to the passed ABI.\n * @example\n * ```ts\n * const data =\n * \t'0xa413686200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000548656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010416e6f74686572204772656574696e6700000000000000000000000000000000';\n * const params = decodeFunctionCall(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' },\n * \t\t\t{ internalType: 'string', name: '_second_greeting', type: 'string' },\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [\n * \t\t\t{ internalType: 'bool', name: '', type: 'bool' },\n * \t\t\t{ internalType: 'string', name: '', type: 'string' },\n * \t\t],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(params);\n * > {\n * > \t'0': 'Hello',\n * > \t'1': 'Another Greeting',\n * > \t__length__: 2,\n * > \t__method__: 'setGreeting(string,string)',\n * > \t_greeting: 'Hello',\n * > \t_second_greeting: 'Another Greeting',\n * > }\n * ```\n */\nexport const decodeFunctionCall = (\n\tfunctionsAbi: AbiFunctionFragment | AbiConstructorFragment,\n\tdata: HexString,\n\tmethodSignatureProvided = true,\n): DecodedParams & { __method__: string } => {\n\tconst value =\n\t\tmethodSignatureProvided && data && data.length >= 10 && data.startsWith('0x')\n\t\t\t? data.slice(10)\n\t\t\t: data;\n\tif (!functionsAbi.inputs) {\n\t\tthrow new Web3ContractError('No inputs found in the ABI');\n\t}\n\tconst result = decodeParameters([...functionsAbi.inputs], value);\n\treturn {\n\t\t...result,\n\t\t__method__: jsonInterfaceMethodToString(functionsAbi),\n\t};\n};\n\n/**\n * Decodes a function call data using its `JSON interface` object.\n * The JSON interface spec documentation https://docs.soliditylang.org/en/latest/abi-spec.html#json\n * @returns - The ABI encoded function call, which, means the function signature and the parameters passed.\n * @param functionsAbi - The `JSON interface` object of the function.\n * @param returnValues - The data (the function-returned-values) to decoded\n * @returns - The function-returned-values decoded according to the passed ABI. If there are multiple values, it returns them as an object as the example below. But if it is a single value, it returns it only for simplicity.\n * @example\n * ```ts\n * // decode a multi-value data of a method\n * const data =\n * \t'0x00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';\n * const decodedResult = decodeFunctionReturn(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' }\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [\n * \t\t\t{ internalType: 'string', name: '', type: 'string' },\n * \t\t\t{ internalType: 'bool', name: '', type: 'bool' },\n * \t\t],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(decodedResult);\n * > { '0': 'Hello', '1': true, __length__: 2 }\n * \n * \n * // decode a single-value data of a method\n * const data =\n * \t'0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000548656c6c6f000000000000000000000000000000000000000000000000000000';\n * const decodedResult = decodeFunctionReturn(\n * \t{\n * \t\tinputs: [\n * \t\t\t{ internalType: 'string', name: '_greeting', type: 'string' }\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [{ internalType: 'string', name: '', type: 'string' }],\n * \t\tstateMutability: 'nonpayable',\n * \t\ttype: 'function',\n * \t},\n * \tdata,\n * );\n\n * console.log(decodedResult);\n * > 'Hello'\n * ```\n */\nexport const decodeFunctionReturn = (\n\tfunctionsAbi: AbiFunctionFragment,\n\treturnValues?: HexString,\n) => {\n\t// If it is a constructor there is nothing to decode!\n\tif (functionsAbi.type === 'constructor') {\n\t\treturn returnValues;\n\t}\n\n\tif (!returnValues) {\n\t\t// Using \"null\" value intentionally to match legacy behavior\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\tconst value = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n\tif (!functionsAbi.outputs) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tconst result = decodeParameters([...functionsAbi.outputs], value);\n\n\tif (result.__length__ === 1) {\n\t\treturn result[0];\n\t}\n\n\treturn result;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1667, "column": 0}, "map": {"version":3,"file":"logs_api.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/api/logs_api.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n *\n *  @module ABI\n */\n\nimport { HexString, AbiParameter, DecodedParams } from 'web3-types';\nimport { decodeParameter, decodeParametersWith } from './parameters_api.js';\n\nconst STATIC_TYPES = ['bool', 'string', 'int', 'uint', 'address', 'fixed', 'ufixed'];\n\nconst _decodeParameter = (inputType: string, clonedTopic: string) =>\n\tinputType === 'string' ? clonedTopic : decodeParameter(inputType, clonedTopic);\n\n/**\n * Decodes ABI-encoded log data and indexed topic data.\n * @param inputs - A {@link AbiParameter} input array. See the [Solidity documentation](https://docs.soliditylang.org/en/develop/types.html) for a list of types.\n * @param data - The ABI byte code in the `data` field of a log.\n * @param topics - An array with the index parameter topics of the log, without the topic[0] if its a non-anonymous event, otherwise with topic[0]\n * @returns - The result object containing the decoded parameters.\n *\n * @example\n * ```ts\n * let res = web3.eth.abi.decodeLog(\n *    [\n *      {\n *        type: \"string\",\n *        name: \"myString\",\n *      },\n *      {\n *        type: \"uint256\",\n *        name: \"myNumber\",\n *        indexed: true,\n *      },\n *      {\n *        type: \"uint8\",\n *        name: \"mySmallNumber\",\n *        indexed: true,\n *      },\n *    ],\n *    \"0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000748656c6c6f252100000000000000000000000000000000000000000000000000\",\n *    [\n *      \"0x000000000000000000000000000000000000000000000000000000000000f310\",\n *      \"0x0000000000000000000000000000000000000000000000000000000000000010\",\n *    ]\n *  );\n * > {\n *  '0': 'Hello%!',\n *  '1': 62224n,\n *  '2': 16n,\n *  __length__: 3,\n *  myString: 'Hello%!',\n *  myNumber: 62224n,\n *  mySmallNumber: 16n\n * }\n * ```\n */\nexport const decodeLog = <ReturnType extends DecodedParams>(\n\tinputs: Array<AbiParameter> | ReadonlyArray<AbiParameter>,\n\tdata: HexString,\n\ttopics: string | string[],\n) => {\n\tconst clonedTopics = Array.isArray(topics) ? topics : [topics];\n\n\tconst indexedInputs: Record<number, AbiParameter> = {};\n\tconst nonIndexedInputs: Record<number, AbiParameter> = {};\n\n\tfor (const [i, input] of inputs.entries()) {\n\t\tif (input.indexed) {\n\t\t\tindexedInputs[i] = input;\n\t\t} else {\n\t\t\tnonIndexedInputs[i] = input;\n\t\t}\n\t}\n\n\tconst decodedNonIndexedInputs: DecodedParams = data\n\t\t? decodeParametersWith(Object.values(nonIndexedInputs), data, true)\n\t\t: { __length__: 0 };\n\n\t// If topics are more than indexed inputs, that means first topic is the event signature\n\tconst offset = clonedTopics.length - Object.keys(indexedInputs).length;\n\n\tconst decodedIndexedInputs = Object.values(indexedInputs).map((input, index) =>\n\t\tSTATIC_TYPES.some(s => input.type.startsWith(s))\n\t\t\t? _decodeParameter(input.type, clonedTopics[index + offset])\n\t\t\t: clonedTopics[index + offset],\n\t);\n\n\tconst returnValues: DecodedParams = { __length__: 0 };\n\n\tlet indexedCounter = 0;\n\tlet nonIndexedCounter = 0;\n\n\tfor (const [i, res] of inputs.entries()) {\n\t\treturnValues[i] = res.type === 'string' ? '' : undefined;\n\n\t\tif (indexedInputs[i]) {\n\t\t\treturnValues[i] = decodedIndexedInputs[indexedCounter];\n\t\t\tindexedCounter += 1;\n\t\t}\n\n\t\tif (nonIndexedInputs[i]) {\n\t\t\treturnValues[i] = decodedNonIndexedInputs[String(nonIndexedCounter)];\n\t\t\tnonIndexedCounter += 1;\n\t\t}\n\n\t\tif (res.name) {\n\t\t\treturnValues[res.name] = returnValues[i];\n\t\t}\n\n\t\treturnValues.__length__ += 1;\n\t}\n\n\treturn returnValues as ReturnType;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1745, "column": 0}, "map": {"version":3,"file":"decode_contract_error_data.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/decode_contract_error_data.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Eip838ExecutionError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\n\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\n\nexport const decodeContractErrorData = (\n\terrorsAbi: AbiErrorFragment[],\n\terror: Eip838ExecutionError,\n) => {\n\tif (error?.data) {\n\t\tlet errorName: string | undefined;\n\t\tlet errorSignature: string | undefined;\n\t\tlet errorArgs: { [K in string]: unknown } | undefined;\n\t\ttry {\n\t\t\tconst errorSha = error.data.slice(0, 10);\n\t\t\tconst errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n\n\t\t\tif (errorAbi?.inputs) {\n\t\t\t\terrorName = errorAbi.name;\n\t\t\t\terrorSignature = jsonInterfaceMethodToString(errorAbi);\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n\t\t\t} else if (error.data.startsWith('0x08c379a0')) {\n\t\t\t\t// If ABI was not provided, check for the 2 famous errors: 'Error(string)' or 'Panic(uint256)'\n\n\t\t\t\terrorName = 'Error';\n\t\t\t\terrorSignature = 'Error(string)';\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'message',\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\terror.data.substring(10),\n\t\t\t\t);\n\t\t\t} else if (error.data.startsWith('0x4e487b71')) {\n\t\t\t\terrorName = 'Panic';\n\t\t\t\terrorSignature = 'Panic(uint256)';\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'code',\n\t\t\t\t\t\t\ttype: 'uint256',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\terror.data.substring(10),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.error('No matching error abi found for error data', error.data);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorName) {\n\t\t\terror.setDecodedProperties(errorName, errorSignature, errorArgs);\n\t\t}\n\t}\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AAKF,OAAO,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;;AAE3D,OAAO,EAAE,2BAA2B,EAAE,MAAM,YAAY,CAAC;AADzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;;;;AAGpD,MAAM,uBAAuB,GAAG,CACtC,SAA6B,EAC7B,KAA2B,EAC1B,EAAE;IACH,IAAI,KAAK,KAAA,QAAL,KAAK,KAAA,KAAA,IAAA,KAAA,IAAL,KAAK,CAAE,IAAI,EAAE,CAAC;QACjB,IAAI,SAA6B,CAAC;QAClC,IAAI,cAAkC,CAAC;QACvC,IAAI,SAAiD,CAAC;QACtD,IAAI,CAAC;YACJ,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACzC,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,EAAC,GAAG,CAAC,EAAE,uRAAC,uBAAA,AAAoB,EAAC,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEvF,IAAI,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,MAAM,EAAE,CAAC;gBACtB,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,cAAc,8QAAG,8BAAA,AAA2B,EAAC,QAAQ,CAAC,CAAC;gBACvD,yCAAyC;gBACzC,SAAS,GAAG,8TAAA,AAAgB,EAAC,CAAC;uBAAG,QAAQ,CAAC,MAAM;iBAAC,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9E,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;gBAChD,8FAA8F;gBAE9F,SAAS,GAAG,OAAO,CAAC;gBACpB,cAAc,GAAG,eAAe,CAAC;gBACjC,yCAAyC;gBACzC,SAAS,8SAAG,mBAAA,AAAgB,EAC3B;oBACC;wBACC,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,QAAQ;qBACd;iBACD,EACD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACxB,CAAC;YACH,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC;gBAChD,SAAS,GAAG,OAAO,CAAC;gBACpB,cAAc,GAAG,gBAAgB,CAAC;gBAClC,yCAAyC;gBACzC,SAAS,8SAAG,mBAAA,AAAgB,EAC3B;oBACC;wBACC,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,SAAS;qBACf;iBACD,EACD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CACxB,CAAC;YACH,CAAC,MAAM,CAAC;gBACP,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YACzE,CAAC;QACF,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;YACd,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC;QACD,IAAI,SAAS,EAAE,CAAC;YACf,KAAK,CAAC,oBAAoB,CAAC,SAAS,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QAClE,CAAC;IACF,CAAC;AACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1823, "column": 0}, "map": {"version":3,"file":"eip_712.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/eip_712.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3.eth.abi functions let you encode and decode parameters to ABI (Application Binary Interface) for function calls to the EVM (Ethereum Virtual Machine).\n *\n *  For using Web3 ABI functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 ABI functions will be available.\n * ```ts\n * import { Web3 } from 'web3';\n *\n * const web3 = new Web3();\n * const encoded = web3.eth.abi.encodeFunctionSignature({\n *     name: 'myMethod',\n *     type: 'function',\n *     inputs: [{\n *         type: 'uint256',\n *         name: 'myNumber'\n *     },{\n *         type: 'string',\n *         name: 'myString'\n *     }]\n * });\n *\n * ```\n *\n * For using individual package install `web3-eth-abi` package using `npm i web3-eth-abi` or `yarn add web3-eth-abi` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { encodeFunctionSignature } from 'web3-eth-abi';\n *\n * const encoded = encodeFunctionSignature({\n *     name: 'myMethod',\n *     type: 'function',\n *     inputs: [{\n *         type: 'uint256',\n *         name: 'myNumber'\n *     },{\n *         type: 'string',\n *         name: 'myString'\n *     }]\n * });\n *\n * ```\n *\n *  @module ABI\n */\n\n// This code was taken from: https://github.com/Mrtenz/eip-712/tree/master\n\nimport { Eip712TypedData } from 'web3-types';\nimport { isNullish, keccak256 } from 'web3-utils';\nimport { AbiError } from 'web3-errors';\nimport { encodeParameters } from './coders/encode.js';\n\nconst TYPE_REGEX = /^\\w+/;\nconst ARRAY_REGEX = /^(.*)\\[([0-9]*?)]$/;\n\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n */\nconst getDependencies = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdependencies: string[] = [],\n): string[] => {\n\tconst match = type.match(TYPE_REGEX)!;\n\tconst actualType = match[0];\n\tif (dependencies.includes(actualType)) {\n\t\treturn dependencies;\n\t}\n\n\tif (!typedData.types[actualType]) {\n\t\treturn dependencies;\n\t}\n\n\treturn [\n\t\tactualType,\n\t\t...typedData.types[actualType].reduce<string[]>(\n\t\t\t(previous, _type) => [\n\t\t\t\t...previous,\n\t\t\t\t...getDependencies(typedData, _type.type, previous).filter(\n\t\t\t\t\tdependency => !previous.includes(dependency),\n\t\t\t\t),\n\t\t\t],\n\t\t\t[],\n\t\t),\n\t];\n};\n\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Options} [options]\n * @return {string}\n */\nconst encodeType = (typedData: Eip712TypedData, type: string): string => {\n\tconst [primary, ...dependencies] = getDependencies(typedData, type);\n\t// eslint-disable-next-line @typescript-eslint/require-array-sort-compare\n\tconst types = [primary, ...dependencies.sort()];\n\n\treturn types\n\t\t.map(\n\t\t\tdependency =>\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t`${dependency}(${typedData.types[dependency].map(\n\t\t\t\t\t_type => `${_type.type} ${_type.name}`,\n\t\t\t\t)})`,\n\t\t)\n\t\t.join('');\n};\n\n/**\n * Get a type string as hash.\n */\nconst getTypeHash = (typedData: Eip712TypedData, type: string) =>\n\tkeccak256(encodeType(typedData, type));\n\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n */\nconst getStructHash = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: Record<string, unknown>,\n\t// eslint-disable-next-line  no-use-before-define\n): string => keccak256(encodeData(typedData, type, data));\n\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n */\nexport const getMessage = (typedData: Eip712TypedData, hash?: boolean): string => {\n\tconst EIP_191_PREFIX = '1901';\n\tconst message = `0x${EIP_191_PREFIX}${getStructHash(\n\t\ttypedData,\n\t\t'EIP712Domain',\n\t\ttypedData.domain as Record<string, unknown>,\n\t).substring(2)}${getStructHash(typedData, typedData.primaryType, typedData.message).substring(\n\t\t2,\n\t)}`;\n\n\tif (hash) {\n\t\treturn keccak256(message);\n\t}\n\n\treturn message;\n};\n\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n */\nconst encodeValue = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: unknown,\n): [string, string | Uint8Array | number] => {\n\tconst match = type.match(ARRAY_REGEX);\n\n\t// Checks for array types\n\tif (match) {\n\t\tconst arrayType = match[1];\n\t\tconst length = Number(match[2]) || undefined;\n\n\t\tif (!Array.isArray(data)) {\n\t\t\tthrow new AbiError('Cannot encode data: value is not of array type', {\n\t\t\t\tdata,\n\t\t\t});\n\t\t}\n\n\t\tif (length && data.length !== length) {\n\t\t\tthrow new AbiError(\n\t\t\t\t`Cannot encode data: expected length of ${length}, but got ${data.length}`,\n\t\t\t\t{\n\t\t\t\t\tdata,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tconst encodedData = data.map(item => encodeValue(typedData, arrayType, item));\n\t\tconst types = encodedData.map(item => item[0]);\n\t\tconst values = encodedData.map(item => item[1]);\n\n\t\treturn ['bytes32', keccak256(encodeParameters(types, values))];\n\t}\n\n\tif (typedData.types[type]) {\n\t\treturn ['bytes32', getStructHash(typedData, type, data as Record<string, unknown>)];\n\t}\n\n\t// Strings and arbitrary byte arrays are hashed to bytes32\n\tif (type === 'string') {\n\t\treturn ['bytes32', keccak256(data as string)];\n\t}\n\n\tif (type === 'bytes') {\n\t\treturn ['bytes32', keccak256(data as string)];\n\t}\n\n\treturn [type, data as string];\n};\n\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n */\nconst encodeData = (\n\ttypedData: Eip712TypedData,\n\ttype: string,\n\tdata: Record<string, unknown>,\n): string => {\n\tconst [types, values] = typedData.types[type].reduce<[string[], unknown[]]>(\n\t\t([_types, _values], field) => {\n\t\t\tif (isNullish(data[field.name]) || isNullish(field.type)) {\n\t\t\t\tthrow new AbiError(`Cannot encode data: missing data for '${field.name}'`, {\n\t\t\t\t\tdata,\n\t\t\t\t\tfield,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst value = data[field.name];\n\t\t\tconst [_type, encodedValue] = encodeValue(typedData, field.type, value);\n\n\t\t\treturn [\n\t\t\t\t[..._types, _type],\n\t\t\t\t[..._values, encodedValue],\n\t\t\t];\n\t\t},\n\t\t[['bytes32'], [getTypeHash(typedData, type)]],\n\t);\n\n\treturn encodeParameters(types, values);\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AAkDF,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;AAEtD,MAAM,UAAU,GAAG,MAAM,CAAC;AAC1B,MAAM,WAAW,GAAG,oBAAoB,CAAC;AAEzC;;;GAGG,CACH,MAAM,eAAe,GAAG,CACvB,SAA0B,EAC1B,IAAY,EACZ,eAAyB,EAAE,EAChB,EAAE;IACb,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,CAAC;IACtC,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;QACvC,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC;QAClC,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,OAAO;QACN,UAAU;WACP,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,CACpC,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAG,CAAD;mBAChB,QAAQ;mBACR,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,MAAM,EACzD,UAAU,CAAC,EAAE,AAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAC5C;aACD,EACD,EAAE,CACF;KACD,CAAC;AACH,CAAC,CAAC;AAEF;;;;;;;GAOG,CACH,MAAM,UAAU,GAAG,CAAC,SAA0B,EAAE,IAAY,EAAU,EAAE;IACvE,MAAM,CAAC,OAAO,EAAE,GAAG,YAAY,CAAC,GAAG,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpE,yEAAyE;IACzE,MAAM,KAAK,GAAG;QAAC,OAAO,EAAE;WAAG,YAAY,CAAC,IAAI,EAAE;KAAC,CAAC;IAEhD,OAAO,KAAK,CACV,GAAG,CACH,UAAU,CAAC,EAAE,CACZ,4EAA4E;QAC5E,GAAG,UAAU,CAAA,CAAA,EAAI,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAC/C,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAA,CAAA,EAAI,KAAK,CAAC,IAAI,EAAE,CACtC,CAAA,CAAA,CAAG,CACL,CACA,IAAI,CAAC,EAAE,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF;;GAEG,CACH,MAAM,WAAW,GAAG,CAAC,SAA0B,EAAE,IAAY,EAAE,EAAE,iNAChE,YAAA,AAAS,EAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAExC;;;GAGG,CACH,MAAM,aAAa,GAAG,CACrB,SAA0B,EAC1B,IAAY,EACZ,IAA6B,EAEpB,EAAE,iNAAC,YAAA,AAAS,EAAC,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAMnD,MAAM,UAAU,GAAG,CAAC,SAA0B,EAAE,IAAc,EAAU,EAAE;IAChF,MAAM,cAAc,GAAG,MAAM,CAAC;IAC9B,MAAM,OAAO,GAAG,CAAA,EAAA,EAAK,cAAc,GAAG,aAAa,CAClD,SAAS,EACT,cAAc,EACd,SAAS,CAAC,MAAiC,CAC3C,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,SAAS,EAAE,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAC5F,CAAC,CACD,EAAE,CAAC;IAEJ,IAAI,IAAI,EAAE,CAAC;QACV,yNAAO,YAAS,AAAT,EAAU,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF;;;GAGG,CACH,MAAM,WAAW,GAAG,CACnB,SAA0B,EAC1B,IAAY,EACZ,IAAa,EAC4B,EAAE;IAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAEtC,yBAAyB;IACzB,IAAI,KAAK,EAAE,CAAC;QACX,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;QAE7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1B,MAAM,wOAAI,WAAQ,CAAC,gDAAgD,EAAE;gBACpE,IAAI;aACJ,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YACtC,MAAM,wOAAI,WAAQ,CACjB,CAAA,uCAAA,EAA0C,MAAM,CAAA,UAAA,EAAa,IAAI,CAAC,MAAM,EAAE,EAC1E;gBACC,IAAI;aACJ,CACD,CAAC;QACH,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;QAC9E,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhD,OAAO;YAAC,SAAS;aAAE,6NAAA,AAAS,wRAAC,mBAAA,AAAgB,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAAC,CAAC;IAChE,CAAC;IAED,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QAC3B,OAAO;YAAC,SAAS;YAAE,aAAa,CAAC,SAAS,EAAE,IAAI,EAAE,IAA+B,CAAC;SAAC,CAAC;IACrF,CAAC;IAED,0DAA0D;IAC1D,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;QACvB,OAAO;YAAC,SAAS;8NAAE,YAAA,AAAS,EAAC,IAAc,CAAC;SAAC,CAAC;IAC/C,CAAC;IAED,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;QACtB,OAAO;YAAC,SAAS;aAAE,6NAAA,AAAS,EAAC,IAAc,CAAC;SAAC,CAAC;IAC/C,CAAC;IAED,OAAO;QAAC,IAAI;QAAE,IAAc;KAAC,CAAC;AAC/B,CAAC,CAAC;AAEF;;;GAGG,CACH,MAAM,UAAU,GAAG,CAClB,SAA0B,EAC1B,IAAY,EACZ,IAA6B,EACpB,EAAE;IACX,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CACnD,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;QAC5B,4NAAI,YAAA,AAAS,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAI,mOAAS,AAAT,EAAU,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1D,MAAM,wOAAI,WAAQ,CAAC,CAAA,sCAAA,EAAyC,KAAK,CAAC,IAAI,CAAA,CAAA,CAAG,EAAE;gBAC1E,IAAI;gBACJ,KAAK;aACL,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,GAAG,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAExE,OAAO;YACN,CAAC;mBAAG,MAAM;gBAAE,KAAK;aAAC;YAClB,CAAC;mBAAG,OAAO;gBAAE,YAAY;aAAC;SAC1B,CAAC;IACH,CAAC,EACD;QAAC;YAAC,SAAS;SAAC;QAAE;YAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC;SAAC;KAAC,CAC7C,CAAC;IAEF,6RAAO,mBAAA,AAAgB,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxC,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1994, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-abi%404.4.1_typescript%405.7.3_zod%403.24.1/node_modules/web3-eth-abi/src/index.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport * from './api/errors_api.js';\nexport * from './api/events_api.js';\nexport * from './api/functions_api.js';\nexport * from './api/logs_api.js';\nexport * from './api/parameters_api.js';\nexport * from './utils.js';\nexport * from './decode_contract_error_data.js';\nexport { getMessage as getEncodedEip712Data } from './eip_712.js';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE","ignoreList":[0]}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}