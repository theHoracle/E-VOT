{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"encoding.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/encoding.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format, isNullish, keccak256 } from 'web3-utils';\n\nimport {\n\tAbiConstructorFragment,\n\tAbiEventFragment,\n\tAbiFunctionFragment,\n\tFilter,\n\tHexString,\n\tTopic,\n\tFMT_NUMBER,\n\tFMT_BYTES,\n\tContractOptions,\n} from 'web3-types';\n\nimport {\n\tdecodeFunctionCall,\n\tdecodeFunctionReturn,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tencodeParameter,\n\tencodeParameters,\n\tinferTypesAndEncodeParameters,\n\tisAbiConstructorFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\n\nimport { blockSchema, ALL_EVENTS } from 'web3-eth';\nimport { Web3ContractError } from 'web3-errors';\n\nexport { decodeEventABI } from 'web3-eth';\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\nexport const encodeEventABI = (\n\t{ address }: ContractOptions,\n\tevent: AbiEventFragment & { signature: string },\n\toptions?: Filter,\n) => {\n\tconst topics = options?.topics;\n\tconst filter = options?.filter ?? {};\n\tconst opts: Writeable<Filter> = {};\n\n\tif (!isNullish(options?.fromBlock)) {\n\t\topts.fromBlock = format(blockSchema.properties.number, options?.fromBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\tif (!isNullish(options?.toBlock)) {\n\t\topts.toBlock = format(blockSchema.properties.number, options?.toBlock, {\n\t\t\tnumber: FMT_NUMBER.HEX,\n\t\t\tbytes: FMT_BYTES.HEX,\n\t\t});\n\t}\n\n\tif (topics && Array.isArray(topics)) {\n\t\topts.topics = [...topics] as Topic[];\n\t} else {\n\t\topts.topics = [];\n\t\t// add event signature\n\t\tif (event && !event.anonymous && ![ALL_EVENTS, 'allEvents'].includes(event.name)) {\n\t\t\topts.topics.push(\n\t\t\t\tevent.signature ?? encodeEventSignature(jsonInterfaceMethodToString(event)),\n\t\t\t);\n\t\t}\n\n\t\t// add event topics (indexed arguments)\n\t\tif (![ALL_EVENTS, 'allEvents'].includes(event.name) && event.inputs) {\n\t\t\tfor (const input of event.inputs) {\n\t\t\t\tif (!input.indexed) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst value = filter[input.name];\n\t\t\t\tif (!value) {\n\t\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t\topts.topics.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: https://github.com/ethereum/web3.js/issues/344\n\t\t\t\t// TODO: deal properly with components\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\topts.topics.push(value.map(v => encodeParameter(input.type, v)));\n\t\t\t\t} else if (input.type === 'string') {\n\t\t\t\t\topts.topics.push(keccak256(value as string));\n\t\t\t\t} else {\n\t\t\t\t\topts.topics.push(encodeParameter(input.type, value));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!opts.topics.length) delete opts.topics;\n\n\tif (address) {\n\t\topts.address = address.toLowerCase();\n\t}\n\n\treturn opts;\n};\n\nexport const encodeMethodABI = (\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\targs: unknown[],\n\tdeployData?: HexString,\n) => {\n\tconst inputLength = Array.isArray(abi.inputs) ? abi.inputs.length : 0;\n\tif (abi.inputs && inputLength !== args.length) {\n\t\tthrow new Web3ContractError(\n\t\t\t`The number of arguments is not matching the methods required number. You need to pass ${inputLength} arguments.`,\n\t\t);\n\t}\n\n\tlet params: string;\n\tif (abi.inputs) {\n\t\tparams = encodeParameters(Array.isArray(abi.inputs) ? abi.inputs : [], args).replace(\n\t\t\t'0x',\n\t\t\t'',\n\t\t);\n\t} else {\n\t\tparams = inferTypesAndEncodeParameters(args).replace('0x', '');\n\t}\n\n\tif (isAbiConstructorFragment(abi)) {\n\t\tif (!deployData)\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t'The contract has no contract data option set. This is necessary to append the constructor parameters.',\n\t\t\t);\n\n\t\tif (!deployData.startsWith('0x')) {\n\t\t\treturn `0x${deployData}${params}`;\n\t\t}\n\n\t\treturn `${deployData}${params}`;\n\t}\n\n\treturn `${encodeFunctionSignature(abi)}${params}`;\n};\n\n/** @deprecated import `decodeFunctionCall` from ''web3-eth-abi' instead. */\nexport const decodeMethodParams = decodeFunctionCall;\n/** @deprecated import `decodeFunctionReturn` from ''web3-eth-abi' instead. */\nexport const decodeMethodReturn = decodeFunctionReturn;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"file":"contract_log_subscription.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/contract_log_subscription.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tAbiEventFragment,\n\tLogsInput,\n\tHexString,\n\tTopic,\n\tDataFormat,\n\tEventLog,\n\tContractAbiWithSignature,\n} from 'web3-types';\nimport { Web3RequestManager, Web3Subscription, Web3SubscriptionManager } from 'web3-core';\nimport { decodeEventABI } from 'web3-eth';\n\n/**\n * ContractLogsSubscription to be used to subscribe to events logs.\n *\n * Following events are supported and can be accessed with either {@link ContractLogsSubscription.once} or ${@link ContractLogsSubscription.on} methods.\n *\n * - **connected**: Emitted when the subscription is connected.\n * - **data**: Fires on each incoming event with the event object as argument.\n * - **changed**: Fires on each event which was removed from the blockchain. The event will have the additional property `removed: true`.\n * - **error**: Fires on each error.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent({\n *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n *   fromBlock: 0\n * });\n *\n * subscription.on(\"connected\", function(subscriptionId){\n *   console.log(subscriptionId);\n * });\n *\n * subscription.on('data', function(event){\n *   console.log(event); // same results as the optional callback above\n * });\n *\n * subscription.on('changed', function(event){\n *   // remove event from local database\n * })\n *\n * subscription.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n *   ...\n * });\n *\n * // event output example\n * > {\n *   returnValues: {\n *       myIndexedParam: 20,\n *       myOtherIndexedParam: '0x123456789...',\n *       myNonIndexParam: 'My String'\n *   },\n *   raw: {\n *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n *   },\n *   event: 'MyEvent',\n *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   logIndex: 0,\n *   transactionIndex: 0,\n *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n *   blockNumber: 1234,\n *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n * }\n * ```\n */\nexport class ContractLogsSubscription extends Web3Subscription<\n\t{\n\t\tdata: EventLog;\n\t\tchanged: EventLog & { removed: true };\n\t},\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t{ address?: HexString; topics?: (Topic | Topic[] | null)[]; abi: AbiEventFragment }\n> {\n\t/**\n\t * Address of tye contract\n\t */\n\tpublic readonly address?: HexString;\n\n\t/**\n\t * The list of topics subscribed\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic readonly topics?: (Topic | Topic[] | null)[];\n\n\t/**\n\t * The {@doclink glossary#json-interface-abi | JSON Interface} of the event.\n\t */\n\tpublic readonly abi: AbiEventFragment & { signature: HexString };\n\n\tpublic readonly jsonInterface: ContractAbiWithSignature;\n\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\n\t);\n\t/**\n\t * @deprecated This constructor overloading should not be used\n\t */\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: { requestManager: Web3RequestManager; returnFormat?: DataFormat },\n\t);\n\tpublic constructor(\n\t\targs: {\n\t\t\taddress?: HexString;\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t\ttopics?: (Topic | Topic[] | null)[];\n\t\t\tabi: AbiEventFragment & { signature: HexString };\n\t\t\tjsonInterface: ContractAbiWithSignature;\n\t\t},\n\t\toptions: (\n\t\t\t| { subscriptionManager: Web3SubscriptionManager }\n\t\t\t| { requestManager: Web3RequestManager }\n\t\t) & {\n\t\t\treturnFormat?: DataFormat;\n\t\t},\n\t) {\n\t\tsuper(\n\t\t\targs,\n\t\t\toptions as { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\n\t\t);\n\n\t\tthis.address = args.address;\n\t\tthis.topics = args.topics;\n\t\tthis.abi = args.abi;\n\t\tthis.jsonInterface = args.jsonInterface;\n\t}\n\n\tprotected _buildSubscriptionParams() {\n\t\treturn ['logs', { address: this.address, topics: this.topics }];\n\t}\n\n\tprotected formatSubscriptionResult(data: EventLog) {\n\t\treturn decodeEventABI(this.abi, data as LogsInput, this.jsonInterface, super.returnFormat);\n\t}\n}\n/**\n * @deprecated LogsSubscription is renamed to ContractLogsSubscription in this package to not be confused with LogsSubscription at 'web3-eth'.\n */\nexport const LogsSubscription = ContractLogsSubscription;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;AAYF,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAD1C,OAAO,EAAsB,gBAAgB,EAA2B,MAAM,WAAW,CAAC;;;AAyDpF,MAAO,wBAAyB,kSAAQ,mBAO7C;IA0CA,YACC,IAMC,EACD,OAKC,CAAA;QAED,KAAK,CACJ,IAAI,EACJ,OAAsF,CACtF,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IACzC,CAAC;IAES,wBAAwB,GAAA;QACjC,OAAO;YAAC,MAAM;YAAE;gBAAE,OAAO,EAAE,IAAI,CAAC,OAAO;gBAAE,MAAM,EAAE,IAAI,CAAC,MAAM;YAAA,CAAE;SAAC,CAAC;IACjE,CAAC;IAES,wBAAwB,CAAC,IAAc,EAAA;QAChD,gVAAO,iBAAA,AAAc,EAAC,IAAI,CAAC,GAAG,EAAE,IAAiB,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IAC5F,CAAC;CACD;AAIM,MAAM,gBAAgB,GAAG,wBAAwB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/utils.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { RLP } from '@ethereumjs/rlp';\nimport {\n\tInvalidAddressError,\n\tInvalidMethodParamsError,\n\tInvalidNumberError,\n\tWeb3ContractError,\n} from 'web3-errors';\nimport {\n\tTransactionForAccessList,\n\tAbiFunctionFragment,\n\tTransactionWithSenderAPI,\n\tTransactionCall,\n\tHexString,\n\tAddress,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tContractOptions,\n\tNumbers,\n\tAbiConstructorFragment,\n} from 'web3-types';\nimport {\n\tisNullish,\n\tmergeDeep,\n\tisContractInitOptions,\n\tkeccak256,\n\ttoChecksumAddress,\n\thexToNumber,\n} from 'web3-utils';\nimport { isAddress, isHexString } from 'web3-validator';\nimport { encodeMethodABI } from './encoding.js';\nimport { Web3ContractContext } from './types.js';\n\nconst dataInputEncodeMethodHelper = (\n\ttxParams: TransactionCall | TransactionForAccessList,\n\tabi: AbiFunctionFragment | AbiConstructorFragment,\n\tparams: unknown[],\n\tdataInputFill?: 'data' | 'input' | 'both',\n): { data?: HexString; input?: HexString } => {\n\tconst tx: { data?: HexString; input?: HexString } = {};\n\tif (!isNullish(txParams.data) || dataInputFill === 'both') {\n\t\ttx.data = encodeMethodABI(abi, params, (txParams.data ?? txParams.input) as HexString);\n\t}\n\tif (!isNullish(txParams.input) || dataInputFill === 'both') {\n\t\ttx.input = encodeMethodABI(abi, params, (txParams.input ?? txParams.data) as HexString);\n\t}\n\t// if input and data is empty, use web3config default\n\tif (isNullish(tx.input) && isNullish(tx.data)) {\n\t\ttx[dataInputFill as 'data' | 'input'] = encodeMethodABI(abi, params);\n\t}\n\treturn { data: tx.data as HexString, input: tx.input as HexString };\n};\n\nexport const getSendTxParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment | AbiConstructorFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tinput?: HexString;\n\t\tdata?: HexString;\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionCall => {\n\tconst deploymentCall =\n\t\toptions?.input ?? options?.data ?? contractOptions.input ?? contractOptions.data;\n\tif (!deploymentCall && !options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\n\tif (!options?.from && !contractOptions.from) {\n\t\tthrow new Web3ContractError('Contract \"from\" address not specified');\n\t}\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n\nexport const getEthTxCallParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionCall => {\n\tif (!options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n\nexport const getEstimateGasParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): Partial<TransactionWithSenderAPI> => {\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionCall;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams as TransactionWithSenderAPI;\n};\n\nexport const isWeb3ContractContext = (options: unknown): options is Web3ContractContext =>\n\ttypeof options === 'object' &&\n\t!isNullish(options) &&\n\tObject.keys(options).length !== 0 &&\n\t!isContractInitOptions(options);\n\nexport const getCreateAccessListParams = ({\n\tabi,\n\tparams,\n\toptions,\n\tcontractOptions,\n}: {\n\tabi: AbiFunctionFragment;\n\tparams: unknown[];\n\toptions?: (PayableCallOptions | NonPayableCallOptions) & {\n\t\tto?: Address;\n\t\tdataInputFill?: 'input' | 'data' | 'both';\n\t};\n\tcontractOptions: ContractOptions;\n}): TransactionForAccessList => {\n\tif (!options?.to && !contractOptions.address) {\n\t\tthrow new Web3ContractError('Contract address not specified');\n\t}\n\n\tif (!options?.from && !contractOptions.from) {\n\t\tthrow new Web3ContractError('Contract \"from\" address not specified');\n\t}\n\n\tlet txParams = mergeDeep(\n\t\t{\n\t\t\tto: contractOptions.address,\n\t\t\tgas: contractOptions.gas,\n\t\t\tgasPrice: contractOptions.gasPrice,\n\t\t\tfrom: contractOptions.from,\n\t\t\tinput: contractOptions.input,\n\t\t\tmaxPriorityFeePerGas: contractOptions.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: contractOptions.maxFeePerGas,\n\t\t\tdata: contractOptions.data,\n\t\t},\n\t\toptions as unknown as Record<string, unknown>,\n\t) as unknown as TransactionForAccessList;\n\n\tconst dataInput = dataInputEncodeMethodHelper(txParams, abi, params, options?.dataInputFill);\n\ttxParams = { ...txParams, data: dataInput.data, input: dataInput.input };\n\n\treturn txParams;\n};\n\nexport const createContractAddress = (from: Address, nonce: Numbers): Address => {\n\tif (!isAddress(from)) throw new InvalidAddressError(`Invalid address given ${from}`);\n\n\tlet nonceValue = nonce;\n\tif (typeof nonce === 'string' && isHexString(nonce)) nonceValue = hexToNumber(nonce);\n\telse if (typeof nonce === 'string' && !isHexString(nonce))\n\t\tthrow new InvalidNumberError('Invalid nonce value format');\n\n\tconst rlpEncoded = RLP.encode([from, nonceValue]);\n\tconst result = keccak256(rlpEncoded);\n\n\tconst contractAddress = '0x'.concat(result.substring(26));\n\n\treturn toChecksumAddress(contractAddress);\n};\n\nexport const create2ContractAddress = (\n\tfrom: Address,\n\tsalt: HexString,\n\tinitCode: HexString,\n): Address => {\n\tif (!isAddress(from)) throw new InvalidAddressError(`Invalid address given ${from}`);\n\n\tif (!isHexString(salt)) throw new InvalidMethodParamsError(`Invalid salt value ${salt}`);\n\n\tif (!isHexString(initCode))\n\t\tthrow new InvalidMethodParamsError(`Invalid initCode value ${initCode}`);\n\n\tconst initCodeHash = keccak256(initCode);\n\tconst initCodeHashPadded = initCodeHash.padStart(64, '0'); // Pad to 32 bytes (64 hex characters)\n\tconst create2Params = ['0xff', from, salt, initCodeHashPadded].map(x => x.replace(/0x/, ''));\n\tconst create2Address = `0x${create2Params.join('')}`;\n\n\treturn toChecksumAddress(`0x${keccak256(create2Address).slice(26)}`); // Slice to get the last 20 bytes (40 hex characters) & checksum\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"file":"contract-deployer-method-class.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/contract-deployer-method-class.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3ContractError } from 'web3-errors';\nimport { sendTransaction, SendTransactionEvents, SendTransactionOptions } from 'web3-eth';\nimport { decodeFunctionCall } from 'web3-eth-abi';\nimport {\n\tAbiConstructorFragment,\n\tAbiFunctionFragment,\n\tContractAbi,\n\tContractConstructorArgs,\n\tBytes,\n\tHexString,\n\tPayableCallOptions,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tContractOptions,\n\tTransactionReceipt,\n\tTransactionCall,\n} from 'web3-types';\nimport { format } from 'web3-utils';\nimport { isNullish } from 'web3-validator';\nimport { Web3PromiEvent } from 'web3-core';\nimport { encodeMethodABI } from './encoding.js';\nimport { NonPayableTxOptions, PayableTxOptions } from './types.js';\nimport { getSendTxParams } from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { Contract } from './contract.js';\n\nexport type ContractDeploySend<Abi extends ContractAbi> = Web3PromiEvent<\n\t// eslint-disable-next-line no-use-before-define\n\tContract<Abi>,\n\tSendTransactionEvents<DataFormat>\n>;\n\n/*\n * This class is only supposed to be used for the return of `new Contract(...).deploy(...)` method.\n */\nexport class DeployerMethodClass<FullContractAbi extends ContractAbi> {\n\tprotected readonly args: never[] | ContractConstructorArgs<FullContractAbi>;\n\tprotected readonly constructorAbi: AbiConstructorFragment;\n\tprotected readonly contractOptions: ContractOptions;\n\tprotected readonly deployData?: string;\n\n\tprotected _contractMethodDeploySend(tx: TransactionCall) {\n\t\t// eslint-disable-next-line no-use-before-define\n\t\tconst returnTxOptions: SendTransactionOptions<Contract<FullContractAbi>> = {\n\t\t\ttransactionResolver: (receipt: TransactionReceipt) => {\n\t\t\t\tif (receipt.status === BigInt(0)) {\n\t\t\t\t\tthrow new Web3ContractError(\"code couldn't be stored\", receipt);\n\t\t\t\t}\n\n\t\t\t\tconst newContract = this.parent.clone();\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tnewContract.options.address = receipt.contractAddress;\n\t\t\t\treturn newContract;\n\t\t\t},\n\n\t\t\tcontractAbi: this.parent.options.jsonInterface,\n\t\t\t// TODO Should make this configurable by the user\n\t\t\tcheckRevertBeforeSending: false,\n\t\t};\n\n\t\treturn isNullish(this.parent.getTransactionMiddleware())\n\t\t\t? sendTransaction(this.parent, tx, this.parent.defaultReturnFormat, returnTxOptions) // not calling this with undefined Middleware because it will not break if Eth package is not updated\n\t\t\t: sendTransaction(\n\t\t\t\t\tthis.parent,\n\t\t\t\t\ttx,\n\t\t\t\t\tthis.parent.defaultReturnFormat,\n\t\t\t\t\treturnTxOptions,\n\t\t\t\t\tthis.parent.getTransactionMiddleware(),\n\t\t\t  );\n\t}\n\n\tpublic constructor(\n\t\t// eslint-disable-next-line no-use-before-define\n\t\tpublic parent: Contract<FullContractAbi>,\n\t\tpublic deployOptions:\n\t\t\t| {\n\t\t\t\t\t/**\n\t\t\t\t\t * The byte code of the contract.\n\t\t\t\t\t */\n\t\t\t\t\tdata?: HexString;\n\t\t\t\t\tinput?: HexString;\n\t\t\t\t\t/**\n\t\t\t\t\t * The arguments which get passed to the constructor on deployment.\n\t\t\t\t\t */\n\t\t\t\t\targuments?: ContractConstructorArgs<FullContractAbi>;\n\t\t\t  }\n\t\t\t| undefined,\n\t) {\n\t\tconst { args, abi, contractOptions, deployData } = this.calculateDeployParams();\n\n\t\tthis.args = args;\n\t\tthis.constructorAbi = abi;\n\t\tthis.contractOptions = contractOptions;\n\t\tthis.deployData = deployData;\n\t}\n\n\tpublic send(options?: PayableTxOptions): ContractDeploySend<FullContractAbi> {\n\t\tconst modifiedOptions = { ...options };\n\n\t\tconst tx = this.populateTransaction(modifiedOptions);\n\n\t\treturn this._contractMethodDeploySend(tx);\n\t}\n\n\tpublic populateTransaction(txOptions?: PayableTxOptions | NonPayableTxOptions) {\n\t\tconst modifiedContractOptions = {\n\t\t\t...this.contractOptions,\n\t\t\tfrom: this.contractOptions.from ?? this.parent.defaultAccount ?? undefined,\n\t\t};\n\n\t\t// args, abi, contractOptions, deployData\n\n\t\tconst tx = getSendTxParams({\n\t\t\tabi: this.constructorAbi,\n\t\t\tparams: this.args as unknown[],\n\t\t\toptions: { ...txOptions, dataInputFill: this.parent.contractDataInputFill },\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\n\t\t// @ts-expect-error remove unnecessary field\n\t\tif (tx.dataInputFill) {\n\t\t\t// @ts-expect-error remove unnecessary field\n\t\t\tdelete tx.dataInputFill;\n\t\t}\n\t\treturn tx;\n\t}\n\n\tprotected calculateDeployParams() {\n\t\tlet abi = this.parent.options.jsonInterface.find(\n\t\t\tj => j.type === 'constructor',\n\t\t) as AbiConstructorFragment;\n\t\tif (!abi) {\n\t\t\tabi = {\n\t\t\t\ttype: 'constructor',\n\t\t\t\tstateMutability: '',\n\t\t\t} as AbiConstructorFragment;\n\t\t}\n\n\t\tconst _input = format(\n\t\t\t{ format: 'bytes' },\n\t\t\tthis.deployOptions?.input ?? this.parent.options.input,\n\t\t\tDEFAULT_RETURN_FORMAT,\n\t\t);\n\n\t\tconst _data = format(\n\t\t\t{ format: 'bytes' },\n\t\t\tthis.deployOptions?.data ?? this.parent.options.data,\n\t\t\tDEFAULT_RETURN_FORMAT,\n\t\t);\n\n\t\tif ((!_input || _input.trim() === '0x') && (!_data || _data.trim() === '0x')) {\n\t\t\tthrow new Web3ContractError('contract creation without any data provided.');\n\t\t}\n\n\t\tconst args = this.deployOptions?.arguments ?? [];\n\n\t\tconst contractOptions: ContractOptions = {\n\t\t\t...this.parent.options,\n\t\t\tinput: _input,\n\t\t\tdata: _data,\n\t\t};\n\t\tconst deployData = _input ?? _data;\n\n\t\treturn { args, abi, contractOptions, deployData };\n\t}\n\n\tpublic async estimateGas<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\toptions?: PayableCallOptions,\n\t\treturnFormat: ReturnFormat = this.parent.defaultReturnFormat as ReturnFormat,\n\t) {\n\t\tconst modifiedOptions = { ...options };\n\t\treturn this.parent.contractMethodEstimateGas({\n\t\t\tabi: this.constructorAbi as AbiFunctionFragment,\n\t\t\tparams: this.args as unknown[],\n\t\t\treturnFormat,\n\t\t\toptions: modifiedOptions,\n\t\t\tcontractOptions: this.contractOptions,\n\t\t});\n\t}\n\n\tpublic encodeABI() {\n\t\treturn encodeMethodABI(\n\t\t\tthis.constructorAbi,\n\t\t\tthis.args as unknown[],\n\t\t\tformat(\n\t\t\t\t{ format: 'bytes' },\n\t\t\t\tthis.deployData as Bytes,\n\t\t\t\tthis.parent.defaultReturnFormat as typeof DEFAULT_RETURN_FORMAT,\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic decodeData(data: HexString) {\n\t\treturn {\n\t\t\t...decodeFunctionCall(\n\t\t\t\tthis.constructorAbi,\n\t\t\t\tdata.replace(this.deployData as string, ''),\n\t\t\t\tfalse,\n\t\t\t),\n\t\t\t__method__: this.constructorAbi.type,\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"file":"contract-subscription-manager.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/contract-subscription-manager.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3SubscriptionConstructor, Web3SubscriptionManager } from 'web3-core';\nimport { EthExecutionAPI, ContractAbi, DataFormat, DEFAULT_RETURN_FORMAT } from 'web3-types';\n// eslint-disable-next-line import/no-cycle\nimport { Contract } from './contract.js';\n\n/**\n * Similar to `Web3SubscriptionManager` but has a reference to the Contract that uses\n */\nexport class ContractSubscriptionManager<\n\tAPI extends EthExecutionAPI,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t} = any, // = ContractSubscriptions\n> extends Web3SubscriptionManager<API, RegisteredSubs> {\n\tpublic readonly parentContract: Contract<ContractAbi>;\n\n\t/**\n\t *\n\t * @param - Web3SubscriptionManager\n\t * @param - parentContract\n\t *\n\t * @example\n\t * ```ts\n\t * const requestManager = new Web3RequestManager(\"ws://localhost:8545\");\n\t * const contract = new Contract(...)\n\t * const subscriptionManager = new Web3SubscriptionManager(requestManager, {}, contract);\n\t * ```\n\t */\n\tpublic constructor(\n\t\tself: Web3SubscriptionManager<API, RegisteredSubs>,\n\t\tparentContract: Contract<ContractAbi>,\n\t) {\n\t\tsuper(self.requestManager, self.registeredSubscriptions);\n\n\t\tthis.parentContract = parentContract;\n\t}\n\n\t/**\n\t * Will create a new subscription\n\t *\n\t * @param name - The subscription you want to subscribe to\n\t * @param args - Optional additional parameters, depending on the subscription type\n\t * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n\t *\n\t * Will subscribe to a specific topic (note: name)\n\t * @returns The subscription object\n\t */\n\tpublic async subscribe<T extends keyof RegisteredSubs>(\n\t\tname: T,\n\t\targs?: ConstructorParameters<RegisteredSubs[T]>[0],\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t): Promise<InstanceType<RegisteredSubs[T]>> {\n\t\treturn super.subscribe(name, args ?? this.parentContract.options, returnFormat);\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;AAGF,OAAO,EAA4C,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAD7F,OAAO,EAA+B,uBAAuB,EAAE,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3E,MAAO,2BAKX,ySAAQ,0BAA4C;IAGrD;;;;;;;;;;;OAWG,CACH,YACC,IAAkD,EAClD,cAAqC,CAAA;QAErC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACtC,CAAC;IAED;;;;;;;;;OASG,CACU,SAAS,CAAA,MAAA,EAAA,MAAA,EAAA;;;;;;4DACrB,IAAO,EACP,IAAkD,EAClD,2OAA2B,wBAAqB;YAEhD,OAAO,OAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,EAAE,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAJ,IAAI,GAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;QACjF,CAAC;KAAA;CACD","ignoreList":[0]}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"file":"contract.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/contract.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tWeb3Context,\n\tWeb3EventEmitter,\n\tWeb3PromiEvent,\n\tWeb3ConfigEvent,\n\tWeb3SubscriptionManager,\n\tWeb3SubscriptionConstructor,\n} from 'web3-core';\nimport {\n\tContractExecutionError,\n\tContractTransactionDataAndInputError,\n\tSubscriptionError,\n\tWeb3ContractError,\n} from 'web3-errors';\nimport {\n\tcreateAccessList,\n\tcall,\n\testimateGas,\n\tgetLogs,\n\tsendTransaction,\n\tdecodeEventABI,\n\tNewHeadsSubscription,\n\tALL_EVENTS,\n\tALL_EVENTS_ABI,\n\tSendTransactionEvents,\n\tTransactionMiddleware,\n} from 'web3-eth';\nimport {\n\tdecodeFunctionCall,\n\tdecodeFunctionReturn,\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tdecodeContractErrorData,\n\tisAbiErrorFragment,\n\tisAbiEventFragment,\n\tisAbiFunctionFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\nimport {\n\tAbiErrorFragment,\n\tAbiEventFragment,\n\tAbiFragment,\n\tAbiFunctionFragment,\n\tContractAbi,\n\tContractConstructorArgs,\n\tContractEvent,\n\tContractEvents,\n\tContractMethod,\n\tContractMethodInputParameters,\n\tContractMethodOutputParameters,\n\tAddress,\n\tBlockNumberOrTag,\n\tBlockTags,\n\tEthExecutionAPI,\n\tFilter,\n\tFilterAbis,\n\tHexString,\n\tLogsInput,\n\tMutable,\n\tContractInitOptions,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tNumbers,\n\tWeb3ValidationErrorObject,\n\tEventLog,\n\tContractAbiWithSignature,\n\tContractOptions,\n\tTransactionReceipt,\n\tFormatType,\n\tDecodedParams,\n} from 'web3-types';\nimport {\n\tformat,\n\tisDataFormat,\n\tkeccak256,\n\ttoChecksumAddress,\n\tisContractInitOptions,\n} from 'web3-utils';\nimport {\n\tisNullish,\n\tvalidator,\n\tutils as validatorUtils,\n\tValidationSchemaInput,\n\tWeb3ValidatorError,\n} from 'web3-validator';\nimport { encodeEventABI, encodeMethodABI } from './encoding.js';\nimport { ContractLogsSubscription } from './contract_log_subscription.js';\nimport {\n\tContractEventOptions,\n\tNonPayableMethodObject,\n\tNonPayableTxOptions,\n\tPayableMethodObject,\n\tPayableTxOptions,\n\tWeb3ContractContext,\n} from './types.js';\nimport {\n\tgetCreateAccessListParams,\n\tgetEstimateGasParams,\n\tgetEthTxCallParams,\n\tgetSendTxParams,\n\tisWeb3ContractContext,\n} from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { DeployerMethodClass } from './contract-deployer-method-class.js';\n// eslint-disable-next-line import/no-cycle\nimport { ContractSubscriptionManager } from './contract-subscription-manager.js';\n\ntype ContractBoundMethod<\n\tAbi extends AbiFunctionFragment,\n\tMethod extends ContractMethod<Abi> = ContractMethod<Abi>,\n> = (\n\t...args: Abi extends undefined\n\t\t? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t  any[]\n\t\t: Method['Inputs'] extends never\n\t\t? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t  any[]\n\t\t: Method['Inputs']\n) => Method['Abi']['stateMutability'] extends 'payable' | 'pure'\n\t? PayableMethodObject<Method['Inputs'], Method['Outputs']>\n\t: NonPayableMethodObject<Method['Inputs'], Method['Outputs']>;\n\nexport type ContractOverloadedMethodInputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodInputParameters<A['inputs']> | ContractOverloadedMethodInputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\nexport type ContractOverloadedMethodOutputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodOutputParameters<A['outputs']> | ContractOverloadedMethodOutputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractMethodsInterface<Abi extends ContractAbi> = {\n\t[MethodAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'function' }\n\t> as MethodAbi['name']]: ContractBoundMethod<MethodAbi>;\n\t// To allow users to use method signatures\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & { [key: string]: ContractBoundMethod<any> };\n\nexport type ContractMethodSend = Web3PromiEvent<\n\tFormatType<TransactionReceipt, DataFormat>,\n\tSendTransactionEvents<DataFormat>\n>;\n\n/**\n * @hidden\n * The event object can be accessed from `myContract.events.myEvent`.\n *\n * \\> Remember: To subscribe to an event, your provider must have support for subscriptions.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent([options])\n * ```\n *\n * @param options - The options used to subscribe for the event\n * @returns - A Promise resolved with {@link ContractLogsSubscription} object\n */\nexport type ContractBoundEvent = (options?: ContractEventOptions) => ContractLogsSubscription;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventsInterface<\n\tAbi extends ContractAbi,\n\tEvents extends ContractEvents<Abi> = ContractEvents<Abi>,\n> = {\n\t[Name in keyof Events | 'allEvents']: ContractBoundEvent;\n} & {\n\t[key: string]: ContractBoundEvent;\n};\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventEmitterInterface<Abi extends ContractAbi> = {\n\t[EventAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'event' }\n\t> as EventAbi['name']]: ContractEvent<EventAbi>['Inputs'];\n};\n\ntype EventParameters = Parameters<typeof encodeEventABI>[2];\n\nconst contractSubscriptions = {\n\tlogs: ContractLogsSubscription,\n\tnewHeads: NewHeadsSubscription,\n\tnewBlockHeaders: NewHeadsSubscription,\n};\n\ntype ContractSubscriptions = typeof contractSubscriptions;\n\n/**\n * The `web3.eth.Contract` makes it easy to interact with smart contracts on the ethereum blockchain.\n * For using contract package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager, after that contracts features can be used as mentioned in following snippet.\n * ```ts\n *\n * import { Web3 } from 'web3';\n *\n * const web3 = new Web3('https://127.0.0.1:4545');\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(abi,'0xdAC17F958D2ee523a2206206994597C13D831ec7');\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * For using individual package install `web3-eth-contract` and `web3-core` packages using: `npm i web3-eth-contract web3-core` or `yarn add web3-eth-contract web3-core`. This is more efficient approach for building lightweight applications.\n * ```ts\n *\n * import { Web3Context } from 'web3-core';\n * import { Contract } from 'web3-eth-contract';\n *\n * const abi = [...] as const; // your contract ABI\n *\n * let contract = new web3.eth.Contract(\n * \tabi,\n * \t'0xdAC17F958D2ee523a2206206994597C13D831ec7'\n * \t new Web3Context('http://127.0.0.1:8545'));\n *\n * await contract.methods.balanceOf('0xdAC17F958D2ee523a2206206994597C13D831ec7').call();\n * ```\n * ## Generated Methods\n * Following methods are generated by web3.js contract object for each of contract functions by using its ABI.\n *\n * ### send\n * This is used to send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableTxOptions | NonPayableTxOptions\n *\n * #### Returns\n * [Web3PromiEvent](/api/web3/namespace/core#Web3PromiEvent) : Web3 Promi Event\n *\n * ```ts\n * // using the promise\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.then(function(receipt){\n * \t\t// other parts of code to use receipt\n * \t});\n *\n *\n * // using the event emitter\n * myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n * \t.on('transactionHash', function(hash){\n * \t\t// ...\n * \t})\n * \t.on('confirmation', function(confirmationNumber, receipt){\n * \t\t// ...\n * \t})\n * \t.on('receipt', function(receipt){\n * \t\t// ...\n * \t})\n * \t.on('error', function(error, receipt) {\n * \t\t// ...\n * \t});\n *\n * ```\n *\n * ### call\n * This will execute smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise : having results of call\n *\n * ```ts\n *\n * let myContract = new web3.eth.Contract(abi, address);\n *\n * myContract.methods.myFunction().call()\n * .then(console.log);\n *\n * ```\n * ### estimateGas\n * Returns the amount of gas consumed by executing the method in EVM without creating a new transaction on the blockchain. The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be different when sending the transaction later, as the state of the smart contract can be different at that time.\n *\n * #### Parameters\n * options?: PayableCallOptions,\n * returnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n *\n * #### Returns\n * Promise: The gas amount estimated.\n *\n * ```ts\n * const estimatedGas = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .estimateGas();\n *\n * ```\n *\n * ### encodeABI\n * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format. This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments. Set the data field on web3.eth.sendTransaction options as the encodeABI() result and it is the same as calling the contract method with contract.myMethod.send().\n *\n * Some use cases for encodeABI() include: preparing a smart contract transaction for a multisignature wallet, working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.\n *\n * #### Parameters\n * None\n *\n * #### Returns\n * String: The encoded ABI.\n *\n * ```ts\n * const encodedABI = await contract.methods.approve('0xdAC17F958D2ee523a2206206994597C13D831ec7', 300)\n *     .encodeABI();\n *\n * ```\n *\n\n * ### decodeMethodData\n * Decodes the given ABI-encoded data, revealing both the method name and the parameters used in the smart contract call.\n * This function reverses the encoding process happens at the method `encodeABI`.\n * It's particularly useful for debugging and understanding the interactions with and between smart contracts.\n *\n * #### Parameters\n *\n * - `data` **HexString**: The string of ABI-encoded data that needs to be decoded. This should include the method signature and the encoded parameters.\n *\n * #### Returns\n *\n * - **Object**: This object combines both the decoded parameters and the method name in a readable format. Specifically, the returned object contains:\n *   - `__method__` **String**: The name of the contract method, reconstructed from the ABI.\n *   - `__length__` **Number**: The number of parameters decoded.\n *   - Additional properties representing each parameter by name, as well as their position and values.\n *\n * #### Example\n *\n * Given an ABI-encoded string from a transaction, you can decode this data to identify the method called and the parameters passed.\n * Here's a simplified example:\n *\n *\n * ```typescript\n * const GreeterAbi = [\n * \t{\n * \t\tinputs: [\n * \t\t\t{\n * \t\t\t\tinternalType: 'string',\n * \t\t\t\tname: '_greeting',\n * \t\t\t\ttype: 'string',\n * \t\t\t},\n * \t\t],\n * \t\tname: 'setGreeting',\n * \t\toutputs: [],\n * \t\ttype: 'function',\n * \t},\n * ];\n * const contract = new Contract(GreeterAbi); // Initialize with your contract's ABI\n *\n * // The ABI-encoded data string for \"setGreeting('Hello World')\"\n * const encodedData =\n * \t'0xa41368620000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48656c6c6f20576f726c64000000000000000000000000000000000000000000';\n *\n * try {\n * \tconst decoded = contract.decodeMethodData(encodedData);\n * \tconsole.log(decoded.__method__); // Outputs: \"setGreeting(string)\"\n * \tconsole.log(decoded); // Outputs the detailed parameter data\n * \t// This tells that the method called was `setGreeting` with a single string parameter \"Hello World\":\n * \t// {\n * \t//   __method__: 'setGreeting(string)',\n * \t//   __length__: 1,\n * \t//   '0': 'Hello World',\n * \t//   _greeting: 'Hello World'\n * \t// }\n * } catch (error) {\n * \tconsole.error(error);\n * }\n * ```\n *\n\n * ### createAccessList\n * This will create an access list a method execution will access when executed in the EVM.\n * Note: You must specify a from address and gas if it’s not specified in options when instantiating parent contract object.\n *\n * #### Parameters\n * options?: PayableCallOptions | NonPayableCallOptions,\n * block?: BlockNumberOrTag,\n *\n * #### Returns\n * Promise: The generated access list for transaction.\n *\n * ```ts\n * const accessList = await contract.methods.approve('0xbEe634C21c16F05B03B704BaE071536121e6cFeA', 300)\n *     .createAccessList({\n *         from: \"0x9992695e1053bb737d3cfae4743dcfc4b94f203d\"\n *    });\n * ```\n *\n */\nexport class Contract<Abi extends ContractAbi>\n\textends Web3Context<EthExecutionAPI, ContractSubscriptions>\n\timplements Web3EventEmitter<ContractEventEmitterInterface<Abi>>\n{\n\tprotected override _subscriptionManager: ContractSubscriptionManager<EthExecutionAPI>;\n\n\tpublic override get subscriptionManager(): ContractSubscriptionManager<EthExecutionAPI> {\n\t\treturn this._subscriptionManager;\n\t}\n\n\t/**\n\t * The options `object` for the contract instance. `from`, `gas` and `gasPrice` are used as fallback values when sending transactions.\n\t *\n\t * ```ts\n\t * myContract.options;\n\t * > {\n\t *     address: '0x1234567890123456789012345678901234567891',\n\t *     jsonInterface: [...],\n\t *     from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe',\n\t *     gasPrice: '10000000000000',\n\t *     gas: 1000000\n\t * }\n\t *\n\t * myContract.options.from = '0x1234567890123456789012345678901234567891'; // default from address\n\t * myContract.options.gasPrice = '20000000000000'; // default gas price in wei\n\t * myContract.options.gas = 5000000; // provide as fallback always 5M gas\n\t * ```\n\t */\n\n\tpublic readonly options: ContractOptions;\n\tprivate transactionMiddleware?: TransactionMiddleware;\n\t/**\n\t * Set to true if you want contracts' defaults to sync with global defaults.\n\t */\n\tpublic syncWithContext = false;\n\n\tprivate _errorsInterface!: AbiErrorFragment[];\n\tprivate _jsonInterface!: ContractAbiWithSignature;\n\tprivate _address?: Address;\n\tprivate _functions: Record<\n\t\tstring,\n\t\t{\n\t\t\tsignature: string;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tmethod: ContractBoundMethod<any>;\n\t\t}\n\t> = {};\n\tprivate readonly _overloadedMethodAbis: Map<string, AbiFunctionFragment[]>;\n\tprivate _methods!: ContractMethodsInterface<Abi>;\n\tprivate _events!: ContractEventsInterface<Abi>;\n\t/**\n\t * Set property to `data`, `input`, or `both` to change the property of the contract being sent to the\n\t * RPC provider when using contract methods.\n\t * Default is `input`\n\t */\n\n\tprivate context?: Web3Context;\n\t/**\n\t * Creates a new contract instance with all its methods and events defined in its ABI provided.\n\t *\n\t * ```ts\n\t * new web3.eth.Contract(jsonInterface[, address][, options])\n\t * ```\n\t *\n\t * @param jsonInterface - The JSON interface for the contract to instantiate.\n\t * @param address - The address of the smart contract to call.\n\t * @param options - The options of the contract. Some are used as fallbacks for calls and transactions.\n\t * @param context - The context of the contract used for customizing the behavior of the contract.\n\t * @returns - The contract instance with all its methods and events.\n\t *\n\t * ```ts title=\"Example\"\n\t * var myContract = new web3.eth.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n\t *   from: '0x1234567890123456789012345678901234567891', // default from address\n\t *   gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n\t * });\n\t * ```\n\t *\n\t * To use the type safe interface for these contracts you have to include the ABI definitions in your TypeScript project and then declare these as `const`.\n\t *\n\t * ```ts title=\"Example\"\n\t * const myContractAbi = [....] as const; // ABI definitions\n\t * const myContract = new web3.eth.Contract(myContractAbi, '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe');\n\t * ```\n\t */\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\tcontext?: Web3ContractContext | Web3Context,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress?: Address,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\toptions?: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress: Address | undefined,\n\t\toptions: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddressOrOptionsOrContext?:\n\t\t\t| Address\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context,\n\t\toptionsOrContextOrReturnFormat?:\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context\n\t\t\t| DataFormat,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst options = isContractInitOptions(addressOrOptionsOrContext)\n\t\t\t? addressOrOptionsOrContext\n\t\t\t: isContractInitOptions(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: undefined;\n\n\t\tlet contractContext;\n\t\tif (isWeb3ContractContext(addressOrOptionsOrContext)) {\n\t\t\tcontractContext = addressOrOptionsOrContext;\n\t\t} else if (isWeb3ContractContext(optionsOrContextOrReturnFormat)) {\n\t\t\tcontractContext = optionsOrContextOrReturnFormat;\n\t\t} else {\n\t\t\tcontractContext = contextOrReturnFormat;\n\t\t}\n\n\t\tlet provider;\n\t\tif (\n\t\t\ttypeof addressOrOptionsOrContext === 'object' &&\n\t\t\t'provider' in addressOrOptionsOrContext\n\t\t) {\n\t\t\tprovider = addressOrOptionsOrContext.provider;\n\t\t} else if (\n\t\t\ttypeof optionsOrContextOrReturnFormat === 'object' &&\n\t\t\t'provider' in optionsOrContextOrReturnFormat\n\t\t) {\n\t\t\tprovider = optionsOrContextOrReturnFormat.provider;\n\t\t} else if (\n\t\t\ttypeof contextOrReturnFormat === 'object' &&\n\t\t\t'provider' in contextOrReturnFormat\n\t\t) {\n\t\t\tprovider = contextOrReturnFormat.provider;\n\t\t} else {\n\t\t\tprovider = Contract.givenProvider;\n\t\t}\n\n\t\tsuper({\n\t\t\t...contractContext,\n\t\t\tprovider,\n\t\t\tregisteredSubscriptions: contractSubscriptions,\n\t\t});\n\n\t\tthis._subscriptionManager = new ContractSubscriptionManager<\n\t\t\tEthExecutionAPI,\n\t\t\tContractSubscriptions\n\t\t>(super.subscriptionManager, this);\n\n\t\t// Init protected properties\n\t\tif ((contractContext as Web3Context)?.wallet) {\n\t\t\tthis._wallet = (contractContext as Web3Context).wallet;\n\t\t}\n\t\tif ((contractContext as Web3Context)?.accountProvider) {\n\t\t\tthis._accountProvider = (contractContext as Web3Context).accountProvider;\n\t\t}\n\n\t\tif (\n\t\t\t!isNullish(options) &&\n\t\t\t!isNullish(options.data) &&\n\t\t\t!isNullish(options.input) &&\n\t\t\tthis.config.contractDataInputFill !== 'both'\n\t\t)\n\t\t\tthrow new ContractTransactionDataAndInputError({\n\t\t\t\tdata: options.data as HexString,\n\t\t\t\tinput: options.input as HexString,\n\t\t\t});\n\t\tthis._overloadedMethodAbis = new Map<string, AbiFunctionFragment[]>();\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnDataFormat = isDataFormat(contextOrReturnFormat)\n\t\t\t? contextOrReturnFormat\n\t\t\t: isDataFormat(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: returnFormat ?? this.defaultReturnFormat;\n\t\tconst address =\n\t\t\ttypeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n\t\tthis.config.contractDataInputFill =\n\t\t\t(options as ContractInitOptions)?.dataInputFill ?? this.config.contractDataInputFill;\n\t\tthis._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n\n\t\tif (this.defaultReturnFormat !== returnDataFormat) {\n\t\t\tthis.defaultReturnFormat = returnDataFormat;\n\t\t}\n\n\t\tif (!isNullish(address)) {\n\t\t\tthis._parseAndSetAddress(address, returnDataFormat);\n\t\t}\n\n\t\tthis.options = {\n\t\t\taddress,\n\t\t\tjsonInterface: this._jsonInterface,\n\t\t\tgas: options?.gas ?? options?.gasLimit,\n\t\t\tgasPrice: options?.gasPrice,\n\t\t\tfrom: options?.from,\n\t\t\tinput: options?.input,\n\t\t\tdata: options?.data,\n\t\t};\n\n\t\tthis.syncWithContext = (options as ContractInitOptions)?.syncWithContext ?? false;\n\t\tif (contractContext instanceof Web3Context) {\n\t\t\tthis.subscribeToContextEvents(contractContext);\n\t\t}\n\t\tObject.defineProperty(this.options, 'address', {\n\t\t\tset: (value: Address) => this._parseAndSetAddress(value, returnDataFormat),\n\t\t\tget: () => this._address,\n\t\t});\n\n\t\tObject.defineProperty(this.options, 'jsonInterface', {\n\t\t\tset: (value: ContractAbi) => this._parseAndSetJsonInterface(value, returnDataFormat),\n\t\t\tget: () => this._jsonInterface,\n\t\t});\n\n\t\tif (contractContext instanceof Web3Context) {\n\t\t\tcontractContext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\tthis.setConfig({ [event.name]: event.newValue });\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setTransactionMiddleware(transactionMiddleware: TransactionMiddleware) {\n\t\tthis.transactionMiddleware = transactionMiddleware;\n\t}\n\n\tpublic getTransactionMiddleware() {\n\t\treturn this.transactionMiddleware;\n\t}\n\n\t/**\n\t * Subscribe to an event.\n\t *\n\t * ```ts\n\t * await myContract.events.MyEvent([options])\n\t * ```\n\t *\n\t * There is a special event `allEvents` that can be used to subscribe all events.\n\t *\n\t * ```ts\n\t * await myContract.events.allEvents([options])\n\t * ```\n\t *\n\t * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n\t */\n\tpublic get events() {\n\t\treturn this._events;\n\t}\n\n\t/**\n\t * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n\t *\n\t * The methods of this smart contract are available through:\n\t *\n\t * The name: `myContract.methods.myMethod(123)`\n\t * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n\t * The signature `myContract.methods['0x58cf5f10'](123)`\n\t *\n\t * This allows calling functions with same name but different parameters from the JavaScript contract object.\n\t *\n\t * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n\t *\n\t * ```ts\n\t * // calling a method\n\t * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using a promise\n\t * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using the events\n\t * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t * sendObject.on('transactionHash', function(hash){\n\t *   ...\n\t * });\n\t * sendObject.on('receipt', function(receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('confirmation', function(confirmationNumber, receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('error', function(error, receipt) {\n\t *   ...\n\t * });\n\t * ```\n\t *\n\t * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the ABI of that contract.\n\t */\n\tpublic get methods() {\n\t\treturn this._methods;\n\t}\n\n\t/**\n\t * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n\t *\n\t * @returns - The new contract instance.\n\t *\n\t * ```ts\n\t * const contract1 = new web3.eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n\t *\n\t * const contract2 = contract1.clone();\n\t * contract2.options.address = '0xdAC17F958D2ee523a2206206994597C13D831ec7';\n\t *\n\t * (contract1.options.address !== contract2.options.address);\n\t * > true\n\t * ```\n\t */\n\tpublic clone() {\n\t\tlet newContract: Contract<Abi>;\n\t\tif (this.options.address) {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\tthis.options.address,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tdata: this.options.data,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t\tdataInputFill: this.config.contractDataInputFill,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t} else {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tdata: this.options.data,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t\tdataInputFill: this.config.contractDataInputFill,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t}\n\t\tif (this.context) newContract.subscribeToContextEvents(this.context);\n\n\t\treturn newContract;\n\t}\n\n\t/**\n\t * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n\t *\n\t * ```ts\n\t * myContract.deploy({\n\t *   input: '0x12345...', // data keyword can be used, too.\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * }, function(error, transactionHash){ ... })\n\t * .on('error', function(error){ ... })\n\t * .on('transactionHash', function(transactionHash){ ... })\n\t * .on('receipt', function(receipt){\n\t *  console.log(receipt.contractAddress) // contains the new contract address\n\t * })\n\t * .on('confirmation', function(confirmationNumber, receipt){ ... })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // When the data is already set as an option to the contract itself\n\t * myContract.options.data = '0x12345...';\n\t *\n\t * myContract.deploy({\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // Simply encoding\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .encodeABI();\n\t * > '0x12345...0000012345678765432'\n\t *\n\t *\n\t * // decoding\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   // arguments: [123, 'My Greeting'] if you just need to decode the data, you can skip the arguments\n\t * })\n\t * .decodeData('0x12345...0000012345678765432');\n\t * > {\n\t *      __method__: 'constructor',\n\t *      __length__: 2,\n\t *      '0': '123',\n\t *      _id: '123',\n\t *      '1': 'My Greeting',\n\t *      _greeting: 'My Greeting',\n\t *   }\n\t *\n\t *\n\t * // Gas estimation\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .estimateGas(function(err, gas){\n\t *   console.log(gas);\n\t * });\n\t * ```\n\t *\n\t * @returns - The transaction object\n\t */\n\tpublic deploy(deployOptions?: {\n\t\t/**\n\t\t * The byte code of the contract.\n\t\t */\n\t\tdata?: HexString;\n\t\tinput?: HexString;\n\t\t/**\n\t\t * The arguments which get passed to the constructor on deployment.\n\t\t */\n\t\targuments?: ContractConstructorArgs<Abi>;\n\t}): DeployerMethodClass<Abi> {\n\t\treturn new DeployerMethodClass(this, deployOptions);\n\t}\n\n\t/**\n\t * Gets past events for this contract.\n\t *\n\t * ```ts\n\t * const events = await myContract.getPastEvents('MyEvent', {\n\t *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n\t *   fromBlock: 0,\n\t *   toBlock: 'latest'\n\t * });\n\t *\n\t * > [{\n\t *   returnValues: {\n\t *       myIndexedParam: 20,\n\t *       myOtherIndexedParam: '0x123456789...',\n\t *       myNonIndexParam: 'My String'\n\t *   },\n\t *   raw: {\n\t *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *   },\n\t *   event: 'MyEvent',\n\t *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   logIndex: 0,\n\t *   transactionIndex: 0,\n\t *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   blockNumber: 1234,\n\t *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t * },{\n\t *   ...\n\t * }]\n\t * ```\n\t *\n\t * @param eventName - The name of the event in the contract, or `allEvents` to get all events.\n\t * @param filter - The filter options used to get events.\n\t * @param returnFormat - Return format\n\t * @returns - An array with the past event `Objects`, matching the given event name and filter.\n\t */\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents' | 'ALLEVENTS',\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents' | 'ALLEVENTS',\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tparam1?:\n\t\t\t| keyof ContractEvents<Abi>\n\t\t\t| 'allEvents'\n\t\t\t| 'ALLEVENTS'\n\t\t\t| Omit<Filter, 'address'>\n\t\t\t| ReturnFormat,\n\t\tparam2?: Omit<Filter, 'address'> | ReturnFormat,\n\t\tparam3?: ReturnFormat,\n\t): Promise<(string | EventLog)[]> {\n\t\tconst eventName: string = typeof param1 === 'string' ? param1 : ALL_EVENTS;\n\n\t\tconst options =\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\ttypeof param1 !== 'string' && !isDataFormat(param1)\n\t\t\t\t? (param1 as Omit<Filter, 'address'>)\n\t\t\t\t: !isDataFormat(param2)\n\t\t\t\t? param2\n\t\t\t\t: {};\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnFormat = isDataFormat(param1)\n\t\t\t? param1\n\t\t\t: isDataFormat(param2)\n\t\t\t? param2\n\t\t\t: param3 ?? this.defaultReturnFormat;\n\n\t\tconst abi =\n\t\t\teventName === 'allEvents' || eventName === ALL_EVENTS\n\t\t\t\t? ALL_EVENTS_ABI\n\t\t\t\t: (this._jsonInterface.find(\n\t\t\t\t\t\tj => 'name' in j && j.name === eventName,\n\t\t\t\t  ) as AbiEventFragment & { signature: string });\n\n\t\tif (!abi) {\n\t\t\tthrow new Web3ContractError(`Event ${String(eventName)} not found.`);\n\t\t}\n\n\t\tconst { fromBlock, toBlock, topics, address } = encodeEventABI(\n\t\t\tthis.options,\n\t\t\tabi,\n\t\t\toptions ?? {},\n\t\t);\n\n\t\tconst logs = await getLogs(this, { fromBlock, toBlock, topics, address }, returnFormat);\n\t\tconst decodedLogs = logs\n\t\t\t? logs.map(log =>\n\t\t\t\t\ttypeof log === 'string'\n\t\t\t\t\t\t? log\n\t\t\t\t\t\t: decodeEventABI(abi, log as LogsInput, this._jsonInterface, returnFormat),\n\t\t\t  )\n\t\t\t: [];\n\n\t\tconst filter = options?.filter ?? {};\n\t\tconst filterKeys = Object.keys(filter);\n\n\t\tif (filterKeys.length > 0) {\n\t\t\treturn decodedLogs.filter(log => {\n\t\t\t\tif (typeof log === 'string') return true;\n\n\t\t\t\treturn filterKeys.every((key: string) => {\n\t\t\t\t\tif (Array.isArray(filter[key])) {\n\t\t\t\t\t\treturn (filter[key] as Numbers[]).some(\n\t\t\t\t\t\t\t(v: Numbers) =>\n\t\t\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\t\t\tString(v).toUpperCase(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst inputAbi = abi.inputs?.filter(input => input.name === key)[0];\n\t\t\t\t\tif (inputAbi?.indexed && inputAbi.type === 'string') {\n\t\t\t\t\t\tconst hashedIndexedString = keccak256(filter[key] as string);\n\t\t\t\t\t\tif (hashedIndexedString === String(log.returnValues[key])) return true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\tString(filter[key]).toUpperCase()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn decodedLogs;\n\t}\n\n\tprivate _parseAndSetAddress(\n\t\tvalue?: Address,\n\t\treturnFormat: DataFormat = this.defaultReturnFormat,\n\t) {\n\t\tthis._address = value\n\t\t\t? toChecksumAddress(format({ format: 'address' }, value, returnFormat))\n\t\t\t: value;\n\t}\n\n\tpublic decodeMethodData(data: HexString): DecodedParams & { __method__: string } {\n\t\tconst methodSignature = data.slice(0, 10);\n\t\tconst functionsAbis = this._jsonInterface.filter(j => j.type !== 'error');\n\n\t\tconst abi = functionsAbis.find(\n\t\t\ta => methodSignature === encodeFunctionSignature(jsonInterfaceMethodToString(a)),\n\t\t);\n\t\tif (!abi) {\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t`The ABI for the provided method signature ${methodSignature} was not found.`,\n\t\t\t);\n\t\t}\n\t\treturn decodeFunctionCall(abi, data);\n\t}\n\n\tprivate _parseAndSetJsonInterface(\n\t\tabis: ContractAbi,\n\t\treturnFormat: DataFormat = this.defaultReturnFormat,\n\t) {\n\t\tthis._functions = {};\n\t\tthis._methods = {} as ContractMethodsInterface<Abi>;\n\t\tthis._events = {} as ContractEventsInterface<Abi>;\n\n\t\tlet result: ContractAbi = [];\n\n\t\tconst functionsAbi = abis.filter(abi => abi.type !== 'error');\n\t\tconst errorsAbi = abis.filter(abi =>\n\t\t\tisAbiErrorFragment(abi),\n\t\t) as unknown as AbiErrorFragment[];\n\n\t\tfor (const a of functionsAbi) {\n\t\t\tconst abi: Mutable<AbiFragment & { signature: HexString }> = {\n\t\t\t\t...a,\n\t\t\t\tsignature: '',\n\t\t\t};\n\n\t\t\tif (isAbiFunctionFragment(abi)) {\n\t\t\t\tconst methodName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst methodSignature = encodeFunctionSignature(methodName);\n\t\t\t\tabi.methodNameWithInputs = methodName;\n\t\t\t\tabi.signature = methodSignature;\n\n\t\t\t\t// make constant and payable backwards compatible\n\t\t\t\tabi.constant =\n\t\t\t\t\tabi.stateMutability === 'view' ||\n\t\t\t\t\tabi.stateMutability === 'pure' ||\n\t\t\t\t\tabi.constant;\n\n\t\t\t\tabi.payable = abi.stateMutability === 'payable' || abi.payable;\n\t\t\t\tthis._overloadedMethodAbis.set(abi.name, [\n\t\t\t\t\t...(this._overloadedMethodAbis.get(abi.name) ?? []),\n\t\t\t\t\tabi,\n\t\t\t\t]);\n\t\t\t\tconst abiFragment = this._overloadedMethodAbis.get(abi.name) ?? [];\n\t\t\t\tconst contractMethod = this._createContractMethod<\n\t\t\t\t\ttypeof abiFragment,\n\t\t\t\t\tAbiErrorFragment\n\t\t\t\t>(abiFragment, errorsAbi);\n\n\t\t\t\tconst exactContractMethod = this._createContractMethod<\n\t\t\t\t\ttypeof abiFragment,\n\t\t\t\t\tAbiErrorFragment\n\t\t\t\t>(abiFragment, errorsAbi, true);\n\n\t\t\t\tthis._functions[methodName] = {\n\t\t\t\t\tsignature: methodSignature,\n\t\t\t\t\tmethod: exactContractMethod,\n\t\t\t\t};\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[abi.name as keyof ContractMethodsInterface<Abi>] =\n\t\t\t\t\tcontractMethod as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodName as keyof ContractMethodsInterface<Abi>] =\n\t\t\t\t\texactContractMethod as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodSignature as keyof ContractMethodsInterface<Abi>] =\n\t\t\t\t\texactContractMethod as never;\n\t\t\t} else if (isAbiEventFragment(abi)) {\n\t\t\t\tconst eventName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst eventSignature = encodeEventSignature(eventName);\n\t\t\t\tconst event = this._createContractEvent(abi, returnFormat);\n\t\t\t\tabi.signature = eventSignature;\n\n\t\t\t\tif (!(eventName in this._events) || abi.name === 'bound') {\n\t\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\t\tthis._events[eventName as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t}\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[abi.name as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[eventSignature as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t}\n\n\t\t\tresult = [...result, abi];\n\t\t}\n\n\t\tthis._events.allEvents = this._createContractEvent(ALL_EVENTS_ABI, returnFormat);\n\t\tthis._jsonInterface = [...result] as unknown as ContractAbiWithSignature;\n\t\tthis._errorsInterface = errorsAbi;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _getAbiParams(abi: AbiFunctionFragment, params: unknown[]): Array<unknown> {\n\t\ttry {\n\t\t\treturn validatorUtils.transformJsonDataToAbiFormat(abi.inputs ?? [], params);\n\t\t} catch (error) {\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t`Invalid parameters for method ${abi.name}: ${(error as Error).message}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _createContractMethod<T extends AbiFunctionFragment[], E extends AbiErrorFragment>(\n\t\tabiArr: T,\n\t\terrorsAbis: E[],\n\t\texact = false, // when true, it will only match the exact method signature\n\t): ContractBoundMethod<T[0]> {\n\t\tconst abi = abiArr[abiArr.length - 1];\n\t\treturn (...params: unknown[]) => {\n\t\t\tlet abiParams!: Array<unknown>;\n\t\t\tconst abis =\n\t\t\t\t(exact\n\t\t\t\t\t? this._overloadedMethodAbis\n\t\t\t\t\t\t\t.get(abi.name)\n\t\t\t\t\t\t\t?.filter(_abi => _abi.signature === abi.signature)\n\t\t\t\t\t: this._overloadedMethodAbis.get(abi.name)) ?? [];\n\t\t\tlet methodAbi: AbiFunctionFragment = abis[0];\n\t\t\tconst internalErrorsAbis = errorsAbis;\n\n\t\t\tconst arrayOfAbis: AbiFunctionFragment[] = abis.filter(\n\t\t\t\t_abi => (_abi.inputs ?? []).length === params.length,\n\t\t\t);\n\n\t\t\tif (abis.length === 1 || arrayOfAbis.length === 0) {\n\t\t\t\tabiParams = this._getAbiParams(methodAbi, params);\n\t\t\t\tvalidator.validate(abi.inputs ?? [], abiParams);\n\t\t\t} else {\n\t\t\t\tconst errors: Web3ValidationErrorObject[] = [];\n\n\t\t\t\t// all the methods that have is valid for the given inputs\n\t\t\t\tconst applicableMethodAbi: AbiFunctionFragment[] = [];\n\t\t\t\tfor (const _abi of arrayOfAbis) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tabiParams = this._getAbiParams(_abi, params);\n\t\t\t\t\t\tvalidator.validate(\n\t\t\t\t\t\t\t_abi.inputs as unknown as ValidationSchemaInput,\n\t\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tapplicableMethodAbi.push(_abi);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\terrors.push(e as Web3ValidationErrorObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (applicableMethodAbi.length === 1) {\n\t\t\t\t\t[methodAbi] = applicableMethodAbi; // take the first item that is the only item in the array\n\t\t\t\t} else if (applicableMethodAbi.length > 1) {\n\t\t\t\t\t[methodAbi] = applicableMethodAbi; // take the first item in the array\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Multiple methods found that is compatible with the given inputs.\\n\\tFound ${\n\t\t\t\t\t\t\tapplicableMethodAbi.length\n\t\t\t\t\t\t} compatible methods: ${JSON.stringify(\n\t\t\t\t\t\t\tapplicableMethodAbi.map(\n\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\t(m as { methodNameWithInputs: string }).methodNameWithInputs\n\t\t\t\t\t\t\t\t\t} (signature: ${(m as { signature: string }).signature})`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)} \\n\\tThe first one will be used: ${\n\t\t\t\t\t\t\t(methodAbi as { methodNameWithInputs: string }).methodNameWithInputs\n\t\t\t\t\t\t}`,\n\t\t\t\t\t);\n\t\t\t\t\t// TODO: 5.x Should throw a new error with the list of methods found.\n\t\t\t\t\t// Related issue: https://github.com/web3/web3.js/issues/6923\n\t\t\t\t\t// This is in order to provide an error message when there is more than one method found that fits the inputs.\n\t\t\t\t\t// To do that, replace the pervious line of code with something like the following line:\n\t\t\t\t\t// throw new Web3ValidatorError({ message: 'Multiple methods found',  ... list of applicable methods }));\n\t\t\t\t}\n\t\t\t\tif (errors.length === arrayOfAbis.length) {\n\t\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst methods = {\n\t\t\t\targuments: abiParams,\n\n\t\t\t\tcall: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCall(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\n\t\t\t\tsend: (options?: PayableTxOptions | NonPayableTxOptions): ContractMethodSend =>\n\t\t\t\t\tthis._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),\n\t\t\t\tpopulateTransaction: (\n\t\t\t\t\toptions?: PayableTxOptions | NonPayableTxOptions,\n\t\t\t\t\tcontractOptions?: ContractOptions,\n\t\t\t\t) => {\n\t\t\t\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\t\t\t\tmodifiedContractOptions = {\n\t\t\t\t\t\t...modifiedContractOptions,\n\t\t\t\t\t\tinput: undefined,\n\t\t\t\t\t\tfrom: modifiedContractOptions?.from ?? this.defaultAccount ?? undefined,\n\t\t\t\t\t};\n\t\t\t\t\tconst tx = getSendTxParams({\n\t\t\t\t\t\tabi,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\t\t\t\tcontractOptions: modifiedContractOptions,\n\t\t\t\t\t});\n\t\t\t\t\t// @ts-expect-error remove unnecessary field\n\t\t\t\t\tif (tx.dataInputFill) {\n\t\t\t\t\t\t// @ts-expect-error remove unnecessary field\n\t\t\t\t\t\tdelete tx.dataInputFill;\n\t\t\t\t\t}\n\t\t\t\t\treturn tx;\n\t\t\t\t},\n\t\t\t\testimateGas: async <ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\treturnFormat: ReturnFormat = this\n\t\t\t\t\t\t.defaultReturnFormat as unknown as ReturnFormat,\n\t\t\t\t) =>\n\t\t\t\t\tthis.contractMethodEstimateGas({\n\t\t\t\t\t\tabi: methodAbi,\n\t\t\t\t\t\tparams: abiParams,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t}),\n\n\t\t\t\tencodeABI: () => encodeMethodABI(methodAbi, abiParams),\n\t\t\t\tdecodeData: (data: HexString) => decodeFunctionCall(methodAbi, data),\n\n\t\t\t\tcreateAccessList: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCreateAccessList(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\t\t\t};\n\n\t\t\tif (methodAbi.stateMutability === 'payable') {\n\t\t\t\treturn methods as PayableMethodObject<\n\t\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t\t>;\n\t\t\t}\n\t\t\treturn methods as NonPayableMethodObject<\n\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t>;\n\t\t};\n\t}\n\n\tprivate async _contractMethodCall<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getEthTxCallParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: {\n\t\t\t\t...options,\n\t\t\t\tdataInputFill: this.config.contractDataInputFill,\n\t\t\t},\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\t\ttry {\n\t\t\tconst result = await call(\n\t\t\t\tthis,\n\t\t\t\ttx,\n\t\t\t\tblock,\n\t\t\t\tthis.defaultReturnFormat as typeof DEFAULT_RETURN_FORMAT,\n\t\t\t);\n\t\t\treturn decodeFunctionReturn(abi, result);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.cause);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async _contractMethodCreateAccessList<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getCreateAccessListParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\n\t\ttry {\n\t\t\treturn createAccessList(this, tx, block, this.defaultReturnFormat);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.cause);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate _contractMethodSend<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tcontractOptions?: ContractOptions,\n\t) {\n\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\tmodifiedContractOptions = {\n\t\t\t...modifiedContractOptions,\n\t\t\tinput: undefined,\n\t\t\tfrom: modifiedContractOptions.from ?? this.defaultAccount ?? undefined,\n\t\t};\n\t\tconst tx = getSendTxParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\n\t\tconst transactionToSend = isNullish(this.transactionMiddleware)\n\t\t\t? sendTransaction(this, tx, this.defaultReturnFormat, {\n\t\t\t\t\t// TODO Should make this configurable by the user\n\t\t\t\t\tcheckRevertBeforeSending: false,\n\t\t\t\t\tcontractAbi: this._jsonInterface, // explicitly not passing middleware so if some one is using old eth package it will not break\n\t\t\t  })\n\t\t\t: sendTransaction(\n\t\t\t\t\tthis,\n\t\t\t\t\ttx,\n\t\t\t\t\tthis.defaultReturnFormat,\n\t\t\t\t\t{\n\t\t\t\t\t\t// TODO Should make this configurable by the user\n\t\t\t\t\t\tcheckRevertBeforeSending: false,\n\t\t\t\t\t\tcontractAbi: this._jsonInterface,\n\t\t\t\t\t},\n\t\t\t\t\tthis.transactionMiddleware,\n\t\t\t  );\n\n\t\t// eslint-disable-next-line no-void\n\t\tvoid transactionToSend.on('error', (error: unknown) => {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.cause);\n\t\t\t}\n\t\t});\n\t\treturn transactionToSend;\n\t}\n\n\tpublic async contractMethodEstimateGas<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t\tReturnFormat extends DataFormat,\n\t>({\n\t\tabi,\n\t\tparams,\n\t\treturnFormat,\n\t\toptions,\n\t\tcontractOptions,\n\t}: {\n\t\tabi: AbiFunctionFragment;\n\t\tparams: unknown[];\n\t\treturnFormat: ReturnFormat;\n\t\toptions?: Options;\n\t\tcontractOptions?: ContractOptions;\n\t}) {\n\t\tconst tx = getEstimateGasParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions: { ...options, dataInputFill: this.config.contractDataInputFill },\n\t\t\tcontractOptions: contractOptions ?? this.options,\n\t\t});\n\t\treturn estimateGas(this, tx, BlockTags.LATEST, returnFormat ?? this.defaultReturnFormat);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _createContractEvent(\n\t\tabi: AbiEventFragment & { signature: HexString },\n\t\treturnFormat: DataFormat = this.defaultReturnFormat,\n\t): ContractBoundEvent {\n\t\treturn (...params: unknown[]) => {\n\t\t\tconst { topics, fromBlock } = encodeEventABI(\n\t\t\t\tthis.options,\n\t\t\t\tabi,\n\t\t\t\tparams[0] as EventParameters,\n\t\t\t);\n\t\t\tconst sub = new ContractLogsSubscription(\n\t\t\t\t{\n\t\t\t\t\taddress: this.options.address,\n\t\t\t\t\ttopics,\n\t\t\t\t\tabi,\n\t\t\t\t\tjsonInterface: this._jsonInterface,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsubscriptionManager: this.subscriptionManager as Web3SubscriptionManager<\n\t\t\t\t\t\tunknown,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[key: string]: Web3SubscriptionConstructor<unknown>;\n\t\t\t\t\t\t}\n\t\t\t\t\t>,\n\t\t\t\t\treturnFormat,\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (!isNullish(fromBlock)) {\n\t\t\t\t// emit past events when fromBlock is defined\n\t\t\t\tthis.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)\n\t\t\t\t\t.then(logs => {\n\t\t\t\t\t\tif (logs) {\n\t\t\t\t\t\t\tlogs.forEach(log => sub.emit('data', log as EventLog));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\tsub.emit(\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\tnew SubscriptionError('Failed to get past events.', error),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tthis.subscriptionManager?.addSubscription(sub).catch((error: Error) => {\n\t\t\t\tsub.emit('error', new SubscriptionError('Failed to subscribe.', error));\n\t\t\t});\n\n\t\t\treturn sub;\n\t\t};\n\t}\n\n\tprotected subscribeToContextEvents<T extends Web3Context>(context: T): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst contractThis = this;\n\t\tthis.context = context;\n\n\t\tif (contractThis.syncWithContext) {\n\t\t\tcontext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t\tcontractThis.setConfig({ [event.name]: event.newValue });\n\t\t\t});\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/types.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3ContextInitOptions, Web3PromiEvent } from 'web3-core';\nimport {\n\tAccessListResult,\n\tBlockNumberOrTag,\n\tEthExecutionAPI,\n\tHexString,\n\tNumbers,\n\tTransactionReceipt,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tFormatType,\n\tTransactionCall,\n} from 'web3-types';\nimport { NewHeadsSubscription, SendTransactionEvents } from 'web3-eth';\nimport type { ContractOptions } from 'web3-types';\nimport { ContractLogsSubscription } from './contract_log_subscription.js';\n\nexport type NonPayableTxOptions = NonPayableCallOptions;\nexport type PayableTxOptions = PayableCallOptions;\nexport type { ContractAbiWithSignature, EventLog, ContractOptions } from 'web3-types';\n\nexport interface ContractEventOptions {\n\t/**\n\t * Let you filter events by indexed parameters, e.g. `{filter: {myNumber: [12,13]}}` means all events where `myNumber` is `12` or `13`.\n\t */\n\tfilter?: Record<string, unknown>;\n\t/**\n\t * The block number (greater than or equal to) from which to get events on. Pre-defined block numbers as `earliest`, `latest`, `pending`, `safe` or `finalized` can also be used. For specific range use {@link Contract.getPastEvents}.\n\t */\n\tfromBlock?: BlockNumberOrTag;\n\t/**\n\t * This allows to manually set the topics for the event filter. If given the filter property and event signature, (topic[0]) will not be set automatically. Each topic can also be a nested array of topics that behaves as `or` operation between the given nested topics.\n\t */\n\ttopics?: string[];\n}\n\nexport interface NonPayableMethodObject<Inputs = unknown[], Outputs = unknown[]> {\n\targuments: Inputs;\n\t/**\n\t * This will call a method and execute its smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.\n\t *\n\t * ```ts\n\t * // using the promise\n\t * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // MULTI-ARGUMENT RETURN:\n\t * // Solidity\n\t * contract MyContract {\n\t *   function myFunction() returns(uint256 myNumber, string myString) {\n\t *       return (23456, \"Hello!%\");\n\t *   }\n\t * }\n\t *\n\t * // web3.js\n\t * var MyContract = new web3.eth.Contract(abi, address);\n\t * const result = MyContract.methods.myFunction().call()\n\t * console.log(result)\n\t * > Result {\n\t *   myNumber: '23456',\n\t *   myString: 'Hello!%',\n\t *   0: '23456', // these are here as fallbacks if the name is not know or given\n\t *   1: 'Hello!%'\n\t * }\n\t *\n\t *\n\t * // SINGLE-ARGUMENT RETURN:\n\t * // Solidity\n\t * contract MyContract {\n\t *   function myFunction() returns(string myString) {\n\t *       return \"Hello!%\";\n\t *   }\n\t * }\n\t *\n\t * // web3.js\n\t * const MyContract = new web3.eth.Contract(abi, address);\n\t * const result = await MyContract.methods.myFunction().call();\n\t * console.log(result);\n\t * > \"Hello!%\"\n\t * ```\n\t *\n\t * @param tx - The options used for calling.\n\t * @param block - If you pass this parameter it will not use the default block set with contract.defaultBlock. Pre-defined block numbers as `earliest`, `latest`, `pending`, `safe` or `finalized can also be used. Useful for requesting data from or replaying transactions in past blocks.\n\t * @returns - The return value(s) of the smart contract method. If it returns a single value, it’s returned as is. If it has multiple return values they are returned as an object with properties and indices.\n\t */\n\n\tcall<SpecialOutput = Outputs>(\n\t\ttx?: NonPayableCallOptions,\n\t\tblock?: BlockNumberOrTag,\n\t): Promise<SpecialOutput>;\n\n\t/**\n\t * This will send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.\n\t *\n\t * ```ts\n\t * await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t *\n\t * // using the event emitter\n\t * const sendObj = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n\t * sendObj.on('transactionHash', function(hash){\n\t *   ...\n\t * });\n\t *\n\t * sendObj.on('confirmation', function(confirmationNumber, receipt){\n\t *   ...\n\t * });\n\t *\n\t * sendObj.on('receipt', function(receipt){\n\t *   // receipt example\n\t *   console.log(receipt);\n\t *   > {\n\t *       \"transactionHash\": \"0x9fc76417374aa880d4449a1f7f31ec597f00b1f6f3dd2d66f4c9c6c445836d8b\",\n\t *       \"transactionIndex\": 0,\n\t *       \"blockHash\": \"0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46\",\n\t *       \"blockNumber\": 3,\n\t *       \"contractAddress\": \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n\t *       \"cumulativeGasUsed\": 314159,\n\t *       \"gasUsed\": 30234,\n\t *       \"events\": {\n\t *           \"MyEvent\": {\n\t *               returnValues: {\n\t *                   myIndexedParam: 20,\n\t *                   myOtherIndexedParam: '0x123456789...',\n\t *                   myNonIndexParam: 'My String'\n\t *               },\n\t *               raw: {\n\t *                   data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *                   topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *               },\n\t *               event: 'MyEvent',\n\t *               signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *               logIndex: 0,\n\t *               transactionIndex: 0,\n\t *               transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *               blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *               blockNumber: 1234,\n\t *               address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t *           },\n\t *           \"MyOtherEvent\": {\n\t *               ...\n\t *           },\n\t *           \"MyMultipleEvent\":[{...}, {...}] // If there are multiple of the same event, they will be in an array\n\t *       }\n\t *   }\n\t * });\n\t *\n\t * sendObj.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n\t *   ...\n\t * });\n\t * ```\n\t *\n\t * @param tx - The options used for sending.\n\t * @returns - Returns a {@link PromiEvent} resolved with transaction receipt.\n\t */\n\tsend(\n\t\ttx?: NonPayableTxOptions,\n\t): Web3PromiEvent<\n\t\tFormatType<TransactionReceipt, typeof DEFAULT_RETURN_FORMAT>,\n\t\tSendTransactionEvents<typeof DEFAULT_RETURN_FORMAT>\n\t>;\n\tpopulateTransaction(\n\t\ttx?: PayableTxOptions | NonPayableTxOptions,\n\t\tcontractOptions?: ContractOptions,\n\t): TransactionCall;\n\n\t/**\n\t * Returns the amount of gas consumed by executing the method locally without creating a new transaction on the blockchain.\n\t * The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be\n\t * different when sending the transaction later, as the state of the smart contract can be different at that time.\n\t *\n\t * ```ts\n\t * const gasAmount = await myContract.methods.myMethod(123).estimateGas({gas: 5000000});\n\t * if(gasAmount == 5000000) {\n\t *   console.log('Method ran out of gas');\n\t * }\n\t * ```\n\t *\n\t * @param options  - The options used for calling\n\t * @param returnFormat - The data format you want the output in.\n\t * @returns - The gas amount estimated.\n\t */\n\testimateGas<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\toptions?: NonPayableCallOptions,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<FormatType<Numbers, ReturnFormat>>;\n\n\t/**\n\t * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format.\n\t * This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments.\n\t * Set the data field on `web3.eth.sendTransaction` options as the encodeABI() result and it is the same as calling the contract method with `contract.myMethod.send()`.\n\t *\n\t * Some use cases for encodeABI() include: preparing a smart contract transaction for a multi signature wallet,\n\t * working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.\n\t *\n\t * @returns - The encoded ABI byte code to send via a transaction or call.\n\t */\n\tencodeABI(): string;\n\n\t/**\n\t * Decode raw result of method call into readable value(s).\n\t *\n\t * @param data - The data to decode.\n\t * @returns - The decoded data.\n\t */\n\tdecodeData<SpecialInputs = Inputs>(data: HexString): SpecialInputs;\n\n\t/**\n\t * This method generates an access list for a transaction. You must specify a `from` address and `gas` if it’s not specified in options.\n\t *\n\t * @param options - The options used for createAccessList.\n\t * @param block - If you pass this parameter it will not use the default block set with contract.defaultBlock. Pre-defined block numbers as `earliest`, `latest`, `pending`, `safe` or `finalized can also be used. Useful for requesting data from or replaying transactions in past blocks.\n\t * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n\t *\n\t * ```ts\n\t *  const result = await MyContract.methods.myFunction().createAccessList();\n\t *  console.log(result);\n\t *\n\t * > {\n\t *  \"accessList\": [\n\t *     {\n\t *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n\t *       \"storageKeys\": [\n\t *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n\t *       ]\n\t *     }\n\t *   ],\n\t *   \"gasUsed\": \"0x7671\"\n\t * }\n\t * ```\n\t */\n\tcreateAccessList(\n\t\ttx?: NonPayableCallOptions,\n\t\tblock?: BlockNumberOrTag,\n\t): Promise<AccessListResult>;\n}\n\nexport interface PayableMethodObject<Inputs = unknown[], Outputs = unknown[]> {\n\targuments: Inputs;\n\t/**\n\t * Will call a method and execute its smart contract method in the EVM without sending any transaction. Note calling cannot alter the smart contract state.\n\t *\n\t * ```ts\n\t * // using the promise\n\t * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // MULTI-ARGUMENT RETURN:\n\t * // Solidity\n\t * contract MyContract {\n\t *   function myFunction() returns(uint256 myNumber, string myString) {\n\t *       return (23456, \"Hello!%\");\n\t *   }\n\t * }\n\t *\n\t * // web3.js\n\t * var MyContract = new web3.eth.Contract(abi, address);\n\t * const result = MyContract.methods.myFunction().call()\n\t * console.log(result)\n\t * > Result {\n\t *   myNumber: '23456',\n\t *   myString: 'Hello!%',\n\t *   0: '23456', // these are here as fallbacks if the name is not know or given\n\t *   1: 'Hello!%'\n\t * }\n\t *\n\t *\n\t * // SINGLE-ARGUMENT RETURN:\n\t * // Solidity\n\t * contract MyContract {\n\t *   function myFunction() returns(string myString) {\n\t *       return \"Hello!%\";\n\t *   }\n\t * }\n\t *\n\t * // web3.js\n\t * const MyContract = new web3.eth.Contract(abi, address);\n\t * const result = await MyContract.methods.myFunction().call();\n\t * console.log(result);\n\t * > \"Hello!%\"\n\t * ```\n\t *\n\t * @param tx - The options used for calling.\n\t * @param block - If you pass this parameter it will not use the default block set with contract.defaultBlock. Pre-defined block numbers as `earliest`, `latest`, `pending`, `safe` or `finalized can also be used. Useful for requesting data from or replaying transactions in past blocks.\n\t * @returns - The return value(s) of the smart contract method. If it returns a single value, it’s returned as is. If it has multiple return values they are returned as an object with properties and indices.\n\t */\n\tcall<SpecialOutput = Outputs>(\n\t\ttx?: PayableCallOptions,\n\t\tblock?: BlockNumberOrTag,\n\t): Promise<SpecialOutput>;\n\n\t/**\n\t * Will send a transaction to the smart contract and execute its method. Note this can alter the smart contract state.\n\t *\n\t * ```ts\n\t * await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t *\n\t * // using the event emitter\n\t * const sendObj = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'})\n\t * sendObj.on('transactionHash', function(hash){\n\t *   ...\n\t * });\n\t *\n\t * sendObj.on('confirmation', function(confirmationNumber, receipt){\n\t *   ...\n\t * });\n\t *\n\t * sendObj.on('receipt', function(receipt){\n\t *   // receipt example\n\t *   console.log(receipt);\n\t *   > {\n\t *       \"transactionHash\": \"0x9fc76417374aa880d4449a1f7f31ec597f00b1f6f3dd2d66f4c9c6c445836d8b\",\n\t *       \"transactionIndex\": 0,\n\t *       \"blockHash\": \"0xef95f2f1ed3ca60b048b4bf67cde2195961e0bba6f70bcbea9a2c4e133e34b46\",\n\t *       \"blockNumber\": 3,\n\t *       \"contractAddress\": \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n\t *       \"cumulativeGasUsed\": 314159,\n\t *       \"gasUsed\": 30234,\n\t *       \"events\": {\n\t *           \"MyEvent\": {\n\t *               returnValues: {\n\t *                   myIndexedParam: 20,\n\t *                   myOtherIndexedParam: '0x123456789...',\n\t *                   myNonIndexParam: 'My String'\n\t *               },\n\t *               raw: {\n\t *                   data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *                   topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *               },\n\t *               event: 'MyEvent',\n\t *               signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *               logIndex: 0,\n\t *               transactionIndex: 0,\n\t *               transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *               blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *               blockNumber: 1234,\n\t *               address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t *           },\n\t *           \"MyOtherEvent\": {\n\t *               ...\n\t *           },\n\t *           \"MyMultipleEvent\":[{...}, {...}] // If there are multiple of the same event, they will be in an array\n\t *       }\n\t *   }\n\t * });\n\t *\n\t * sendObj.on('error', function(error, receipt) { // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n\t *   ...\n\t * });\n\t * ```\n\t *\n\t * @param tx - The options used for sending.\n\t * @returns - Returns a {@link PromiEvent} object resolved with transaction receipt.\n\t */\n\tsend(\n\t\ttx?: PayableTxOptions,\n\t): Web3PromiEvent<\n\t\tFormatType<TransactionReceipt, typeof DEFAULT_RETURN_FORMAT>,\n\t\tSendTransactionEvents<typeof DEFAULT_RETURN_FORMAT>\n\t>;\n\n\t/**\n\t *\n\t * @param tx\n\t * @param contractOptions\n\t */\n\tpopulateTransaction(\n\t\ttx?: PayableTxOptions | NonPayableTxOptions,\n\t\tcontractOptions?: ContractOptions,\n\t): TransactionCall;\n\t/**\n\t * Returns the amount of gas consumed by executing the method locally without creating a new transaction on the blockchain.\n\t * The returned amount can be used as a gas estimate for executing the transaction publicly. The actual gas used can be\n\t * different when sending the transaction later, as the state of the smart contract can be different at that time.\n\t *\n\t * ```ts\n\t * const gasAmount = await myContract.methods.myMethod(123).estimateGas({gas: 5000000});\n\t * if(gasAmount == 5000000) {\n\t *   console.log('Method ran out of gas');\n\t * }\n\t * ```\n\t *\n\t * @param options  - The options used for calling\n\t * @param returnFormat - The data format you want the output in.\n\t * @returns - The gas amount estimated.\n\t */\n\testimateGas<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\toptions?: PayableCallOptions,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<FormatType<Numbers, ReturnFormat>>;\n\n\t/**\n\t * Encodes the ABI for this method. The resulting hex string is 32-bit function signature hash plus the passed parameters in Solidity tightly packed format.\n\t * This can be used to send a transaction, call a method, or pass it into another smart contract’s method as arguments.\n\t * Set the data field on `web3.eth.sendTransaction` options as the encodeABI() result and it is the same as calling the contract method with `contract.myMethod.send()`.\n\t *\n\t * Some use cases for encodeABI() include: preparing a smart contract transaction for a multi signature wallet,\n\t * working with offline wallets and cold storage and creating transaction payload for complex smart contract proxy calls.\n\t *\n\t * @returns - The encoded ABI byte code to send via a transaction or call.\n\t */\n\tencodeABI(): HexString;\n\n\t/**\n\t * Decode raw result of method call into readable value(s).\n\t *\n\t * @param data - The data to decode.\n\t * @returns - The decoded data.\n\t */\n\tdecodeData<SpecialInputs = Inputs>(data: HexString): SpecialInputs;\n\n\t/**\n\t * This method generates an access list for a transaction. You must specify a `from` address and `gas` if it’s not specified in options.\n\t *\n\t * @param options - The options used for createAccessList.\n\t * @param block - If you pass this parameter it will not use the default block set with contract.defaultBlock. Pre-defined block numbers as `earliest`, `latest`, `pending`, `safe` or `finalized can also be used. Useful for requesting data from or replaying transactions in past blocks.\n\t * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n\t *\n\t * ```ts\n\t *  const result = await MyContract.methods.myFunction().createAccessList();\n\t *  console.log(result);\n\t *\n\t * > {\n\t *  \"accessList\": [\n\t *     {\n\t *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n\t *       \"storageKeys\": [\n\t *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n\t *       ]\n\t *     }\n\t *   ],\n\t *   \"gasUsed\": \"0x7671\"\n\t * }\n\t *```\n\t */\n\tcreateAccessList(tx?: PayableCallOptions, block?: BlockNumberOrTag): Promise<AccessListResult>;\n}\n\nexport type Web3ContractContext = Partial<\n\tWeb3ContextInitOptions<\n\t\tEthExecutionAPI,\n\t\t{\n\t\t\tlogs: typeof ContractLogsSubscription;\n\t\t\tnewHeads: typeof NewHeadsSubscription;\n\t\t\tnewBlockHeaders: typeof NewHeadsSubscription;\n\t\t}\n\t>\n>;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE","ignoreList":[0]}},
    {"offset": {"line": 1426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-contract%404.7.2_bufferutil%404.0.9_typescript%405.7.3_utf-8-validate%405.0.10_zod%403.24.1/node_modules/web3-eth-contract/src/index.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The `web3.eth.Contract` object makes it easy to interact with smart contracts on the Ethereum blockchain.\n * When you create a new contract object you give it the JSON interface of the respective smart contract and\n * web3 will auto convert all calls into low level ABI calls over RPC for you.\n * This allows you to interact with smart contracts as if they were JavaScript objects.\n *\n * To use it standalone:\n *\n * ```ts\n * const Contract = require('web3-eth-contract');\n *\n * // set provider for all later instances to use\n * Contract.setProvider('ws://localhost:8546');\n *\n * const contract = new Contract(jsonInterface, address);\n *\n * contract.methods.somFunc().send({from: ....})\n * .on('receipt', function(){\n *    ...\n * });\n * ```\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nimport { Contract } from './contract.js';\n\nimport { ContractLogsSubscription } from './contract_log_subscription.js';\n/** @deprecated Use `ContractLogsSubscription` instead. */\nexport type LogsSubscription = ContractLogsSubscription;\n\nexport * from './encoding.js';\n\nexport * from './contract.js';\nexport * from './contract-deployer-method-class.js';\nexport * from './contract_log_subscription.js';\nexport * from './types.js';\nexport * from './utils.js';\n\nexport default Contract;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;;;;;;;;;;;;;;;;;;;;GAqBG,CACH;;GAEG;;;AACH,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;;;;;;;;0XAc1B,WAAQ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}