{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"wallet.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/wallet.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3BaseWallet, Web3BaseWalletAccount, KeyStore } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { WebStorage } from './types.js';\n\ntype BrowserError = { code: number; name: string };\n\n/**\n * Wallet is an in memory `wallet` that can hold multiple accounts.\n * These accounts can be used when using web3.eth.sendTransaction() or web3.eth.contract.methods.contractfunction().send();\n *\n * For using Wallet functionality, install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Wallet functionality will be available as mentioned below.\n *\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('http://127.0.0.1:7545');\n *\n * const wallet = await web3.eth.accounts.wallet.create(2);\n *\n * const signature = wallet.at(0).sign(\"Test Data\"); // use wallet\n *\n * // fund account before sending following transaction ...\n *\n * const receipt = await web3.eth.sendTransaction({ // internally sign transaction using wallet\n *    from: wallet.at(0).address,\n *    to: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n *    value: 1\n *    //....\n * });\n * ```\n */\nexport class Wallet<\n\tT extends Web3BaseWalletAccount = Web3BaseWalletAccount,\n> extends Web3BaseWallet<T> {\n\tprivate readonly _addressMap = new Map<string, number>();\n\tprivate readonly _defaultKeyName = 'web3js_wallet';\n\n\t/**\n\t * Get the storage object of the browser\n\t *\n\t * @returns the storage\n\t */\n\tpublic static getStorage(): WebStorage | undefined {\n\t\tlet storage: WebStorage | undefined;\n\n\t\ttry {\n\t\t\tstorage = window.localStorage;\n\t\t\tconst x = '__storage_test__';\n\t\t\tstorage.setItem(x, x);\n\t\t\tstorage.removeItem(x);\n\n\t\t\treturn storage;\n\t\t} catch (e: unknown) {\n\t\t\treturn (e as BrowserError) &&\n\t\t\t\t// everything except Firefox\n\t\t\t\t((e as BrowserError).code === 22 ||\n\t\t\t\t\t// Firefox\n\t\t\t\t\t(e as BrowserError).code === 1014 ||\n\t\t\t\t\t// test name field too, because code might not be present\n\t\t\t\t\t// everything except Firefox\n\t\t\t\t\t(e as BrowserError).name === 'QuotaExceededError' ||\n\t\t\t\t\t// Firefox\n\t\t\t\t\t(e as BrowserError).name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\n\t\t\t\t!isNullish(storage) &&\n\t\t\t\tstorage.length !== 0\n\t\t\t\t? storage\n\t\t\t\t: undefined;\n\t\t}\n\t}\n\t/**\n\t * Generates one or more accounts in the wallet. If wallets already exist they will not be overridden.\n\t *\n\t * @param numberOfAccounts - Number of accounts to create. Leave empty to create an empty wallet.\n\t * @returns The wallet\n\t * ```ts\n\t * web3.eth.accounts.wallet.create(2)\n\t * > Wallet(2) [\n\t *   {\n\t *     address: '0xde38310a42B751AE57d30cFFF4a0A3c52A442fCE',\n\t *     privateKey: '0x6422c9d28efdcbee93c1d32a5fc6fd6fa081b985487885296cf8c9bbb5872600',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   {\n\t *     address: '0x766BF755246d924B1d017Fdb5390f38a60166691',\n\t *     privateKey: '0x756530f13c0eb636ebdda655335f5dea9921e3362e2e588b0ad59e556f7751f0',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _addressMap: Map(2) {\n\t *     '0xde38310a42b751ae57d30cfff4a0a3c52a442fce' => 0,\n\t *     '0x766bf755246d924b1d017fdb5390f38a60166691' => 1\n\t *   },\n\t *   _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t *\n\t * ```\n\t */\n\n\tpublic create(numberOfAccounts: number) {\n\t\tfor (let i = 0; i < numberOfAccounts; i += 1) {\n\t\t\tthis.add(this._accountProvider.create());\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an account using a private key or account object to the wallet.\n\t *\n\t * @param account - A private key or account object\n\t * @returns The wallet\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n\t * > Wallet(1) [\n\t *   {\n\t *     address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n\t *     privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n\t *     signTransaction: [Function: signTransaction],\n\t *     sign: [Function: sign],\n\t *     encrypt: [Function: encrypt]\n\t *   },\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _addressMap: Map(1) { '0x85d70633b90e03e0276b98880286d0d055685ed7' => 0 },\n\t *   _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic add(account: T | string): this {\n\t\tif (typeof account === 'string') {\n\t\t\treturn this.add(this._accountProvider.privateKeyToAccount(account));\n\t\t}\n\t\tlet index = this.length;\n\t\tconst existAccount = this.get(account.address);\n\t\tif (existAccount) {\n\t\t\tconsole.warn(`Account ${account.address.toLowerCase()} already exists.`);\n\t\t\tindex = this._addressMap.get(account.address.toLowerCase()) ?? index;\n\t\t}\n\t\tthis._addressMap.set(account.address.toLowerCase(), index);\n\t\tthis[index] = account;\n\n\t\treturn this;\n\t}\n\t/**\n\t * Get the account of the wallet with either the index or public address.\n\t *\n\t * @param addressOrIndex - A string of the address or number index within the wallet.\n\t * @returns The account object or undefined if the account doesn't exist\n\t */\n\n\tpublic get(addressOrIndex: string | number): T | undefined {\n\t\tif (typeof addressOrIndex === 'string') {\n\t\t\tconst index = this._addressMap.get(addressOrIndex.toLowerCase());\n\n\t\t\tif (!isNullish(index)) {\n\t\t\t\treturn this[index];\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this[addressOrIndex];\n\t}\n\n\t/**\n\t * Removes an account from the wallet.\n\t *\n\t * @param addressOrIndex - The account address, or index in the wallet.\n\t * @returns true if the wallet was removed. false if it couldn't be found.\n\t * ```ts\n\t * web3.eth.accounts.wallet.add('0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387');\n\t *\n\t * web3.eth.accounts.wallet.remove('0x85D70633b90e03e0276B98880286D0D055685ed7');\n\t * > true\n\t * web3.eth.accounts.wallet\n\t * > Wallet(0) [\n\t * _accountProvider: {\n\t *   create: [Function: create],\n\t *   privateKeyToAccount: [Function: privateKeyToAccount],\n\t *   decrypt: [Function: decrypt]\n\t * },\n\t * _addressMap: Map(0) {},\n\t * _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic remove(addressOrIndex: string | number): boolean {\n\t\tif (typeof addressOrIndex === 'string') {\n\t\t\tconst index = this._addressMap.get(addressOrIndex.toLowerCase());\n\t\t\tif (isNullish(index)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._addressMap.delete(addressOrIndex.toLowerCase());\n\t\t\tthis.splice(index, 1);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this[addressOrIndex]) {\n\t\t\tthis.splice(addressOrIndex, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Securely empties the wallet and removes all its accounts.\n\t * Use this with *caution as it will remove all accounts stored in local wallet.\n\t *\n\t * @returns The wallet object\n\t * ```ts\n\t *\n\t * web3.eth.accounts.wallet.clear();\n\t * > Wallet(0) [\n\t * _accountProvider: {\n\t *   create: [Function: create],\n\t *   privateKeyToAccount: [Function: privateKeyToAccount],\n\t *   decrypt: [Function: decrypt]\n\t * },\n\t * _addressMap: Map(0) {},\n\t * _defaultKeyName: 'web3js_wallet'\n\t * ]\n\t * ```\n\t */\n\tpublic clear() {\n\t\tthis._addressMap.clear();\n\n\t\t// Setting length clears the Array in JS.\n\t\tthis.length = 0;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Encrypts all wallet accounts to an array of encrypted keystore v3 objects.\n\t *\n\t * @param password - The password which will be used for encryption\n\t * @param options - encryption options\n\t * @returns An array of the encrypted keystore v3.\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.create(1)\n\t * web3.eth.accounts.wallet.encrypt(\"abc\").then(console.log);\n\t * > [\n\t * '{\"version\":3,\"id\":\"fa46e213-a7c3-4844-b903-dd14d39cc7db\",\n\t * \"address\":\"fa3e41a401609103c241431cbdee8623ae2a321a\",\"crypto\":\n\t * {\"ciphertext\":\"8d179a911d6146ad2924e86bf493ed89b8ff3596ffec0816e761c542016ab13c\",\n\t * \"cipherparams\":{\"iv\":\"acc888c6cf4a19b86846cef0185a7164\"},\"cipher\":\"aes-128-ctr\",\n\t * \"kdf\":\"scrypt\",\"kdfparams\":{\"n\":8192,\"r\":8,\"p\":1,\"dklen\":32,\"salt\":\"6a743c9b367d15f4758e4f3f3378ff0fd443708d1c64854e07588ea5331823ae\"},\n\t * \"mac\":\"410544c8307e3691fda305eb3722d82c3431f212a87daa119a21587d96698b57\"}}'\n\t * ]\n\t * ```\n\t */\n\tpublic async encrypt(\n\t\tpassword: string,\n\t\toptions?: Record<string, unknown> | undefined,\n\t): Promise<KeyStore[]> {\n\t\treturn Promise.all(this.map(async (account: T) => account.encrypt(password, options)));\n\t}\n\n\t/**\n\t * Decrypts keystore v3 objects.\n\t *\n\t * @param encryptedWallets - An array of encrypted keystore v3 objects to decrypt\n\t * @param password - The password to encrypt with\n\t * @param options - decrypt options for the wallets\n\t * @returns The decrypted wallet object\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.decrypt([\n\t * { version: 3,\n\t * id: '83191a81-aaca-451f-b63d-0c5f3b849289',\n\t * address: '06f702337909c06c82b09b7a22f0a2f0855d1f68',\n\t * crypto:\n\t * { ciphertext: '7d34deae112841fba86e3e6cf08f5398dda323a8e4d29332621534e2c4069e8d',\n\t *   cipherparams: { iv: '497f4d26997a84d570778eae874b2333' },\n\t *   cipher: 'aes-128-ctr',\n\t *   kdf: 'scrypt',\n\t *   kdfparams:\n\t *    { dklen: 32,\n\t *      salt: '208dd732a27aa4803bb760228dff18515d5313fd085bbce60594a3919ae2d88d',\n\t *      n: 262144,\n\t *      r: 8,\n\t *      p: 1 },\n\t *   mac: '0062a853de302513c57bfe3108ab493733034bf3cb313326f42cf26ea2619cf9' } },\n\t * { version: 3,\n\t * id: '7d6b91fa-3611-407b-b16b-396efb28f97e',\n\t * address: 'b5d89661b59a9af0b34f58d19138baa2de48baaf',\n\t * crypto:\n\t * { ciphertext: 'cb9712d1982ff89f571fa5dbef447f14b7e5f142232bd2a913aac833730eeb43',\n\t *   cipherparams: { iv: '8cccb91cb84e435437f7282ec2ffd2db' },\n\t *   cipher: 'aes-128-ctr',\n\t *   kdf: 'scrypt',\n\t *   kdfparams:\n\t *    { dklen: 32,\n\t *      salt: '08ba6736363c5586434cd5b895e6fe41ea7db4785bd9b901dedce77a1514e8b8',\n\t *      n: 262144,\n\t *      r: 8,\n\t *      p: 1 },\n\t *   mac: 'd2eb068b37e2df55f56fa97a2bf4f55e072bef0dd703bfd917717d9dc54510f0' } }\n\t * ], 'test').then(console.log)\n\t * > Wallet {\n\t *   _accountProvider: {\n\t *     create: [Function: create],\n\t *     privateKeyToAccount: [Function: privateKeyToAccount],\n\t *     decrypt: [Function: decrypt]\n\t *   },\n\t *   _defaultKeyName: 'web3js_wallet',\n\t *   _accounts: {\n\t *     '0x85d70633b90e03e0276b98880286d0d055685ed7': {\n\t *       address: '0x85D70633b90e03e0276B98880286D0D055685ed7',\n\t *       privateKey: '0xbce9b59981303e76c4878b1a6d7b088ec6b9dd5c966b7d5f54d7a749ff683387',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     },\n\t *     '0x06f702337909c06c82b09b7a22f0a2f0855d1f68': {\n\t *       address: '0x06F702337909C06C82B09B7A22F0a2f0855d1F68',\n\t *       privateKey: '87a51da18900da7398b3bab03996833138f269f8f66dd1237b98df6b9ce14573',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     },\n\t *     '0xb5d89661b59a9af0b34f58d19138baa2de48baaf': {\n\t *       address: '0xB5d89661B59a9aF0b34f58D19138bAa2de48BAaf',\n\t *       privateKey: '7ee61c5282979aae9dd795bb6a54e8bdc2bfe009acb64eb9a67322eec3b3da6e',\n\t *       signTransaction: [Function: signTransaction],\n\t *       sign: [Function: sign],\n\t *       encrypt: [Function: encrypt]\n\t *     }\n\t *   }\n\t * }\n\t * ```\n\t */\n\tpublic async decrypt(\n\t\tencryptedWallets: KeyStore[],\n\t\tpassword: string,\n\t\toptions?: Record<string, unknown> | undefined,\n\t) {\n\t\tconst results = await Promise.all(\n\t\t\tencryptedWallets.map(async (wallet: KeyStore) =>\n\t\t\t\tthis._accountProvider.decrypt(wallet, password, options),\n\t\t\t),\n\t\t);\n\t\tfor (const res of results) {\n\t\t\tthis.add(res);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stores the wallet encrypted and as string in local storage.\n\t * **__NOTE:__** Browser only\n\t *\n\t * @param password - The password to encrypt the wallet\n\t * @param keyName - (optional) The key used for the local storage position, defaults to `\"web3js_wallet\"`.\n\t * @returns Will return boolean value true if saved properly\n\t * ```ts\n\t * web3.eth.accounts.wallet.save('test#!$');\n\t * >true\n\t * ```\n\t */\n\tpublic async save(password: string, keyName?: string) {\n\t\tconst storage = Wallet.getStorage();\n\n\t\tif (!storage) {\n\t\t\tthrow new Error('Local storage not available.');\n\t\t}\n\n\t\tstorage.setItem(\n\t\t\tkeyName ?? this._defaultKeyName,\n\t\t\tJSON.stringify(await this.encrypt(password)),\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Loads a wallet from local storage and decrypts it.\n\t * **__NOTE:__** Browser only\n\t *\n\t * @param password - The password to decrypt the wallet.\n\t * @param keyName - (optional)The key used for local storage position, defaults to `web3js_wallet\"`\n\t * @returns Returns the wallet object\n\t *\n\t * ```ts\n\t * web3.eth.accounts.wallet.save('test#!$');\n\t * > true\n\t * web3.eth.accounts.wallet.load('test#!$');\n\t * { defaultKeyName: \"web3js_wallet\",\n\t *   length: 0,\n\t *   _accounts: Accounts {_requestManager: RequestManager, givenProvider: Proxy, providers: {â¦}, _provider: WebsocketProvider, â¦},\n\t *   [[Prototype]]: Object\n\t * }\n\t * ```\n\t */\n\tpublic async load(password: string, keyName?: string) {\n\t\tconst storage = Wallet.getStorage();\n\n\t\tif (!storage) {\n\t\t\tthrow new Error('Local storage not available.');\n\t\t}\n\n\t\tconst keystore = storage.getItem(keyName ?? this._defaultKeyName);\n\n\t\tif (keystore) {\n\t\t\tawait this.decrypt((JSON.parse(keystore) as KeyStore[]) || [], password);\n\t\t}\n\n\t\treturn this;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/constants.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line import/extensions\nimport * as ethereumCryptography from 'ethereum-cryptography/secp256k1.js';\n\nexport const secp256k1 = ethereumCryptography.secp256k1 ?? ethereumCryptography;\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff');\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n\t'0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n);\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n;\nexport const SECP256K1_ORDER_DIV_2 = SECP256K1_ORDER / BigInt(2);\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;EAeE,CACF,6CAA6C;;AAC7C,OAAO,KAAK,oBAAoB,MAAM,oCAAoC,CAAC;;;AAEpE,MAAM,SAAS,GAAG,CAAA,KAAA,oBAAoB,8MAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,oBAAoB,CAAC;AAIzE,MAAM,UAAU,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AAKhD,MAAM,WAAW,GAAG,MAAM,CAChC,oEAAoE,CACpE,CAAC;AAEK,MAAM,eAAe,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,qBAAqB,GAAG,eAAe,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"file":"schemas.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/schemas.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport const keyStoreSchema = {\n\ttype: 'object',\n\trequired: ['crypto', 'id', 'version', 'address'],\n\tproperties: {\n\t\tcrypto: {\n\t\t\ttype: 'object',\n\t\t\trequired: ['cipher', 'ciphertext', 'cipherparams', 'kdf', 'kdfparams', 'mac'],\n\t\t\tproperties: {\n\t\t\t\tcipher: { type: 'string' },\n\t\t\t\tciphertext: { type: 'string' },\n\t\t\t\tcipherparams: { type: 'object' },\n\t\t\t\tkdf: { type: 'string' },\n\t\t\t\tkdfparams: { type: 'object' },\n\t\t\t\tsalt: { type: 'string' },\n\t\t\t\tmac: { type: 'string' },\n\t\t\t},\n\t\t},\n\t\tid: { type: 'string' },\n\t\tversion: { type: 'number' },\n\t\taddress: { type: 'string' },\n\t},\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AAEK,MAAM,cAAc,GAAG;IAC7B,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE;QAAC,QAAQ;QAAE,IAAI;QAAE,SAAS;QAAE,SAAS;KAAC;IAChD,UAAU,EAAE;QACX,MAAM,EAAE;YACP,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE;gBAAC,QAAQ;gBAAE,YAAY;gBAAE,cAAc;gBAAE,KAAK;gBAAE,WAAW;gBAAE,KAAK;aAAC;YAC7E,UAAU,EAAE;gBACX,MAAM,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBAC1B,UAAU,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBAC9B,YAAY,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBAChC,GAAG,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBACvB,SAAS,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBAC7B,IAAI,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;gBACxB,GAAG,EAAE;oBAAE,IAAI,EAAE,QAAQ;gBAAA,CAAE;aACvB;SACD;QACD,EAAE,EAAE;YAAE,IAAI,EAAE,QAAQ;QAAA,CAAE;QACtB,OAAO,EAAE;YAAE,IAAI,EAAE,QAAQ;QAAA,CAAE;QAC3B,OAAO,EAAE;YAAE,IAAI,EAAE,QAAQ;QAAA,CAAE;KAC3B;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"file":"enums.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/enums.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport enum Chain {\n\tMainnet = 1,\n\tGoerli = 5,\n\tSepolia = 11155111,\n}\n\nexport enum Hardfork {\n\tChainstart = 'chainstart',\n\tHomestead = 'homestead',\n\tDao = 'dao',\n\tTangerineWhistle = 'tangerineWhistle',\n\tSpuriousDragon = 'spuriousDragon',\n\tByzantium = 'byzantium',\n\tConstantinople = 'constantinople',\n\tPetersburg = 'petersburg',\n\tIstanbul = 'istanbul',\n\tMuirGlacier = 'muirGlacier',\n\tBerlin = 'berlin',\n\tLondon = 'london',\n\tArrowGlacier = 'arrowGlacier',\n\tGrayGlacier = 'grayGlacier',\n\tMergeForkIdTransition = 'mergeForkIdTransition',\n\tMerge = 'merge',\n\tShanghai = 'shanghai',\n\tShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n\tProofOfStake = 'pos',\n\tProofOfWork = 'pow',\n\tProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n\tEthash = 'ethash',\n\tClique = 'clique',\n\tCasper = 'casper',\n}\n\nexport enum CustomChain {\n\t/**\n\t * Polygon (Matic) Mainnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMainnet = 'polygon-mainnet',\n\n\t/**\n\t * Polygon (Matic) Mumbai Testnet\n\t *\n\t * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n\t */\n\tPolygonMumbai = 'polygon-mumbai',\n\n\t/**\n\t * Arbitrum Rinkeby Testnet\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n\t */\n\tArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n\t/**\n\t * Arbitrum One - mainnet for Arbitrum roll-up\n\t *\n\t * - [Documentation](https://developer.offchainlabs.com/public-chains)\n\t */\n\tArbitrumOne = 'arbitrum-one',\n\n\t/**\n\t * xDai EVM sidechain with a native stable token\n\t *\n\t * - [Documentation](https://www.xdaichain.com/)\n\t */\n\txDaiChain = 'x-dai-chain',\n\n\t/**\n\t * Optimistic Kovan - testnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticKovan = 'optimistic-kovan',\n\n\t/**\n\t * Optimistic Ethereum - mainnet for Optimism roll-up\n\t *\n\t * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n\t */\n\tOptimisticEthereum = 'optimistic-ethereum',\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;;AACF,IAAY,KAIX;AAJD,CAAA,SAAY,KAAK;IAChB,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA,GAAA,SAAW,CAAA;IACX,KAAA,CAAA,KAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;IACV,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,SAAA,GAAA,SAAkB,CAAA;AACnB,CAAC,EAJW,KAAK,IAAA,CAAL,KAAK,GAAA,CAAA,CAAA,GAIhB;AAED,IAAY,QAmBX;AAnBD,CAAA,SAAY,QAAQ;IACnB,QAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,QAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,QAAA,CAAA,MAAA,GAAA,KAAW,CAAA;IACX,QAAA,CAAA,mBAAA,GAAA,kBAAqC,CAAA;IACrC,QAAA,CAAA,iBAAA,GAAA,gBAAiC,CAAA;IACjC,QAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,QAAA,CAAA,iBAAA,GAAA,gBAAiC,CAAA;IACjC,QAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,QAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,QAAA,CAAA,cAAA,GAAA,aAA2B,CAAA;IAC3B,QAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,QAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,QAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;IAC7B,QAAA,CAAA,cAAA,GAAA,aAA2B,CAAA;IAC3B,QAAA,CAAA,wBAAA,GAAA,uBAA+C,CAAA;IAC/C,QAAA,CAAA,QAAA,GAAA,OAAe,CAAA;IACf,QAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,QAAA,CAAA,kBAAA,GAAA,cAAgC,CAAA;AACjC,CAAC,EAnBW,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAmBnB;AAED,IAAY,aAIX;AAJD,CAAA,SAAY,aAAa;IACxB,aAAA,CAAA,eAAA,GAAA,KAAoB,CAAA;IACpB,aAAA,CAAA,cAAA,GAAA,KAAmB,CAAA;IACnB,aAAA,CAAA,mBAAA,GAAA,KAAwB,CAAA;AACzB,CAAC,EAJW,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAIxB;AAED,IAAY,kBAIX;AAJD,CAAA,SAAY,kBAAkB;IAC7B,kBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,kBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,kBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;AAClB,CAAC,EAJW,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAI7B;AAED,IAAY,WAiDX;AAjDD,CAAA,SAAY,WAAW;IACtB;;;;OAIG,CACH,WAAA,CAAA,iBAAA,GAAA,iBAAkC,CAAA;IAElC;;;;OAIG,CACH,WAAA,CAAA,gBAAA,GAAA,gBAAgC,CAAA;IAEhC;;;;OAIG,CACH,WAAA,CAAA,yBAAA,GAAA,0BAAmD,CAAA;IAEnD;;;;OAIG,CACH,WAAA,CAAA,cAAA,GAAA,cAA4B,CAAA;IAE5B;;;;OAIG,CACH,WAAA,CAAA,YAAA,GAAA,aAAyB,CAAA;IAEzB;;;;OAIG,CACH,WAAA,CAAA,kBAAA,GAAA,kBAAoC,CAAA;IAEpC;;;;OAIG,CACH,WAAA,CAAA,qBAAA,GAAA,qBAA0C,CAAA;AAC3C,CAAC,EAjDW,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAiDtB","ignoreList":[0]}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/types.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport type { Chain, ConsensusAlgorithm, ConsensusType, Hardfork } from './enums.js';\n\nexport interface ChainName {\n\t[chainId: string]: string;\n}\n\nexport type CliqueConfig = {\n\tperiod: number;\n\tepoch: number;\n};\n\nexport type EthashConfig = Record<string, unknown>;\n\nexport type CasperConfig = Record<string, unknown>;\n\nexport interface GenesisBlockConfig {\n\ttimestamp?: string;\n\tgasLimit: number;\n\tdifficulty: number;\n\tnonce: string;\n\textraData: string;\n\tbaseFeePerGas?: string;\n}\n\nexport interface HardforkConfig {\n\tname: Hardfork | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tblock: number | null; // null is used for hardforks that should not be applied -- since `undefined` isn't a valid value in JSON\n\tttd?: bigint | string;\n\ttimestamp?: number | string;\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tforkHash?: string | null;\n}\n\nexport interface BootstrapNodeConfig {\n\tip: string;\n\tport: number | string;\n\tnetwork?: string;\n\tchainId?: number;\n\tid: string;\n\tlocation: string;\n\tcomment: string;\n}\n\nexport interface ChainConfig {\n\tname: string;\n\tchainId: number | bigint;\n\tnetworkId: number | bigint;\n\tdefaultHardfork?: string;\n\tcomment?: string;\n\turl?: string;\n\tgenesis: GenesisBlockConfig;\n\thardforks: HardforkConfig[];\n\tbootstrapNodes?: BootstrapNodeConfig[];\n\tdnsNetworks?: string[];\n\tconsensus: {\n\t\ttype: ConsensusType | string;\n\t\talgorithm: ConsensusAlgorithm | string;\n\t\tclique?: CliqueConfig;\n\t\tethash?: EthashConfig;\n\t\tcasper?: CasperConfig;\n\t};\n}\nexport interface ChainsConfig {\n\t[key: string]: ChainConfig | ChainName;\n}\n\ninterface BaseOpts {\n\t/**\n\t * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n\t *\n\t * Default: Hardfork.London\n\t */\n\thardfork?: string | Hardfork;\n\t/**\n\t * Selected EIPs which can be activated, please use an array for instantiation\n\t * (e.g. `eips: [ 2537, ]`)\n\t *\n\t * Currently supported:\n\t *\n\t * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n\t */\n\teips?: number[];\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n\t/**\n\t * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n\t * either from a chain directly supported or a custom chain\n\t * passed in via {@link CommonOpts.customChains}.\n\t */\n\tchain: string | number | Chain | bigint | object;\n\t/**\n\t * Initialize (in addition to the supported chains) with the selected\n\t * custom chains. Custom genesis state should be passed to the Blockchain class if used.\n\t *\n\t * Usage (directly with the respective chain initialization via the {@link CommonOpts.chain} option):\n\t *\n\t * ```javascript\n\t * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n\t * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n\t * ```\n\t */\n\tcustomChains?: ChainConfig[];\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n\t/**\n\t * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n\t * a standard chain used to base the custom chain params on.\n\t */\n\tbaseChain?: string | number | Chain | bigint;\n}\n\nexport interface GethConfigOpts extends BaseOpts {\n\tchain?: string;\n\tgenesisHash?: Uint8Array;\n\tmergeForkIdPostMerge?: boolean;\n}\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string;\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type Uint8ArrayLike = Uint8Array | number[] | number | bigint | PrefixedHexString;\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Uint8Array;\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n\ttoArray(): Uint8Array;\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>;\n/**\n * Type output options\n */\nexport enum TypeOutput {\n\tNumber,\n\tBigInt,\n\tUint8Array,\n\tPrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n\t[TypeOutput.Number]: number;\n\t[TypeOutput.BigInt]: bigint;\n\t[TypeOutput.Uint8Array]: Uint8Array;\n\t[TypeOutput.PrefixedHexString]: PrefixedHexString;\n};\nexport type ToBytesInputTypes =\n\t| PrefixedHexString\n\t| number\n\t| bigint\n\t| Uint8Array\n\t| number[]\n\t| TransformableToArray\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t| null\n\t| undefined;\n"],"names":[],"mappings":"AAqKA;;GAEG;;;AACH,IAAY,UAKX;AALD,CAAA,SAAY,UAAU;IACrB,UAAA,CAAA,UAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;IACN,UAAA,CAAA,UAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;IACN,UAAA,CAAA,UAAA,CAAA,aAAA,GAAA,EAAA,GAAA,YAAU,CAAA;IACV,UAAA,CAAA,UAAA,CAAA,oBAAA,GAAA,EAAA,GAAA,mBAAiB,CAAA;AAClB,CAAC,EALW,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAKrB","ignoreList":[0]}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/utils.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isHexPrefixed, isHexString } from 'web3-validator';\nimport { bytesToHex, hexToBytes, isUint8Array, numberToHex } from 'web3-utils';\nimport { secp256k1 } from '../tx/constants.js';\nimport { Hardfork } from './enums.js';\nimport { ToBytesInputTypes, TypeOutput, TypeOutputReturnType } from './types.js';\n\ntype ConfigHardfork =\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t| { name: string; block: null; timestamp: number }\n\t| { name: string; block: number; timestamp?: number };\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n\tif (typeof str !== 'string')\n\t\tthrow new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n\n\treturn isHexPrefixed(str) ? str.slice(2) : str;\n};\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n\tif (!nonce || nonce === '0x0') {\n\t\treturn '0x0000000000000000';\n\t}\n\tif (isHexPrefixed(nonce)) {\n\t\treturn `0x${stripHexPrefix(nonce).padStart(16, '0')}`;\n\t}\n\treturn `0x${nonce.padStart(16, '0')}`;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i: number) {\n\tif (!Number.isSafeInteger(i) || i < 0) {\n\t\tthrow new Error(`Received an invalid integer type: ${i}`);\n\t}\n\treturn `0x${i.toString(16)}`;\n};\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseGethParams(json: any, mergeForkIdPostMerge = true) {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tconst {\n\t\tname,\n\t\tconfig,\n\t\tdifficulty,\n\t\tmixHash,\n\t\tgasLimit,\n\t\tcoinbase,\n\t\tbaseFeePerGas,\n\t}: {\n\t\tname: string;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tconfig: any;\n\t\tdifficulty: string;\n\t\tmixHash: string;\n\t\tgasLimit: string;\n\t\tcoinbase: string;\n\t\tbaseFeePerGas: string;\n\t} = json;\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tlet { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n\t\tjson;\n\tconst genesisTimestamp = Number(timestamp);\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\tconst { chainId }: { chainId: number } = config;\n\n\t// geth is not strictly putting empty fields with a 0x prefix\n\tif (extraData === '') {\n\t\textraData = '0x';\n\t}\n\t// geth may use number for timestamp\n\tif (!isHexPrefixed(timestamp)) {\n\t\t// eslint-disable-next-line radix\n\t\ttimestamp = intToHex(parseInt(timestamp));\n\t}\n\t// geth may not give us a nonce strictly formatted to an 8 byte hex string\n\tif (nonce.length !== 18) {\n\t\tnonce = formatNonce(nonce);\n\t}\n\n\t// EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n\t// but have different configuration parameters in geth genesis parameters\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\tif (config.eip155Block !== config.eip158Block) {\n\t\tthrow new Error(\n\t\t\t'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork',\n\t\t);\n\t}\n\n\tconst params = {\n\t\tname,\n\t\tchainId,\n\t\tnetworkId: chainId,\n\t\tgenesis: {\n\t\t\ttimestamp,\n\t\t\t// eslint-disable-next-line radix\n\t\t\tgasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n\t\t\t// eslint-disable-next-line radix\n\t\t\tdifficulty: parseInt(difficulty),\n\t\t\tnonce,\n\t\t\textraData,\n\t\t\tmixHash,\n\t\t\tcoinbase,\n\t\t\tbaseFeePerGas,\n\t\t},\n\t\thardfork: undefined as string | undefined,\n\t\thardforks: [] as ConfigHardfork[],\n\t\tbootstrapNodes: [],\n\t\tconsensus:\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tconfig.clique !== undefined\n\t\t\t\t? {\n\t\t\t\t\t\ttype: 'poa',\n\t\t\t\t\t\talgorithm: 'clique',\n\t\t\t\t\t\tclique: {\n\t\t\t\t\t\t\t// The recent geth genesis seems to be using blockperiodseconds\n\t\t\t\t\t\t\t// and epochlength for clique specification\n\t\t\t\t\t\t\t// see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\t\t\tperiod: config.clique.period ?? config.clique.blockperiodseconds,\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\t\t\tepoch: config.clique.epoch ?? config.clique.epochlength,\n\t\t\t\t\t\t},\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\ttype: 'pow',\n\t\t\t\t\t\talgorithm: 'ethash',\n\t\t\t\t\t\tethash: {},\n\t\t\t\t  },\n\t};\n\n\tconst forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } =\n\t\t{\n\t\t\t[Hardfork.Homestead]: { name: 'homesteadBlock' },\n\t\t\t[Hardfork.Dao]: { name: 'daoForkBlock' },\n\t\t\t[Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n\t\t\t[Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n\t\t\t[Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n\t\t\t[Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n\t\t\t[Hardfork.Petersburg]: { name: 'petersburgBlock' },\n\t\t\t[Hardfork.Istanbul]: { name: 'istanbulBlock' },\n\t\t\t[Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n\t\t\t[Hardfork.Berlin]: { name: 'berlinBlock' },\n\t\t\t[Hardfork.London]: { name: 'londonBlock' },\n\t\t\t[Hardfork.MergeForkIdTransition]: {\n\t\t\t\tname: 'mergeForkBlock',\n\t\t\t\tpostMerge: mergeForkIdPostMerge,\n\t\t\t},\n\t\t\t[Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n\t\t\t[Hardfork.ShardingForkDev]: {\n\t\t\t\tname: 'shardingForkTime',\n\t\t\t\tpostMerge: true,\n\t\t\t\tisTimestamp: true,\n\t\t\t},\n\t\t};\n\n\t// forkMapRev is the map from config field name to Hardfork\n\tconst forkMapRev = Object.keys(forkMap).reduce<{ [key: string]: string }>((acc, elem) => {\n\t\tacc[forkMap[elem].name] = elem;\n\t\treturn acc;\n\t}, {});\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\tconst configHardforkNames = Object.keys(config).filter(\n\t\t// eslint-disable-next-line no-null/no-null, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/prefer-optional-chain\n\t\tkey => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null,\n\t);\n\n\tparams.hardforks = configHardforkNames\n\t\t.map(nameBlock => ({\n\t\t\tname: forkMapRev[nameBlock],\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tblock:\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tforkMap[forkMapRev[nameBlock]].isTimestamp === true ||\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\ttypeof config[nameBlock] !== 'number'\n\t\t\t\t\t? // eslint-disable-next-line no-null/no-null\n\t\t\t\t\t  null\n\t\t\t\t\t: // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\t\t  config[nameBlock],\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\ttimestamp:\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tforkMap[forkMapRev[nameBlock]].isTimestamp === true &&\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\ttypeof config[nameBlock] === 'number'\n\t\t\t\t\t? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\t\t  config[nameBlock]\n\t\t\t\t\t: undefined,\n\t\t}))\n\t\t// eslint-disable-next-line no-null/no-null\n\t\t.filter(fork => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[];\n\n\tparams.hardforks.sort(\n\t\t(a: ConfigHardfork, b: ConfigHardfork) => (a.block ?? Infinity) - (b.block ?? Infinity),\n\t);\n\n\tparams.hardforks.sort(\n\t\t(a: ConfigHardfork, b: ConfigHardfork) =>\n\t\t\t(a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp),\n\t);\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\tif (config.terminalTotalDifficulty !== undefined) {\n\t\t// Following points need to be considered for placement of merge hf\n\t\t// - Merge hardfork can't be placed at genesis\n\t\t// - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n\t\t// - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n\t\t//   necessary for e.g. withdrawals\n\t\tconst mergeConfig = {\n\t\t\tname: Hardfork.Merge,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\tttd: config.terminalTotalDifficulty,\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tblock: null,\n\t\t};\n\n\t\t// Merge hardfork has to be placed before first hardfork that is dependent on merge\n\t\tconst postMergeIndex = params.hardforks.findIndex(\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\thf => forkMap[hf.name]?.postMerge === true,\n\t\t);\n\t\tif (postMergeIndex !== -1) {\n\t\t\tparams.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork);\n\t\t} else {\n\t\t\tparams.hardforks.push(mergeConfig as unknown as ConfigHardfork);\n\t\t}\n\t}\n\n\tconst latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined;\n\tparams.hardfork = latestHardfork?.name;\n\tparams.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 });\n\n\treturn params;\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n\ttry {\n\t\tif (['config', 'difficulty', 'gasLimit', 'alloc'].some(field => !(field in json))) {\n\t\t\tthrow new Error('Invalid format, expected geth genesis fields missing');\n\t\t}\n\t\tif (name !== undefined) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-param-reassign\n\t\t\tjson.name = name;\n\t\t}\n\t\treturn parseGethParams(json, mergeForkIdPostMerge);\n\t} catch (e) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions\n\t\tthrow new Error(`Error parsing parameters file: ${(e as { message: string }).message}`);\n\t}\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n\tlet a = value;\n\n\tif (typeof a !== 'string') {\n\t\tthrow new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n\t}\n\n\tif (a.length % 2) a = `0${a}`;\n\n\treturn a;\n}\n\n/**\n * Converts an `Number` to a `Uint8Array`\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToUint8Array = function (i: number) {\n\tconst hex = intToHex(i);\n\treturn hexToBytes(`0x${padToEven(hex.slice(2))}`);\n};\n\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Uint8Array` `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toUint8Array()` method.\n * @param v the value\n */\nexport const toUint8Array = function (v: ToBytesInputTypes): Uint8Array {\n\t// eslint-disable-next-line no-null/no-null\n\tif (v === null || v === undefined) {\n\t\treturn new Uint8Array();\n\t}\n\n\tif (v instanceof Uint8Array) {\n\t\treturn v;\n\t}\n\n\tif (v?.constructor?.name === 'Uint8Array') {\n\t\treturn Uint8Array.from(v as unknown as Uint8Array);\n\t}\n\n\tif (Array.isArray(v)) {\n\t\treturn Uint8Array.from(v);\n\t}\n\n\tif (typeof v === 'string') {\n\t\tif (!isHexString(v)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${v}`,\n\t\t\t);\n\t\t}\n\t\treturn hexToBytes(padToEven(stripHexPrefix(v)));\n\t}\n\n\tif (typeof v === 'number') {\n\t\treturn toUint8Array(numberToHex(v));\n\t}\n\n\tif (typeof v === 'bigint') {\n\t\tif (v < BigInt(0)) {\n\t\t\tthrow new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`);\n\t\t}\n\t\tlet n = v.toString(16);\n\t\tif (n.length % 2) n = `0${n}`;\n\t\treturn toUint8Array(`0x${n}`);\n\t}\n\n\tif (v.toArray) {\n\t\t// converts a BN to a Uint8Array\n\t\treturn Uint8Array.from(v.toArray());\n\t}\n\n\tthrow new Error('invalid type');\n};\n\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n */\nexport function uint8ArrayToBigInt(buf: Uint8Array) {\n\tconst hex = bytesToHex(buf);\n\tif (hex === '0x') {\n\t\treturn BigInt(0);\n\t}\n\treturn BigInt(hex);\n}\n\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n */\nexport function bigIntToUint8Array(num: bigint) {\n\treturn toUint8Array(`0x${num.toString(16)}`);\n}\n\n/**\n * Returns a Uint8Array filled with 0s.\n * @param bytes the number of bytes the Uint8Array should be\n */\nexport const zeros = function (bytes: number): Uint8Array {\n\treturn new Uint8Array(bytes).fill(0);\n};\n\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Uint8Array)\n */\nconst setLength = function (msg: Uint8Array, length: number, right: boolean) {\n\tconst buf = zeros(length);\n\tif (right) {\n\t\tif (msg.length < length) {\n\t\t\tbuf.set(msg);\n\t\t\treturn buf;\n\t\t}\n\t\treturn msg.subarray(0, length);\n\t}\n\tif (msg.length < length) {\n\t\tbuf.set(msg, length - msg.length);\n\t\treturn buf;\n\t}\n\treturn msg.subarray(-length);\n};\n\n/**\n * Throws if input is not a Uint8Array\n * @param {Uint8Array} input value to check\n */\nexport function assertIsUint8Array(input: unknown): asserts input is Uint8Array {\n\tif (!isUint8Array(input)) {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\tconst msg = `This method only supports Uint8Array but input was: ${input}`;\n\t\tthrow new Error(msg);\n\t}\n}\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Uint8Array)\n * @param length the number of bytes the output should be\n * @return (Uint8Array)\n */\nexport const setLengthLeft = function (msg: Uint8Array, length: number) {\n\tassertIsUint8Array(msg);\n\treturn setLength(msg, length, false);\n};\n\n/**\n * Trims leading zeros from a `Uint8Array`, `String` or `Number[]`.\n * @param a (Uint8Array|Array|String)\n * @return (Uint8Array|Array|String)\n */\nexport function stripZeros<T extends Uint8Array | number[] | string>(a: T): T {\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\tlet first = a[0];\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\twhile (a.length > 0 && first.toString() === '0') {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-call, no-param-reassign\n\t\ta = a.slice(1) as T;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, prefer-destructuring, @typescript-eslint/no-unsafe-member-access\n\t\tfirst = a[0];\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\treturn a;\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param a (Uint8Array)\n * @return (Uint8Array)\n */\nexport const unpadUint8Array = function (a: Uint8Array): Uint8Array {\n\tassertIsUint8Array(a);\n\treturn stripZeros(a);\n};\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => `0x${num.toString(16)}`;\n\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedUint8Array(value: bigint): Uint8Array {\n\treturn unpadUint8Array(bigIntToUint8Array(value));\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n\tif (v === BigInt(0) || v === BigInt(1)) return v;\n\n\tif (chainId === undefined) {\n\t\treturn v - BigInt(27);\n\t}\n\treturn v - (chainId * BigInt(2) + BigInt(35));\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n\treturn recovery === BigInt(0) || recovery === BigInt(1);\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n\tmsgHash: Uint8Array,\n\tv: bigint,\n\tr: Uint8Array,\n\ts: Uint8Array,\n\tchainId?: bigint,\n): Uint8Array {\n\tconst recovery = calculateSigRecovery(v, chainId);\n\tif (!isValidSigRecovery(recovery)) {\n\t\tthrow new Error('Invalid signature v value');\n\t}\n\n\tconst senderPubKey = new secp256k1.Signature(uint8ArrayToBigInt(r), uint8ArrayToBigInt(s))\n\t\t.addRecoveryBit(Number(recovery))\n\t\t.recoverPublicKey(msgHash)\n\t\t.toRawBytes(false);\n\treturn senderPubKey.slice(1);\n};\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null;\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined;\nexport function toType<T extends TypeOutput>(\n\tinput: ToBytesInputTypes,\n\toutputType: T,\n): TypeOutputReturnType[T];\nexport function toType<T extends TypeOutput>(\n\tinput: ToBytesInputTypes,\n\toutputType: T,\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n): TypeOutputReturnType[T] | undefined | null {\n\t// eslint-disable-next-line no-null/no-null\n\tif (input === null) {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\tif (input === undefined) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof input === 'string' && !isHexString(input)) {\n\t\tthrow new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n\t} else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n\t\tthrow new Error(\n\t\t\t'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)',\n\t\t);\n\t}\n\n\tconst output = toUint8Array(input);\n\n\tswitch (outputType) {\n\t\tcase TypeOutput.Uint8Array:\n\t\t\treturn output as TypeOutputReturnType[T];\n\t\tcase TypeOutput.BigInt:\n\t\t\treturn uint8ArrayToBigInt(output) as TypeOutputReturnType[T];\n\t\tcase TypeOutput.Number: {\n\t\t\tconst bigInt = uint8ArrayToBigInt(output);\n\t\t\tif (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)',\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn Number(bigInt) as TypeOutputReturnType[T];\n\t\t}\n\t\tcase TypeOutput.PrefixedHexString:\n\t\t\treturn bytesToHex(output) as TypeOutputReturnType[T];\n\t\tdefault:\n\t\t\tthrow new Error('unknown outputType');\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1104, "column": 0}, "map": {"version":3,"file":"goerli.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/chains/goerli.ts"],"sourcesContent":["export default {\n\tname: 'goerli',\n\tchainId: 5,\n\tnetworkId: 5,\n\tdefaultHardfork: 'merge',\n\tconsensus: {\n\t\ttype: 'poa',\n\t\talgorithm: 'clique',\n\t\tclique: {\n\t\t\tperiod: 15,\n\t\t\tepoch: 30000,\n\t\t},\n\t},\n\tcomment: 'Cross-client PoA test network',\n\turl: 'https://github.com/goerli/testnet',\n\tgenesis: {\n\t\ttimestamp: '0x5c51a607',\n\t\tgasLimit: 10485760,\n\t\tdifficulty: 1,\n\t\tnonce: '0x0000000000000000',\n\t\textraData:\n\t\t\t'0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n\t},\n\thardforks: [\n\t\t{\n\t\t\tname: 'chainstart',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'homestead',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'tangerineWhistle',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'spuriousDragon',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'byzantium',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'constantinople',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'petersburg',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xa3f5ab08',\n\t\t},\n\t\t{\n\t\t\tname: 'istanbul',\n\t\t\tblock: 1561651,\n\t\t\tforkHash: '0xc25efa5c',\n\t\t},\n\t\t{\n\t\t\tname: 'berlin',\n\t\t\tblock: 4460644,\n\t\t\tforkHash: '0x757a1c47',\n\t\t},\n\t\t{\n\t\t\tname: 'london',\n\t\t\tblock: 5062605,\n\t\t\tforkHash: '0xb8c6299d',\n\t\t},\n\t\t{\n\t\t\t'//_comment':\n\t\t\t\t'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818',\n\t\t\tname: 'merge',\n\t\t\tttd: '10790000',\n\t\t\tblock: 7382819,\n\t\t\tforkHash: '0xb8c6299d',\n\t\t},\n\t\t{\n\t\t\tname: 'mergeForkIdTransition',\n\t\t\tblock: null,\n\t\t\tforkHash: null,\n\t\t},\n\t\t{\n\t\t\tname: 'shanghai',\n\t\t\tblock: null,\n\t\t\tforkHash: null,\n\t\t},\n\t],\n\tbootstrapNodes: [],\n\tdnsNetworks: [\n\t\t'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n\t],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,CAAC;IACZ,eAAe,EAAE,OAAO;IACxB,SAAS,EAAE;QACV,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE;YACP,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,KAAK;SACZ;KACD;IACD,OAAO,EAAE,+BAA+B;IACxC,GAAG,EAAE,mCAAmC;IACxC,OAAO,EAAE;QACR,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,QAAQ;QAClB,UAAU,EAAE,CAAC;QACb,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EACR,8OAA8O;KAC/O;IACD,SAAS,EAAE;QACV;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,kBAAkB;YACxB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,YAAY,EACX,iIAAiI;YAClI,IAAI,EAAE,OAAO;YACb,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,uBAAuB;YAC7B,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACd;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACd;KACD;IACD,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE;QACZ,yFAAyF;KACzF;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"file":"mainnet.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/chains/mainnet.ts"],"sourcesContent":["export default {\n\tname: 'mainnet',\n\tchainId: 1,\n\tnetworkId: 1,\n\tdefaultHardfork: 'merge',\n\tconsensus: {\n\t\ttype: 'pow',\n\t\talgorithm: 'ethash',\n\t\tethash: {},\n\t},\n\tcomment: 'The Ethereum main chain',\n\turl: 'https://ethstats.net/',\n\tgenesis: {\n\t\tgasLimit: 5000,\n\t\tdifficulty: 17179869184,\n\t\tnonce: '0x0000000000000042',\n\t\textraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n\t},\n\thardforks: [\n\t\t{\n\t\t\tname: 'chainstart',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfc64ec04',\n\t\t},\n\t\t{\n\t\t\tname: 'homestead',\n\t\t\tblock: 1150000,\n\t\t\tforkHash: '0x97c2c34c',\n\t\t},\n\t\t{\n\t\t\tname: 'dao',\n\t\t\tblock: 1920000,\n\t\t\tforkHash: '0x91d1f948',\n\t\t},\n\t\t{\n\t\t\tname: 'tangerineWhistle',\n\t\t\tblock: 2463000,\n\t\t\tforkHash: '0x7a64da13',\n\t\t},\n\t\t{\n\t\t\tname: 'spuriousDragon',\n\t\t\tblock: 2675000,\n\t\t\tforkHash: '0x3edd5b10',\n\t\t},\n\t\t{\n\t\t\tname: 'byzantium',\n\t\t\tblock: 4370000,\n\t\t\tforkHash: '0xa00bc324',\n\t\t},\n\t\t{\n\t\t\tname: 'constantinople',\n\t\t\tblock: 7280000,\n\t\t\tforkHash: '0x668db0af',\n\t\t},\n\t\t{\n\t\t\tname: 'petersburg',\n\t\t\tblock: 7280000,\n\t\t\tforkHash: '0x668db0af',\n\t\t},\n\t\t{\n\t\t\tname: 'istanbul',\n\t\t\tblock: 9069000,\n\t\t\tforkHash: '0x879d6e30',\n\t\t},\n\t\t{\n\t\t\tname: 'muirGlacier',\n\t\t\tblock: 9200000,\n\t\t\tforkHash: '0xe029e991',\n\t\t},\n\t\t{\n\t\t\tname: 'berlin',\n\t\t\tblock: 12244000,\n\t\t\tforkHash: '0x0eb440f6',\n\t\t},\n\t\t{\n\t\t\tname: 'london',\n\t\t\tblock: 12965000,\n\t\t\tforkHash: '0xb715077d',\n\t\t},\n\t\t{\n\t\t\tname: 'arrowGlacier',\n\t\t\tblock: 13773000,\n\t\t\tforkHash: '0x20c327fc',\n\t\t},\n\t\t{\n\t\t\tname: 'grayGlacier',\n\t\t\tblock: 15050000,\n\t\t\tforkHash: '0xf0afd0e3',\n\t\t},\n\t\t{\n\t\t\t'//_comment':\n\t\t\t\t'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393',\n\t\t\tname: 'merge',\n\t\t\tttd: '58750000000000000000000',\n\t\t\tblock: 15537394,\n\t\t\tforkHash: '0xf0afd0e3',\n\t\t},\n\t\t{\n\t\t\tname: 'mergeForkIdTransition',\n\t\t\tblock: null,\n\t\t\tforkHash: null,\n\t\t},\n\t\t{\n\t\t\tname: 'shanghai',\n\t\t\tblock: null,\n\t\t\tforkHash: null,\n\t\t},\n\t],\n\tbootstrapNodes: [],\n\tdnsNetworks: [\n\t\t'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n\t],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,CAAC;IACZ,eAAe,EAAE,OAAO;IACxB,SAAS,EAAE;QACV,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,CAAA,CAAE;KACV;IACD,OAAO,EAAE,yBAAyB;IAClC,GAAG,EAAE,uBAAuB;IAC5B,OAAO,EAAE;QACR,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,WAAW;QACvB,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,oEAAoE;KAC/E;IACD,SAAS,EAAE;QACV;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,kBAAkB;YACxB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,cAAc;YACpB,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,YAAY,EACX,2HAA2H;YAC5H,IAAI,EAAE,OAAO;YACb,GAAG,EAAE,yBAAyB;YAC9B,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,uBAAuB;YAC7B,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACd;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACd;KACD;IACD,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE;QACZ,0FAA0F;KAC1F;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"file":"sepolia.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/chains/sepolia.ts"],"sourcesContent":["export default {\n\tname: 'sepolia',\n\tchainId: 11155111,\n\tnetworkId: 11155111,\n\tdefaultHardfork: 'merge',\n\tconsensus: {\n\t\ttype: 'pow',\n\t\talgorithm: 'ethash',\n\t\tethash: {},\n\t},\n\tcomment: 'PoW test network to replace Ropsten',\n\turl: 'https://github.com/ethereum/go-ethereum/pull/23730',\n\tgenesis: {\n\t\ttimestamp: '0x6159af19',\n\t\tgasLimit: 30000000,\n\t\tdifficulty: 131072,\n\t\tnonce: '0x0000000000000000',\n\t\textraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n\t},\n\thardforks: [\n\t\t{\n\t\t\tname: 'chainstart',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'homestead',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'tangerineWhistle',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'spuriousDragon',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'byzantium',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'constantinople',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'petersburg',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'istanbul',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'muirGlacier',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'berlin',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'london',\n\t\t\tblock: 0,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\t'//_comment':\n\t\t\t\t'The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408',\n\t\t\tname: 'merge',\n\t\t\tttd: '17000000000000000',\n\t\t\tblock: 1450409,\n\t\t\tforkHash: '0xfe3366e7',\n\t\t},\n\t\t{\n\t\t\tname: 'mergeForkIdTransition',\n\t\t\tblock: 1735371,\n\t\t\tforkHash: '0xb96cbd13',\n\t\t},\n\t\t{\n\t\t\tname: 'shanghai',\n\t\t\tblock: null,\n\t\t\ttimestamp: '1677557088',\n\t\t\tforkHash: '0xf7f9bc08',\n\t\t},\n\t],\n\tbootstrapNodes: [],\n\tdnsNetworks: [\n\t\t'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n\t],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,QAAQ;IACjB,SAAS,EAAE,QAAQ;IACnB,eAAe,EAAE,OAAO;IACxB,SAAS,EAAE;QACV,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,CAAA,CAAE;KACV;IACD,OAAO,EAAE,qCAAqC;IAC9C,GAAG,EAAE,oDAAoD;IACzD,OAAO,EAAE;QACR,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,QAAQ;QAClB,UAAU,EAAE,MAAM;QAClB,KAAK,EAAE,oBAAoB;QAC3B,SAAS,EAAE,oEAAoE;KAC/E;IACD,SAAS,EAAE;QACV;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,kBAAkB;YACxB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,YAAY,EACX,kIAAkI;YACnI,IAAI,EAAE,OAAO;YACb,GAAG,EAAE,mBAAmB;YACxB,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,uBAAuB;YAC7B,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,YAAY;SACtB;QACD;YACC,IAAI,EAAE,UAAU;YAChB,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,YAAY;YACvB,QAAQ,EAAE,YAAY;SACtB;KACD;IACD,cAAc,EAAE,EAAE;IAClB,WAAW,EAAE;QACZ,0FAA0F;KAC1F;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"file":"1153.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/1153.ts"],"sourcesContent":["export default {\n\tname: 'EIP-1153',\n\tnumber: 1153,\n\tcomment: 'Transient Storage',\n\turl: 'https://eips.ethereum.org/EIPS/eip-1153',\n\tstatus: 'Review',\n\tminimumHardfork: 'chainstart',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {\n\t\ttstore: {\n\t\t\tv: 100,\n\t\t\td: 'Base fee of the TSTORE opcode',\n\t\t},\n\t\ttload: {\n\t\t\tv: 100,\n\t\t\td: 'Base fee of the TLOAD opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,mBAAmB;IAC5B,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,YAAY;IAC7B,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,MAAM,EAAE;YACP,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,+BAA+B;SAClC;QACD,KAAK,EAAE;YACN,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,8BAA8B;SACjC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1473, "column": 0}, "map": {"version":3,"file":"1559.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/1559.ts"],"sourcesContent":["export default {\n\tname: 'EIP-1559',\n\tnumber: 1559,\n\tcomment: 'Fee market change for ETH 1.0 chain',\n\turl: 'https://eips.ethereum.org/EIPS/eip-1559',\n\tstatus: 'Final',\n\tminimumHardfork: 'berlin',\n\trequiredEIPs: [2930],\n\tgasConfig: {\n\t\tbaseFeeMaxChangeDenominator: {\n\t\t\tv: 8,\n\t\t\td: 'Maximum base fee change denominator',\n\t\t},\n\t\telasticityMultiplier: {\n\t\t\tv: 2,\n\t\t\td: 'Maximum block gas target elasticity',\n\t\t},\n\t\tinitialBaseFee: {\n\t\t\tv: 1000000000,\n\t\t\td: 'Initial base fee on first EIP1559 block',\n\t\t},\n\t},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,qCAAqC;IAC9C,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE;QAAC,IAAI;KAAC;IACpB,SAAS,EAAE;QACV,2BAA2B,EAAE;YAC5B,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,qCAAqC;SACxC;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,qCAAqC;SACxC;QACD,cAAc,EAAE;YACf,CAAC,EAAE,UAAU;YACb,CAAC,EAAE,yCAAyC;SAC5C;KACD;IACD,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"file":"2315.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2315.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2315',\n\tnumber: 2315,\n\tcomment: 'Simple subroutines for the EVM',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2315',\n\tstatus: 'Draft',\n\tminimumHardfork: 'istanbul',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tbeginsub: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the BEGINSUB opcode',\n\t\t},\n\t\treturnsub: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the RETURNSUB opcode',\n\t\t},\n\t\tjumpsub: {\n\t\t\tv: 10,\n\t\t\td: 'Base fee of the JUMPSUB opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,UAAU;IAC3B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,QAAQ,EAAE;YACT,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,iCAAiC;SACpC;QACD,SAAS,EAAE;YACV,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,kCAAkC;SACrC;QACD,OAAO,EAAE;YACR,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,gCAAgC;SACnC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1546, "column": 0}, "map": {"version":3,"file":"2537.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2537.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2537',\n\tnumber: 2537,\n\tcomment: 'BLS12-381 precompiles',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2537',\n\tstatus: 'Draft',\n\tminimumHardfork: 'chainstart',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tBls12381G1AddGas: {\n\t\t\tv: 600,\n\t\t\td: 'Gas cost of a single BLS12-381 G1 addition precompile-call',\n\t\t},\n\t\tBls12381G1MulGas: {\n\t\t\tv: 12000,\n\t\t\td: 'Gas cost of a single BLS12-381 G1 multiplication precompile-call',\n\t\t},\n\t\tBls12381G2AddGas: {\n\t\t\tv: 4500,\n\t\t\td: 'Gas cost of a single BLS12-381 G2 addition precompile-call',\n\t\t},\n\t\tBls12381G2MulGas: {\n\t\t\tv: 55000,\n\t\t\td: 'Gas cost of a single BLS12-381 G2 multiplication precompile-call',\n\t\t},\n\t\tBls12381PairingBaseGas: {\n\t\t\tv: 115000,\n\t\t\td: 'Base gas cost of BLS12-381 pairing check',\n\t\t},\n\t\tBls12381PairingPerPairGas: {\n\t\t\tv: 23000,\n\t\t\td: 'Per-pair gas cost of BLS12-381 pairing check',\n\t\t},\n\t\tBls12381MapG1Gas: {\n\t\t\tv: 5500,\n\t\t\td: 'Gas cost of BLS12-381 map field element to G1',\n\t\t},\n\t\tBls12381MapG2Gas: {\n\t\t\tv: 110000,\n\t\t\td: 'Gas cost of BLS12-381 map field element to G2',\n\t\t},\n\t\tBls12381MultiExpGasDiscount: {\n\t\t\tv: [\n\t\t\t\t[1, 1200],\n\t\t\t\t[2, 888],\n\t\t\t\t[3, 764],\n\t\t\t\t[4, 641],\n\t\t\t\t[5, 594],\n\t\t\t\t[6, 547],\n\t\t\t\t[7, 500],\n\t\t\t\t[8, 453],\n\t\t\t\t[9, 438],\n\t\t\t\t[10, 423],\n\t\t\t\t[11, 408],\n\t\t\t\t[12, 394],\n\t\t\t\t[13, 379],\n\t\t\t\t[14, 364],\n\t\t\t\t[15, 349],\n\t\t\t\t[16, 334],\n\t\t\t\t[17, 330],\n\t\t\t\t[18, 326],\n\t\t\t\t[19, 322],\n\t\t\t\t[20, 318],\n\t\t\t\t[21, 314],\n\t\t\t\t[22, 310],\n\t\t\t\t[23, 306],\n\t\t\t\t[24, 302],\n\t\t\t\t[25, 298],\n\t\t\t\t[26, 294],\n\t\t\t\t[27, 289],\n\t\t\t\t[28, 285],\n\t\t\t\t[29, 281],\n\t\t\t\t[30, 277],\n\t\t\t\t[31, 273],\n\t\t\t\t[32, 269],\n\t\t\t\t[33, 268],\n\t\t\t\t[34, 266],\n\t\t\t\t[35, 265],\n\t\t\t\t[36, 263],\n\t\t\t\t[37, 262],\n\t\t\t\t[38, 260],\n\t\t\t\t[39, 259],\n\t\t\t\t[40, 257],\n\t\t\t\t[41, 256],\n\t\t\t\t[42, 254],\n\t\t\t\t[43, 253],\n\t\t\t\t[44, 251],\n\t\t\t\t[45, 250],\n\t\t\t\t[46, 248],\n\t\t\t\t[47, 247],\n\t\t\t\t[48, 245],\n\t\t\t\t[49, 244],\n\t\t\t\t[50, 242],\n\t\t\t\t[51, 241],\n\t\t\t\t[52, 239],\n\t\t\t\t[53, 238],\n\t\t\t\t[54, 236],\n\t\t\t\t[55, 235],\n\t\t\t\t[56, 233],\n\t\t\t\t[57, 232],\n\t\t\t\t[58, 231],\n\t\t\t\t[59, 229],\n\t\t\t\t[60, 228],\n\t\t\t\t[61, 226],\n\t\t\t\t[62, 225],\n\t\t\t\t[63, 223],\n\t\t\t\t[64, 222],\n\t\t\t\t[65, 221],\n\t\t\t\t[66, 220],\n\t\t\t\t[67, 219],\n\t\t\t\t[68, 219],\n\t\t\t\t[69, 218],\n\t\t\t\t[70, 217],\n\t\t\t\t[71, 216],\n\t\t\t\t[72, 216],\n\t\t\t\t[73, 215],\n\t\t\t\t[74, 214],\n\t\t\t\t[75, 213],\n\t\t\t\t[76, 213],\n\t\t\t\t[77, 212],\n\t\t\t\t[78, 211],\n\t\t\t\t[79, 211],\n\t\t\t\t[80, 210],\n\t\t\t\t[81, 209],\n\t\t\t\t[82, 208],\n\t\t\t\t[83, 208],\n\t\t\t\t[84, 207],\n\t\t\t\t[85, 206],\n\t\t\t\t[86, 205],\n\t\t\t\t[87, 205],\n\t\t\t\t[88, 204],\n\t\t\t\t[89, 203],\n\t\t\t\t[90, 202],\n\t\t\t\t[91, 202],\n\t\t\t\t[92, 201],\n\t\t\t\t[93, 200],\n\t\t\t\t[94, 199],\n\t\t\t\t[95, 199],\n\t\t\t\t[96, 198],\n\t\t\t\t[97, 197],\n\t\t\t\t[98, 196],\n\t\t\t\t[99, 196],\n\t\t\t\t[100, 195],\n\t\t\t\t[101, 194],\n\t\t\t\t[102, 193],\n\t\t\t\t[103, 193],\n\t\t\t\t[104, 192],\n\t\t\t\t[105, 191],\n\t\t\t\t[106, 191],\n\t\t\t\t[107, 190],\n\t\t\t\t[108, 189],\n\t\t\t\t[109, 188],\n\t\t\t\t[110, 188],\n\t\t\t\t[111, 187],\n\t\t\t\t[112, 186],\n\t\t\t\t[113, 185],\n\t\t\t\t[114, 185],\n\t\t\t\t[115, 184],\n\t\t\t\t[116, 183],\n\t\t\t\t[117, 182],\n\t\t\t\t[118, 182],\n\t\t\t\t[119, 181],\n\t\t\t\t[120, 180],\n\t\t\t\t[121, 179],\n\t\t\t\t[122, 179],\n\t\t\t\t[123, 178],\n\t\t\t\t[124, 177],\n\t\t\t\t[125, 176],\n\t\t\t\t[126, 176],\n\t\t\t\t[127, 175],\n\t\t\t\t[128, 174],\n\t\t\t],\n\t\t\td: 'Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,uBAAuB;IAChC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,YAAY;IAC7B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,gBAAgB,EAAE;YACjB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,4DAA4D;SAC/D;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,kEAAkE;SACrE;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,4DAA4D;SAC/D;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,kEAAkE;SACrE;QACD,sBAAsB,EAAE;YACvB,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,0CAA0C;SAC7C;QACD,yBAAyB,EAAE;YAC1B,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,8CAA8C;SACjD;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,+CAA+C;SAClD;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,+CAA+C;SAClD;QACD,2BAA2B,EAAE;YAC5B,CAAC,EAAE;gBACF;oBAAC,CAAC;oBAAE,IAAI;iBAAC;gBACT;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,CAAC;oBAAE,GAAG;iBAAC;gBACR;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,EAAE;oBAAE,GAAG;iBAAC;gBACT;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;gBACV;oBAAC,GAAG;oBAAE,GAAG;iBAAC;aACV;YACD,CAAC,EAAE,uFAAuF;SAC1F;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2118, "column": 0}, "map": {"version":3,"file":"2565.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2565.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2565',\n\tnumber: 2565,\n\tcomment: 'ModExp gas cost',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2565',\n\tstatus: 'Final',\n\tminimumHardfork: 'byzantium',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tmodexpGquaddivisor: {\n\t\t\tv: 3,\n\t\t\td: 'Gquaddivisor from modexp precompile for gas calculation',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,iBAAiB;IAC1B,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,WAAW;IAC5B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,kBAAkB,EAAE;YACnB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,yDAAyD;SAC5D;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2145, "column": 0}, "map": {"version":3,"file":"2718.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2718.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2718',\n\tcomment: 'Typed Transaction Envelope',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2718',\n\tstatus: 'Final',\n\tminimumHardfork: 'chainstart',\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,4BAA4B;IACrC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,YAAY;IAC7B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2166, "column": 0}, "map": {"version":3,"file":"2929.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2929.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2929',\n\tcomment: 'Gas cost increases for state access opcodes',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2929',\n\tstatus: 'Final',\n\tminimumHardfork: 'chainstart',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tcoldsload: {\n\t\t\tv: 2100,\n\t\t\td: 'Gas cost of the first read of storage from a given location (per transaction)',\n\t\t},\n\t\tcoldaccountaccess: {\n\t\t\tv: 2600,\n\t\t\td: 'Gas cost of the first read of a given address (per transaction)',\n\t\t},\n\t\twarmstorageread: {\n\t\t\tv: 100,\n\t\t\td: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n\t\t},\n\t\tsstoreCleanGasEIP2200: {\n\t\t\tv: 2900,\n\t\t\td: 'Once per SSTORE operation from clean non-zero to something else',\n\t\t},\n\t\tsstoreNoopGasEIP2200: {\n\t\t\tv: 100,\n\t\t\td: \"Once per SSTORE operation if the value doesn't change\",\n\t\t},\n\t\tsstoreDirtyGasEIP2200: {\n\t\t\tv: 100,\n\t\t\td: 'Once per SSTORE operation if a dirty value is changed',\n\t\t},\n\t\tsstoreInitRefundEIP2200: {\n\t\t\tv: 19900,\n\t\t\td: 'Once per SSTORE operation for resetting to the original zero value',\n\t\t},\n\t\tsstoreCleanRefundEIP2200: {\n\t\t\tv: 4900,\n\t\t\td: 'Once per SSTORE operation for resetting to the original non-zero value',\n\t\t},\n\t\tcall: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the CALL opcode',\n\t\t},\n\t\tcallcode: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the CALLCODE opcode',\n\t\t},\n\t\tdelegatecall: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the DELEGATECALL opcode',\n\t\t},\n\t\tstaticcall: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the STATICCALL opcode',\n\t\t},\n\t\tbalance: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the BALANCE opcode',\n\t\t},\n\t\textcodesize: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the EXTCODESIZE opcode',\n\t\t},\n\t\textcodecopy: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the EXTCODECOPY opcode',\n\t\t},\n\t\textcodehash: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the EXTCODEHASH opcode',\n\t\t},\n\t\tsload: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SLOAD opcode',\n\t\t},\n\t\tsstore: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SSTORE opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,6CAA6C;IACtD,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,YAAY;IAC7B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,SAAS,EAAE;YACV,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,+EAA+E;SAClF;QACD,iBAAiB,EAAE;YAClB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,iEAAiE;SACpE;QACD,eAAe,EAAE;YAChB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,wEAAwE;SAC3E;QACD,qBAAqB,EAAE;YACtB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,iEAAiE;SACpE;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,uDAAuD;SAC1D;QACD,qBAAqB,EAAE;YACtB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,uDAAuD;SAC1D;QACD,uBAAuB,EAAE;YACxB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,oEAAoE;SACvE;QACD,wBAAwB,EAAE;YACzB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wEAAwE;SAC3E;QACD,IAAI,EAAE;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,6BAA6B;SAChC;QACD,QAAQ,EAAE;YACT,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,iCAAiC;SACpC;QACD,YAAY,EAAE;YACb,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,qCAAqC;SACxC;QACD,UAAU,EAAE;YACX,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,mCAAmC;SACtC;QACD,OAAO,EAAE;YACR,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,gCAAgC;SACnC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,oCAAoC;SACvC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,oCAAoC;SACvC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,oCAAoC;SACvC;QACD,KAAK,EAAE;YACN,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,8BAA8B;SACjC;QACD,MAAM,EAAE;YACP,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,+BAA+B;SAClC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2260, "column": 0}, "map": {"version":3,"file":"2930.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/2930.ts"],"sourcesContent":["export default {\n\tname: 'EIP-2930',\n\tcomment: 'Optional access lists',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2930',\n\tstatus: 'Final',\n\tminimumHardfork: 'istanbul',\n\trequiredEIPs: [2718, 2929],\n\tgasConfig: {},\n\tgasPrices: {\n\t\taccessListStorageKeyCost: {\n\t\t\tv: 1900,\n\t\t\td: 'Gas cost per storage key in an Access List transaction',\n\t\t},\n\t\taccessListAddressCost: {\n\t\t\tv: 2400,\n\t\t\td: 'Gas cost per storage key in an Access List transaction',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,uBAAuB;IAChC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,UAAU;IAC3B,YAAY,EAAE;QAAC,IAAI;QAAE,IAAI;KAAC;IAC1B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,wBAAwB,EAAE;YACzB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wDAAwD;SAC3D;QACD,qBAAqB,EAAE;YACtB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wDAAwD;SAC3D;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2294, "column": 0}, "map": {"version":3,"file":"3198.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3198.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3198',\n\tnumber: 3198,\n\tcomment: 'BASEFEE opcode',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3198',\n\tstatus: 'Final',\n\tminimumHardfork: 'london',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tbasefee: {\n\t\t\tv: 2,\n\t\t\td: 'Gas cost of the BASEFEE opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,gBAAgB;IACzB,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,OAAO,EAAE;YACR,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,gCAAgC;SACnC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2321, "column": 0}, "map": {"version":3,"file":"3529.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3529.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3529',\n\tcomment: 'Reduction in refunds',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3529',\n\tstatus: 'Final',\n\tminimumHardfork: 'berlin',\n\trequiredEIPs: [2929],\n\tgasConfig: {\n\t\tmaxRefundQuotient: {\n\t\t\tv: 5,\n\t\t\td: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n\t\t},\n\t},\n\tgasPrices: {\n\t\tselfdestructRefund: {\n\t\t\tv: 0,\n\t\t\td: 'Refunded following a selfdestruct operation',\n\t\t},\n\t\tsstoreClearRefundEIP2200: {\n\t\t\tv: 4800,\n\t\t\td: 'Once per SSTORE operation for clearing an originally existing storage slot',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,sBAAsB;IAC/B,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE;QAAC,IAAI;KAAC;IACpB,SAAS,EAAE;QACV,iBAAiB,EAAE;YAClB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,2FAA2F;SAC9F;KACD;IACD,SAAS,EAAE;QACV,kBAAkB,EAAE;YACnB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,6CAA6C;SAChD;QACD,wBAAwB,EAAE;YACzB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,4EAA4E;SAC/E;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2359, "column": 0}, "map": {"version":3,"file":"3540.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3540.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3540',\n\tnumber: 3540,\n\tcomment: 'EVM Object Format (EOF) v1',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3540',\n\tstatus: 'Review',\n\tminimumHardfork: 'london',\n\trequiredEIPs: [3541],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,4BAA4B;IACrC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE;QAAC,IAAI;KAAC;IACpB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2384, "column": 0}, "map": {"version":3,"file":"3541.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3541.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3541',\n\tcomment: 'Reject new contracts starting with the 0xEF byte',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3541',\n\tstatus: 'Final',\n\tminimumHardfork: 'berlin',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,kDAAkD;IAC3D,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2406, "column": 0}, "map": {"version":3,"file":"3554.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3554.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3554',\n\tcomment: 'Reduction in refunds',\n\turl: 'Difficulty Bomb Delay to December 1st 2021',\n\tstatus: 'Final',\n\tminimumHardfork: 'muirGlacier',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {\n\t\tdifficultyBombDelay: {\n\t\t\tv: 9500000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,sBAAsB;IAC/B,GAAG,EAAE,4CAA4C;IACjD,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,aAAa;IAC9B,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,mBAAmB,EAAE;YACpB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2433, "column": 0}, "map": {"version":3,"file":"3607.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3607.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3607',\n\tnumber: 3607,\n\tcomment: 'Reject transactions from senders with deployed code',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3607',\n\tstatus: 'Final',\n\tminimumHardfork: 'chainstart',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,qDAAqD;IAC9D,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,YAAY;IAC7B,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2456, "column": 0}, "map": {"version":3,"file":"3651.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3651.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3651',\n\tnumber: 3198,\n\tcomment: 'Warm COINBASE',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3651',\n\tstatus: 'Review',\n\tminimumHardfork: 'london',\n\trequiredEIPs: [2929],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,eAAe;IACxB,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE;QAAC,IAAI;KAAC;IACpB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2481, "column": 0}, "map": {"version":3,"file":"3670.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3670.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3670',\n\tnumber: 3670,\n\tcomment: 'EOF - Code Validation',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3670',\n\tstatus: 'Review',\n\tminimumHardfork: 'london',\n\trequiredEIPs: [3540],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,uBAAuB;IAChC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE;QAAC,IAAI;KAAC;IACpB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"file":"3675.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3675.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3675',\n\tnumber: 3675,\n\tcomment: 'Upgrade consensus to Proof-of-Stake',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3675',\n\tstatus: 'Final',\n\tminimumHardfork: 'london',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,qCAAqC;IAC9C,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2523, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2529, "column": 0}, "map": {"version":3,"file":"3855.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3855.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3855',\n\tnumber: 3855,\n\tcomment: 'PUSH0 instruction',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3855',\n\tstatus: 'Review',\n\tminimumHardfork: 'chainstart',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {\n\t\tpush0: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the PUSH0 opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,mBAAmB;IAC5B,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,YAAY;IAC7B,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,KAAK,EAAE;YACN,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,8BAA8B;SACjC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2557, "column": 0}, "map": {"version":3,"file":"3860.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/3860.ts"],"sourcesContent":["export default {\n\tname: 'EIP-3860',\n\tnumber: 3860,\n\tcomment: 'Limit and meter initcode',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3860',\n\tstatus: 'Review',\n\tminimumHardfork: 'spuriousDragon',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {\n\t\tinitCodeWordCost: {\n\t\t\tv: 2,\n\t\t\td: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n\t\t},\n\t},\n\tvm: {\n\t\tmaxInitCodeSize: {\n\t\t\tv: 49152,\n\t\t\td: 'Maximum length of initialization code when creating a contract',\n\t\t},\n\t},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,0BAA0B;IACnC,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,gBAAgB;IACjC,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,gBAAgB,EAAE;YACjB,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,0EAA0E;SAC7E;KACD;IACD,EAAE,EAAE;QACH,eAAe,EAAE;YAChB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,gEAAgE;SACnE;KACD;IACD,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2590, "column": 0}, "map": {"version":3,"file":"4345.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/4345.ts"],"sourcesContent":["export default {\n\tname: 'EIP-4345',\n\tnumber: 4345,\n\tcomment: 'Difficulty Bomb Delay to June 2022',\n\turl: 'https://eips.ethereum.org/EIPS/eip-4345',\n\tstatus: 'Final',\n\tminimumHardfork: 'london',\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {\n\t\tdifficultyBombDelay: {\n\t\t\tv: 10700000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,oCAAoC;IAC7C,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,QAAQ;IACzB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,mBAAmB,EAAE;YACpB,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2617, "column": 0}, "map": {"version":3,"file":"4399.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/4399.ts"],"sourcesContent":["export default {\n\tname: 'EIP-4399',\n\tnumber: 4399,\n\tcomment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n\turl: 'https://eips.ethereum.org/EIPS/eip-4399',\n\tstatus: 'Review',\n\tminimumHardfork: 'london',\n\trequiredEIPs: [],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,4CAA4C;IACrD,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,QAAQ;IACzB,YAAY,EAAE,EAAE;IAChB,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2640, "column": 0}, "map": {"version":3,"file":"5133.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/5133.ts"],"sourcesContent":["export default {\n\tname: 'EIP-5133',\n\tnumber: 5133,\n\tcomment: 'Delaying Difficulty Bomb to mid-September 2022',\n\turl: 'https://eips.ethereum.org/EIPS/eip-5133',\n\tstatus: 'Draft',\n\tminimumHardfork: 'grayGlacier',\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {\n\t\tdifficultyBombDelay: {\n\t\t\tv: 11400000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,IAAI;IACZ,OAAO,EAAE,gDAAgD;IACzD,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,eAAe,EAAE,aAAa;IAC9B,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,mBAAmB,EAAE;YACpB,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2667, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/eips/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport e1153 from './1153.js';\nimport e1559 from './1559.js';\nimport e2315 from './2315.js';\nimport e2537 from './2537.js';\nimport e2565 from './2565.js';\nimport e2718 from './2718.js';\nimport e2929 from './2929.js';\nimport e2930 from './2930.js';\nimport e3198 from './3198.js';\nimport e3529 from './3529.js';\nimport e3540 from './3540.js';\nimport e3541 from './3541.js';\nimport e3554 from './3554.js';\nimport e3607 from './3607.js';\nimport e3651 from './3651.js';\nimport e3670 from './3670.js';\nimport e3675 from './3675.js';\nimport e3855 from './3855.js';\nimport e3860 from './3860.js';\nimport e4345 from './4345.js';\nimport e4399 from './4399.js';\nimport e5133 from './5133.js';\n\nexport const EIPs: { [key: number]: any } = {\n\t1153: e1153,\n\t1559: e1559,\n\t2315: e2315,\n\t2537: e2537,\n\t2565: e2565,\n\t2718: e2718,\n\t2929: e2929,\n\t2930: e2930,\n\t3198: e3198,\n\t3529: e3529,\n\t3540: e3540,\n\t3541: e3541,\n\t3554: e3554,\n\t3607: e3607,\n\t3651: e3651,\n\t3670: e3670,\n\t3675: e3675,\n\t3855: e3855,\n\t3860: e3860,\n\t4345: e4345,\n\t4399: e4399,\n\t5133: e5133,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AACF,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;AAC9B,OAAO,KAAK,MAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;AAEvB,MAAM,IAAI,GAA2B;IAC3C,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;IACX,IAAI,sPAAE,UAAK;CACX,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2759, "column": 0}, "map": {"version":3,"file":"chainstart.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/chainstart.ts"],"sourcesContent":["export default {\n\tname: 'chainstart',\n\tcomment: 'Start of the Ethereum main chain',\n\turl: '',\n\tstatus: '',\n\tgasConfig: {\n\t\tminGasLimit: {\n\t\t\tv: 5000,\n\t\t\td: 'Minimum the gas limit may ever be',\n\t\t},\n\t\tgasLimitBoundDivisor: {\n\t\t\tv: 1024,\n\t\t\td: 'The bound divisor of the gas limit, used in update calculations',\n\t\t},\n\t\tmaxRefundQuotient: {\n\t\t\tv: 2,\n\t\t\td: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n\t\t},\n\t},\n\tgasPrices: {\n\t\tbase: {\n\t\t\tv: 2,\n\t\t\td: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n\t\t},\n\t\ttierStep: {\n\t\t\tv: [0, 2, 3, 5, 8, 10, 20],\n\t\t\td: 'Once per operation, for a selection of them',\n\t\t},\n\t\texp: {\n\t\t\tv: 10,\n\t\t\td: 'Base fee of the EXP opcode',\n\t\t},\n\t\texpByte: {\n\t\t\tv: 10,\n\t\t\td: 'Times ceil(log256(exponent)) for the EXP instruction',\n\t\t},\n\t\tsha3: {\n\t\t\tv: 30,\n\t\t\td: 'Base fee of the SHA3 opcode',\n\t\t},\n\t\tsha3Word: {\n\t\t\tv: 6,\n\t\t\td: \"Once per word of the SHA3 operation's data\",\n\t\t},\n\t\tsload: {\n\t\t\tv: 50,\n\t\t\td: 'Base fee of the SLOAD opcode',\n\t\t},\n\t\tsstoreSet: {\n\t\t\tv: 20000,\n\t\t\td: 'Once per SSTORE operation if the zeroness changes from zero',\n\t\t},\n\t\tsstoreReset: {\n\t\t\tv: 5000,\n\t\t\td: 'Once per SSTORE operation if the zeroness does not change from zero',\n\t\t},\n\t\tsstoreRefund: {\n\t\t\tv: 15000,\n\t\t\td: 'Once per SSTORE operation if the zeroness changes to zero',\n\t\t},\n\t\tjumpdest: {\n\t\t\tv: 1,\n\t\t\td: 'Base fee of the JUMPDEST opcode',\n\t\t},\n\t\tlog: {\n\t\t\tv: 375,\n\t\t\td: 'Base fee of the LOG opcode',\n\t\t},\n\t\tlogData: {\n\t\t\tv: 8,\n\t\t\td: \"Per byte in a LOG* operation's data\",\n\t\t},\n\t\tlogTopic: {\n\t\t\tv: 375,\n\t\t\td: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n\t\t},\n\t\tcreate: {\n\t\t\tv: 32000,\n\t\t\td: 'Base fee of the CREATE opcode',\n\t\t},\n\t\tcall: {\n\t\t\tv: 40,\n\t\t\td: 'Base fee of the CALL opcode',\n\t\t},\n\t\tcallStipend: {\n\t\t\tv: 2300,\n\t\t\td: 'Free gas given at beginning of call',\n\t\t},\n\t\tcallValueTransfer: {\n\t\t\tv: 9000,\n\t\t\td: 'Paid for CALL when the value transfor is non-zero',\n\t\t},\n\t\tcallNewAccount: {\n\t\t\tv: 25000,\n\t\t\td: \"Paid for CALL when the destination address didn't exist prior\",\n\t\t},\n\t\tselfdestructRefund: {\n\t\t\tv: 24000,\n\t\t\td: 'Refunded following a selfdestruct operation',\n\t\t},\n\t\tmemory: {\n\t\t\tv: 3,\n\t\t\td: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n\t\t},\n\t\tquadCoeffDiv: {\n\t\t\tv: 512,\n\t\t\td: 'Divisor for the quadratic particle of the memory cost equation',\n\t\t},\n\t\tcreateData: {\n\t\t\tv: 200,\n\t\t\td: '',\n\t\t},\n\t\ttx: {\n\t\t\tv: 21000,\n\t\t\td: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\ttxCreation: {\n\t\t\tv: 32000,\n\t\t\td: 'The cost of creating a contract via tx',\n\t\t},\n\t\ttxDataZero: {\n\t\t\tv: 4,\n\t\t\td: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\ttxDataNonZero: {\n\t\t\tv: 68,\n\t\t\td: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\tcopy: {\n\t\t\tv: 3,\n\t\t\td: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n\t\t},\n\t\tecRecover: {\n\t\t\tv: 3000,\n\t\t\td: '',\n\t\t},\n\t\tsha256: {\n\t\t\tv: 60,\n\t\t\td: '',\n\t\t},\n\t\tsha256Word: {\n\t\t\tv: 12,\n\t\t\td: '',\n\t\t},\n\t\tripemd160: {\n\t\t\tv: 600,\n\t\t\td: '',\n\t\t},\n\t\tripemd160Word: {\n\t\t\tv: 120,\n\t\t\td: '',\n\t\t},\n\t\tidentity: {\n\t\t\tv: 15,\n\t\t\td: '',\n\t\t},\n\t\tidentityWord: {\n\t\t\tv: 3,\n\t\t\td: '',\n\t\t},\n\t\tstop: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the STOP opcode',\n\t\t},\n\t\tadd: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the ADD opcode',\n\t\t},\n\t\tmul: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the MUL opcode',\n\t\t},\n\t\tsub: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SUB opcode',\n\t\t},\n\t\tdiv: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the DIV opcode',\n\t\t},\n\t\tsdiv: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SDIV opcode',\n\t\t},\n\t\tmod: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the MOD opcode',\n\t\t},\n\t\tsmod: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SMOD opcode',\n\t\t},\n\t\taddmod: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the ADDMOD opcode',\n\t\t},\n\t\tmulmod: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the MULMOD opcode',\n\t\t},\n\t\tsignextend: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SIGNEXTEND opcode',\n\t\t},\n\t\tlt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the LT opcode',\n\t\t},\n\t\tgt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the GT opcode',\n\t\t},\n\t\tslt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SLT opcode',\n\t\t},\n\t\tsgt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SGT opcode',\n\t\t},\n\t\teq: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the EQ opcode',\n\t\t},\n\t\tiszero: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the ISZERO opcode',\n\t\t},\n\t\tand: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the AND opcode',\n\t\t},\n\t\tor: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the OR opcode',\n\t\t},\n\t\txor: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the XOR opcode',\n\t\t},\n\t\tnot: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the NOT opcode',\n\t\t},\n\t\tbyte: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the BYTE opcode',\n\t\t},\n\t\taddress: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the ADDRESS opcode',\n\t\t},\n\t\tbalance: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the BALANCE opcode',\n\t\t},\n\t\torigin: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the ORIGIN opcode',\n\t\t},\n\t\tcaller: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLER opcode',\n\t\t},\n\t\tcallvalue: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLVALUE opcode',\n\t\t},\n\t\tcalldataload: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CALLDATALOAD opcode',\n\t\t},\n\t\tcalldatasize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLDATASIZE opcode',\n\t\t},\n\t\tcalldatacopy: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CALLDATACOPY opcode',\n\t\t},\n\t\tcodesize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CODESIZE opcode',\n\t\t},\n\t\tcodecopy: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CODECOPY opcode',\n\t\t},\n\t\tgasprice: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GASPRICE opcode',\n\t\t},\n\t\textcodesize: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the EXTCODESIZE opcode',\n\t\t},\n\t\textcodecopy: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the EXTCODECOPY opcode',\n\t\t},\n\t\tblockhash: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the BLOCKHASH opcode',\n\t\t},\n\t\tcoinbase: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the COINBASE opcode',\n\t\t},\n\t\ttimestamp: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the TIMESTAMP opcode',\n\t\t},\n\t\tnumber: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the NUMBER opcode',\n\t\t},\n\t\tdifficulty: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the DIFFICULTY opcode',\n\t\t},\n\t\tgaslimit: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GASLIMIT opcode',\n\t\t},\n\t\tpop: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the POP opcode',\n\t\t},\n\t\tmload: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MLOAD opcode',\n\t\t},\n\t\tmstore: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MSTORE opcode',\n\t\t},\n\t\tmstore8: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MSTORE8 opcode',\n\t\t},\n\t\tsstore: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SSTORE opcode',\n\t\t},\n\t\tjump: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the JUMP opcode',\n\t\t},\n\t\tjumpi: {\n\t\t\tv: 10,\n\t\t\td: 'Base fee of the JUMPI opcode',\n\t\t},\n\t\tpc: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the PC opcode',\n\t\t},\n\t\tmsize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the MSIZE opcode',\n\t\t},\n\t\tgas: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GAS opcode',\n\t\t},\n\t\tpush: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the PUSH opcode',\n\t\t},\n\t\tdup: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the DUP opcode',\n\t\t},\n\t\tswap: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SWAP opcode',\n\t\t},\n\t\tcallcode: {\n\t\t\tv: 40,\n\t\t\td: 'Base fee of the CALLCODE opcode',\n\t\t},\n\t\treturn: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the RETURN opcode',\n\t\t},\n\t\tinvalid: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the INVALID opcode',\n\t\t},\n\t\tselfdestruct: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SELFDESTRUCT opcode',\n\t\t},\n\t},\n\tvm: {\n\t\tstackLimit: {\n\t\t\tv: 1024,\n\t\t\td: 'Maximum size of VM stack allowed',\n\t\t},\n\t\tcallCreateDepth: {\n\t\t\tv: 1024,\n\t\t\td: 'Maximum depth of call/create stack',\n\t\t},\n\t\tmaxExtraDataSize: {\n\t\t\tv: 32,\n\t\t\td: 'Maximum size extra data may be after Genesis',\n\t\t},\n\t},\n\tpow: {\n\t\tminimumDifficulty: {\n\t\t\tv: 131072,\n\t\t\td: 'The minimum that the difficulty may ever be',\n\t\t},\n\t\tdifficultyBoundDivisor: {\n\t\t\tv: 2048,\n\t\t\td: 'The bound divisor of the difficulty, used in the update calculations',\n\t\t},\n\t\tdurationLimit: {\n\t\t\tv: 13,\n\t\t\td: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n\t\t},\n\t\tepochDuration: {\n\t\t\tv: 30000,\n\t\t\td: 'Duration between proof-of-work epochs',\n\t\t},\n\t\ttimebombPeriod: {\n\t\t\tv: 100000,\n\t\t\td: 'Exponential difficulty timebomb period',\n\t\t},\n\t\tminerReward: {\n\t\t\tv: '5000000000000000000',\n\t\t\td: 'the amount a miner get rewarded for mining a block',\n\t\t},\n\t\tdifficultyBombDelay: {\n\t\t\tv: 0,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3215, "column": 0}, "map": {"version":3,"file":"dao.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/dao.ts"],"sourcesContent":["export default {\n\tname: 'dao',\n\tcomment: 'DAO rescue hardfork',\n\turl: 'https://eips.ethereum.org/EIPS/eip-779',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,qBAAqB;IAC9B,GAAG,EAAE,wCAAwC;IAC7C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3235, "column": 0}, "map": {"version":3,"file":"homestead.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/homestead.ts"],"sourcesContent":["export default {\n\tname: 'homestead',\n\tcomment: 'Homestead hardfork with protocol and network changes',\n\turl: 'https://eips.ethereum.org/EIPS/eip-606',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tdelegatecall: {\n\t\t\tv: 40,\n\t\t\td: 'Base fee of the DELEGATECALL opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,WAAW;IACjB,OAAO,EAAE,sDAAsD;IAC/D,GAAG,EAAE,wCAAwC;IAC7C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,YAAY,EAAE;YACb,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,qCAAqC;SACxC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3260, "column": 0}, "map": {"version":3,"file":"tangerineWhistle.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/tangerineWhistle.ts"],"sourcesContent":["export default {\n\tname: 'tangerineWhistle',\n\tcomment: 'Hardfork with gas cost changes for IO-heavy operations',\n\turl: 'https://eips.ethereum.org/EIPS/eip-608',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tsload: {\n\t\t\tv: 200,\n\t\t\td: 'Once per SLOAD operation',\n\t\t},\n\t\tcall: {\n\t\t\tv: 700,\n\t\t\td: 'Once per CALL operation & message call transaction',\n\t\t},\n\t\textcodesize: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the EXTCODESIZE opcode',\n\t\t},\n\t\textcodecopy: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the EXTCODECOPY opcode',\n\t\t},\n\t\tbalance: {\n\t\t\tv: 400,\n\t\t\td: 'Base fee of the BALANCE opcode',\n\t\t},\n\t\tdelegatecall: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the DELEGATECALL opcode',\n\t\t},\n\t\tcallcode: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the CALLCODE opcode',\n\t\t},\n\t\tselfdestruct: {\n\t\t\tv: 5000,\n\t\t\td: 'Base fee of the SELFDESTRUCT opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,kBAAkB;IACxB,OAAO,EAAE,wDAAwD;IACjE,GAAG,EAAE,wCAAwC;IAC7C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,KAAK,EAAE;YACN,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,0BAA0B;SAC7B;QACD,IAAI,EAAE;YACL,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,oDAAoD;SACvD;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,oCAAoC;SACvC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,oCAAoC;SACvC;QACD,OAAO,EAAE;YACR,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,gCAAgC;SACnC;QACD,YAAY,EAAE;YACb,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,qCAAqC;SACxC;QACD,QAAQ,EAAE;YACT,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,iCAAiC;SACpC;QACD,YAAY,EAAE;YACb,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,qCAAqC;SACxC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3313, "column": 0}, "map": {"version":3,"file":"spuriousDragon.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/spuriousDragon.ts"],"sourcesContent":["export default {\n\tname: 'spuriousDragon',\n\tcomment:\n\t\t'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n\turl: 'https://eips.ethereum.org/EIPS/eip-607',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\texpByte: {\n\t\t\tv: 50,\n\t\t\td: 'Times ceil(log256(exponent)) for the EXP instruction',\n\t\t},\n\t},\n\tvm: {\n\t\tmaxCodeSize: {\n\t\t\tv: 24576,\n\t\t\td: 'Maximum length of contract code',\n\t\t},\n\t},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,gBAAgB;IACtB,OAAO,EACN,oHAAoH;IACrH,GAAG,EAAE,wCAAwC;IAC7C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,OAAO,EAAE;YACR,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,sDAAsD;SACzD;KACD;IACD,EAAE,EAAE;QACH,WAAW,EAAE;YACZ,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,iCAAiC;SACpC;KACD;IACD,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3343, "column": 0}, "map": {"version":3,"file":"byzantium.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/byzantium.ts"],"sourcesContent":["export default {\n\tname: 'byzantium',\n\tcomment: 'Hardfork with new precompiles, instructions and other protocol changes',\n\turl: 'https://eips.ethereum.org/EIPS/eip-609',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tmodexpGquaddivisor: {\n\t\t\tv: 20,\n\t\t\td: 'Gquaddivisor from modexp precompile for gas calculation',\n\t\t},\n\t\tecAdd: {\n\t\t\tv: 500,\n\t\t\td: 'Gas costs for curve addition precompile',\n\t\t},\n\t\tecMul: {\n\t\t\tv: 40000,\n\t\t\td: 'Gas costs for curve multiplication precompile',\n\t\t},\n\t\tecPairing: {\n\t\t\tv: 100000,\n\t\t\td: 'Base gas costs for curve pairing precompile',\n\t\t},\n\t\tecPairingWord: {\n\t\t\tv: 80000,\n\t\t\td: 'Gas costs regarding curve pairing precompile input length',\n\t\t},\n\t\trevert: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the REVERT opcode',\n\t\t},\n\t\tstaticcall: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the STATICCALL opcode',\n\t\t},\n\t\treturndatasize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the RETURNDATASIZE opcode',\n\t\t},\n\t\treturndatacopy: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the RETURNDATACOPY opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {\n\t\tminerReward: {\n\t\t\tv: '3000000000000000000',\n\t\t\td: 'the amount a miner get rewarded for mining a block',\n\t\t},\n\t\tdifficultyBombDelay: {\n\t\t\tv: 3000000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,WAAW;IACjB,OAAO,EAAE,wEAAwE;IACjF,GAAG,EAAE,wCAAwC;IAC7C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,kBAAkB,EAAE;YACnB,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,yDAAyD;SAC5D;QACD,KAAK,EAAE;YACN,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,yCAAyC;SAC5C;QACD,KAAK,EAAE;YACN,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,+CAA+C;SAClD;QACD,SAAS,EAAE;YACV,CAAC,EAAE,MAAM;YACT,CAAC,EAAE,6CAA6C;SAChD;QACD,aAAa,EAAE;YACd,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,2DAA2D;SAC9D;QACD,MAAM,EAAE;YACP,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,+BAA+B;SAClC;QACD,UAAU,EAAE;YACX,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,mCAAmC;SACtC;QACD,cAAc,EAAE;YACf,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,uCAAuC;SAC1C;QACD,cAAc,EAAE;YACf,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,uCAAuC;SAC1C;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,WAAW,EAAE;YACZ,CAAC,EAAE,qBAAqB;YACxB,CAAC,EAAE,oDAAoD;SACvD;QACD,mBAAmB,EAAE;YACpB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3409, "column": 0}, "map": {"version":3,"file":"constantinople.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/constantinople.ts"],"sourcesContent":["export default {\n\tname: 'constantinople',\n\tcomment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n\turl: 'https://eips.ethereum.org/EIPS/eip-1013',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tnetSstoreNoopGas: {\n\t\t\tv: 200,\n\t\t\td: \"Once per SSTORE operation if the value doesn't change\",\n\t\t},\n\t\tnetSstoreInitGas: {\n\t\t\tv: 20000,\n\t\t\td: 'Once per SSTORE operation from clean zero',\n\t\t},\n\t\tnetSstoreCleanGas: {\n\t\t\tv: 5000,\n\t\t\td: 'Once per SSTORE operation from clean non-zero',\n\t\t},\n\t\tnetSstoreDirtyGas: {\n\t\t\tv: 200,\n\t\t\td: 'Once per SSTORE operation from dirty',\n\t\t},\n\t\tnetSstoreClearRefund: {\n\t\t\tv: 15000,\n\t\t\td: 'Once per SSTORE operation for clearing an originally existing storage slot',\n\t\t},\n\t\tnetSstoreResetRefund: {\n\t\t\tv: 4800,\n\t\t\td: 'Once per SSTORE operation for resetting to the original non-zero value',\n\t\t},\n\t\tnetSstoreResetClearRefund: {\n\t\t\tv: 19800,\n\t\t\td: 'Once per SSTORE operation for resetting to the original zero value',\n\t\t},\n\t\tshl: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SHL opcode',\n\t\t},\n\t\tshr: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SHR opcode',\n\t\t},\n\t\tsar: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SAR opcode',\n\t\t},\n\t\textcodehash: {\n\t\t\tv: 400,\n\t\t\td: 'Base fee of the EXTCODEHASH opcode',\n\t\t},\n\t\tcreate2: {\n\t\t\tv: 32000,\n\t\t\td: 'Base fee of the CREATE2 opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {\n\t\tminerReward: {\n\t\t\tv: '2000000000000000000',\n\t\t\td: 'The amount a miner gets rewarded for mining a block',\n\t\t},\n\t\tdifficultyBombDelay: {\n\t\t\tv: 5000000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,qEAAqE;IAC9E,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,gBAAgB,EAAE;YACjB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,uDAAuD;SAC1D;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,2CAA2C;SAC9C;QACD,iBAAiB,EAAE;YAClB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,+CAA+C;SAClD;QACD,iBAAiB,EAAE;YAClB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,sCAAsC;SACzC;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,4EAA4E;SAC/E;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wEAAwE;SAC3E;QACD,yBAAyB,EAAE;YAC1B,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,oEAAoE;SACvE;QACD,GAAG,EAAE;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,4BAA4B;SAC/B;QACD,GAAG,EAAE;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,4BAA4B;SAC/B;QACD,GAAG,EAAE;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,4BAA4B;SAC/B;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,oCAAoC;SACvC;QACD,OAAO,EAAE;YACR,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,gCAAgC;SACnC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,WAAW,EAAE;YACZ,CAAC,EAAE,qBAAqB;YACxB,CAAC,EAAE,qDAAqD;SACxD;QACD,mBAAmB,EAAE;YACpB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3487, "column": 0}, "map": {"version":3,"file":"petersburg.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/petersburg.ts"],"sourcesContent":["export default {\n\tname: 'petersburg',\n\tcomment:\n\t\t'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n\turl: 'https://eips.ethereum.org/EIPS/eip-1716',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tnetSstoreNoopGas: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreInitGas: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreCleanGas: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreDirtyGas: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreClearRefund: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreResetRefund: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t\tnetSstoreResetClearRefund: {\n\t\t\tv: null,\n\t\t\td: 'Removed along EIP-1283',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,YAAY;IAClB,OAAO,EACN,yFAAyF;IAC1F,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,gBAAgB,EAAE;YACjB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,gBAAgB,EAAE;YACjB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,iBAAiB,EAAE;YAClB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,iBAAiB,EAAE;YAClB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;QACD,yBAAyB,EAAE;YAC1B,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wBAAwB;SAC3B;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3536, "column": 0}, "map": {"version":3,"file":"istanbul.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/istanbul.ts"],"sourcesContent":["export default {\n\tname: 'istanbul',\n\tcomment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n\turl: 'https://eips.ethereum.org/EIPS/eip-1679',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {\n\t\tblake2Round: {\n\t\t\tv: 1,\n\t\t\td: 'Gas cost per round for the Blake2 F precompile',\n\t\t},\n\t\tecAdd: {\n\t\t\tv: 150,\n\t\t\td: 'Gas costs for curve addition precompile',\n\t\t},\n\t\tecMul: {\n\t\t\tv: 6000,\n\t\t\td: 'Gas costs for curve multiplication precompile',\n\t\t},\n\t\tecPairing: {\n\t\t\tv: 45000,\n\t\t\td: 'Base gas costs for curve pairing precompile',\n\t\t},\n\t\tecPairingWord: {\n\t\t\tv: 34000,\n\t\t\td: 'Gas costs regarding curve pairing precompile input length',\n\t\t},\n\t\ttxDataNonZero: {\n\t\t\tv: 16,\n\t\t\td: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\tsstoreSentryGasEIP2200: {\n\t\t\tv: 2300,\n\t\t\td: 'Minimum gas required to be present for an SSTORE call, not consumed',\n\t\t},\n\t\tsstoreNoopGasEIP2200: {\n\t\t\tv: 800,\n\t\t\td: \"Once per SSTORE operation if the value doesn't change\",\n\t\t},\n\t\tsstoreDirtyGasEIP2200: {\n\t\t\tv: 800,\n\t\t\td: 'Once per SSTORE operation if a dirty value is changed',\n\t\t},\n\t\tsstoreInitGasEIP2200: {\n\t\t\tv: 20000,\n\t\t\td: 'Once per SSTORE operation from clean zero to non-zero',\n\t\t},\n\t\tsstoreInitRefundEIP2200: {\n\t\t\tv: 19200,\n\t\t\td: 'Once per SSTORE operation for resetting to the original zero value',\n\t\t},\n\t\tsstoreCleanGasEIP2200: {\n\t\t\tv: 5000,\n\t\t\td: 'Once per SSTORE operation from clean non-zero to something else',\n\t\t},\n\t\tsstoreCleanRefundEIP2200: {\n\t\t\tv: 4200,\n\t\t\td: 'Once per SSTORE operation for resetting to the original non-zero value',\n\t\t},\n\t\tsstoreClearRefundEIP2200: {\n\t\t\tv: 15000,\n\t\t\td: 'Once per SSTORE operation for clearing an originally existing storage slot',\n\t\t},\n\t\tbalance: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the BALANCE opcode',\n\t\t},\n\t\textcodehash: {\n\t\t\tv: 700,\n\t\t\td: 'Base fee of the EXTCODEHASH opcode',\n\t\t},\n\t\tchainid: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CHAINID opcode',\n\t\t},\n\t\tselfbalance: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SELFBALANCE opcode',\n\t\t},\n\t\tsload: {\n\t\t\tv: 800,\n\t\t\td: 'Base fee of the SLOAD opcode',\n\t\t},\n\t},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EAAE,0EAA0E;IACnF,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE;QACV,WAAW,EAAE;YACZ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,gDAAgD;SACnD;QACD,KAAK,EAAE;YACN,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,yCAAyC;SAC5C;QACD,KAAK,EAAE;YACN,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,+CAA+C;SAClD;QACD,SAAS,EAAE;YACV,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,6CAA6C;SAChD;QACD,aAAa,EAAE;YACd,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,2DAA2D;SAC9D;QACD,aAAa,EAAE;YACd,CAAC,EAAE,EAAE;YACL,CAAC,EAAE,+HAA+H;SAClI;QACD,sBAAsB,EAAE;YACvB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,qEAAqE;SACxE;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,uDAAuD;SAC1D;QACD,qBAAqB,EAAE;YACtB,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,uDAAuD;SAC1D;QACD,oBAAoB,EAAE;YACrB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,uDAAuD;SAC1D;QACD,uBAAuB,EAAE;YACxB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,oEAAoE;SACvE;QACD,qBAAqB,EAAE;YACtB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,iEAAiE;SACpE;QACD,wBAAwB,EAAE;YACzB,CAAC,EAAE,IAAI;YACP,CAAC,EAAE,wEAAwE;SAC3E;QACD,wBAAwB,EAAE;YACzB,CAAC,EAAE,KAAK;YACR,CAAC,EAAE,4EAA4E;SAC/E;QACD,OAAO,EAAE;YACR,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,gCAAgC;SACnC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,oCAAoC;SACvC;QACD,OAAO,EAAE;YACR,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,gCAAgC;SACnC;QACD,WAAW,EAAE;YACZ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,oCAAoC;SACvC;QACD,KAAK,EAAE;YACN,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,8BAA8B;SACjC;KACD;IACD,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3633, "column": 0}, "map": {"version":3,"file":"muirGlacier.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/muirGlacier.ts"],"sourcesContent":["export default {\n\tname: 'muirGlacier',\n\tcomment: 'HF to delay the difficulty bomb',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2384',\n\tstatus: 'Final',\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {\n\t\tdifficultyBombDelay: {\n\t\t\tv: 9000000,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,aAAa;IACnB,OAAO,EAAE,iCAAiC;IAC1C,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE;QACJ,mBAAmB,EAAE;YACpB,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,wDAAwD;SAC3D;KACD;CACD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3658, "column": 0}, "map": {"version":3,"file":"berlin.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/berlin.ts"],"sourcesContent":["export default {\n\tname: 'berlin',\n\tcomment: 'HF targeted for July 2020 following the Muir Glacier HF',\n\turl: 'https://eips.ethereum.org/EIPS/eip-2070',\n\tstatus: 'Final',\n\teips: [2565, 2929, 2718, 2930],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,yDAAyD;IAClE,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,IAAI,EAAE;QAAC,IAAI;QAAE,IAAI;QAAE,IAAI;QAAE,IAAI;KAAC;CAC9B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3680, "column": 0}, "map": {"version":3,"file":"london.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/london.ts"],"sourcesContent":["export default {\n\tname: 'london',\n\tcomment: 'HF targeted for July 2021 following the Berlin fork',\n\turl: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n\tstatus: 'Final',\n\teips: [1559, 3198, 3529, 3541],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,qDAAqD;IAC9D,GAAG,EAAE,kGAAkG;IACvG,MAAM,EAAE,OAAO;IACf,IAAI,EAAE;QAAC,IAAI;QAAE,IAAI;QAAE,IAAI;QAAE,IAAI;KAAC;CAC9B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3702, "column": 0}, "map": {"version":3,"file":"shanghai.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/shanghai.ts"],"sourcesContent":["export default {\n\tname: 'shanghai',\n\tcomment:\n\t\t'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n\turl: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n\tstatus: 'Final',\n\teips: [3651, 3855, 3860, 4895],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,UAAU;IAChB,OAAO,EACN,+GAA+G;IAChH,GAAG,EAAE,uGAAuG;IAC5G,MAAM,EAAE,OAAO;IACf,IAAI,EAAE;QAAC,IAAI;QAAE,IAAI;QAAE,IAAI;QAAE,IAAI;KAAC;CAC9B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3724, "column": 0}, "map": {"version":3,"file":"arrowGlacier.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/arrowGlacier.ts"],"sourcesContent":["export default {\n\tname: 'arrowGlacier',\n\tcomment: 'HF to delay the difficulty bomb',\n\turl: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n\tstatus: 'Final',\n\teips: [4345],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,cAAc;IACpB,OAAO,EAAE,iCAAiC;IAC1C,GAAG,EAAE,4GAA4G;IACjH,MAAM,EAAE,OAAO;IACf,IAAI,EAAE;QAAC,IAAI;KAAC;IACZ,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3747, "column": 0}, "map": {"version":3,"file":"grayGlacier.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/grayGlacier.ts"],"sourcesContent":["export default {\n\tname: 'grayGlacier',\n\tcomment: 'Delaying the difficulty bomb to Mid September 2022',\n\turl: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n\tstatus: 'Draft',\n\teips: [5133],\n\tgasConfig: {},\n\tgasPrices: {},\n\tvm: {},\n\tpow: {},\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,aAAa;IACnB,OAAO,EAAE,oDAAoD;IAC7D,GAAG,EAAE,2GAA2G;IAChH,MAAM,EAAE,OAAO;IACf,IAAI,EAAE;QAAC,IAAI;KAAC;IACZ,SAAS,EAAE,CAAA,CAAE;IACb,SAAS,EAAE,CAAA,CAAE;IACb,EAAE,EAAE,CAAA,CAAE;IACN,GAAG,EAAE,CAAA,CAAE;CACP,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3770, "column": 0}, "map": {"version":3,"file":"mergeForkIdTransition.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/mergeForkIdTransition.ts"],"sourcesContent":["export default {\n\tname: 'mergeForkIdTransition',\n\tcomment: 'Pre-merge hardfork to fork off non-upgraded clients',\n\turl: 'https://eips.ethereum.org/EIPS/eip-3675',\n\tstatus: 'Draft',\n\teips: [],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,uBAAuB;IAC7B,OAAO,EAAE,qDAAqD;IAC9D,GAAG,EAAE,yCAAyC;IAC9C,MAAM,EAAE,OAAO;IACf,IAAI,EAAE,EAAE;CACR,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3787, "column": 0}, "map": {"version":3,"file":"merge.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/merge.ts"],"sourcesContent":["export default {\n\tname: 'merge',\n\tcomment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n\turl: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n\tstatus: 'Final',\n\tconsensus: {\n\t\ttype: 'pos',\n\t\talgorithm: 'casper',\n\t\tcasper: {},\n\t},\n\teips: [3675, 4399],\n};\n"],"names":[],"mappings":";;;uCAAe;IACd,IAAI,EAAE,OAAO;IACb,OAAO,EAAE,+DAA+D;IACxE,GAAG,EAAE,oGAAoG;IACzG,MAAM,EAAE,OAAO;IACf,SAAS,EAAE;QACV,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,QAAQ;QACnB,MAAM,EAAE,CAAA,CAAE;KACV;IACD,IAAI,EAAE;QAAC,IAAI;QAAE,IAAI;KAAC;CAClB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3812, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/hardforks/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport chainstart from './chainstart.js';\nimport dao from './dao.js';\nimport homestead from './homestead.js';\nimport tangerineWhistle from './tangerineWhistle.js';\nimport spuriousDragon from './spuriousDragon.js';\nimport byzantium from './byzantium.js';\nimport constantinople from './constantinople.js';\nimport petersburg from './petersburg.js';\nimport istanbul from './istanbul.js';\nimport muirGlacier from './muirGlacier.js';\nimport berlin from './berlin.js';\nimport london from './london.js';\nimport shanghai from './shanghai.js';\nimport arrowGlacier from './arrowGlacier.js';\nimport grayGlacier from './grayGlacier.js';\nimport mergeForkIdTransition from './mergeForkIdTransition.js';\nimport merge from './merge.js';\n\nexport const hardforks: { [key: string]: any } = {\n\tchainstart,\n\thomestead,\n\tdao,\n\ttangerineWhistle,\n\tspuriousDragon,\n\tbyzantium,\n\tconstantinople,\n\tpetersburg,\n\tistanbul,\n\tmuirGlacier,\n\tberlin,\n\tlondon,\n\tshanghai,\n\tarrowGlacier,\n\tgrayGlacier,\n\tmergeForkIdTransition,\n\tmerge,\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AACF,OAAO,UAAU,MAAM,iBAAiB,CAAC;AACzC,OAAO,GAAG,MAAM,UAAU,CAAC;AAC3B,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,gBAAgB,MAAM,uBAAuB,CAAC;AACrD,OAAO,cAAc,MAAM,qBAAqB,CAAC;AACjD,OAAO,SAAS,MAAM,gBAAgB,CAAC;AACvC,OAAO,cAAc,MAAM,qBAAqB,CAAC;AACjD,OAAO,UAAU,MAAM,iBAAiB,CAAC;AACzC,OAAO,QAAQ,MAAM,eAAe,CAAC;AACrC,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,QAAQ,MAAM,eAAe,CAAC;AACrC,OAAO,YAAY,MAAM,mBAAmB,CAAC;AAC7C,OAAO,WAAW,MAAM,kBAAkB,CAAC;AAC3C,OAAO,qBAAqB,MAAM,4BAA4B,CAAC;AAC/D,OAAO,KAAK,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;AAExB,MAAM,SAAS,GAA2B;+QAChD,UAAU;6QACV,UAAS;iQACT,UAAG;2RACH,UAAgB;uRAChB,UAAc;6QACd,UAAS;uRACT,UAAc;+QACd,UAAU;2QACV,UAAQ;iRACR,UAAW;uQACX,UAAM;uQACN,UAAM;2QACN,UAAQ;mRACR,UAAY;iRACZ,UAAW;qSACX,UAAqB;qQACrB,UAAK;CACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3889, "column": 0}, "map": {"version":3,"file":"common.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/common.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport pkg from 'crc-32';\nimport { EventEmitter, bytesToHex, hexToBytes, uint8ArrayConcat } from 'web3-utils';\nimport type { Numbers } from 'web3-types';\nimport { TypeOutput } from './types.js';\nimport { intToUint8Array, toType, parseGethGenesis } from './utils.js';\nimport goerli from './chains/goerli.js';\nimport mainnet from './chains/mainnet.js';\nimport sepolia from './chains/sepolia.js';\nimport { EIPs } from './eips/index.js';\nimport type { ConsensusAlgorithm, ConsensusType } from './enums.js';\nimport { Chain, CustomChain, Hardfork } from './enums.js';\nimport { hardforks as HARDFORK_SPECS } from './hardforks/index.js';\n\nimport type {\n\tBootstrapNodeConfig,\n\tCasperConfig,\n\tChainConfig,\n\tChainName,\n\tChainsConfig,\n\tCliqueConfig,\n\tCommonOpts,\n\tCustomCommonOpts,\n\tEthashConfig,\n\tGenesisBlockConfig,\n\tGethConfigOpts,\n\tHardforkConfig,\n} from './types.js';\n\nconst { buf: crc32Uint8Array } = pkg;\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS;\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys];\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n\tpublic readonly DEFAULT_HARDFORK: string | Hardfork;\n\n\tprivate _chainParams: ChainConfig;\n\tprivate _hardfork: string | Hardfork;\n\tprivate _eips: number[] = [];\n\tprivate readonly _customChains: ChainConfig[];\n\n\tprivate readonly HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][];\n\n\t/**\n\t * Creates a {@link Common} object for a custom chain, based on a standard one.\n\t *\n\t * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n\t * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n\t *\n\t * ```javascript\n\t * Common.custom({chainId: 123})\n\t * ```\n\t *\n\t * There are also selected supported custom chains which can be initialized by using one of the\n\t * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n\t *\n\t * ```javascript\n\t * Common.custom(CustomChains.MaticMumbai)\n\t * ```\n\t *\n\t * Note that these supported custom chains only provide some base parameters (usually the chain and\n\t * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n\t * the `web3-utils/tx` library to a Layer-2 chain).\n\t *\n\t * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n\t * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n\t */\n\tpublic static custom(\n\t\tchainParamsOrName: Partial<ChainConfig> | CustomChain,\n\t\topts: CustomCommonOpts = {},\n\t): Common {\n\t\tconst baseChain = opts.baseChain ?? 'mainnet';\n\t\tconst standardChainParams = { ...Common._getChainParams(baseChain) };\n\t\tstandardChainParams.name = 'custom-chain';\n\n\t\tif (typeof chainParamsOrName !== 'string') {\n\t\t\treturn new Common({\n\t\t\t\tchain: {\n\t\t\t\t\t...standardChainParams,\n\t\t\t\t\t...chainParamsOrName,\n\t\t\t\t},\n\t\t\t\t...opts,\n\t\t\t});\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.PolygonMainnet) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.PolygonMainnet,\n\t\t\t\t\tchainId: 137,\n\t\t\t\t\tnetworkId: 137,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.PolygonMumbai) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.PolygonMumbai,\n\t\t\t\t\tchainId: 80001,\n\t\t\t\t\tnetworkId: 80001,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.ArbitrumRinkebyTestnet,\n\t\t\t\t\tchainId: 421611,\n\t\t\t\t\tnetworkId: 421611,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.ArbitrumOne) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.ArbitrumOne,\n\t\t\t\t\tchainId: 42161,\n\t\t\t\t\tnetworkId: 42161,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\t\tif (chainParamsOrName === CustomChain.xDaiChain) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.xDaiChain,\n\t\t\t\t\tchainId: 100,\n\t\t\t\t\tnetworkId: 100,\n\t\t\t\t},\n\t\t\t\topts,\n\t\t\t);\n\t\t}\n\n\t\tif (chainParamsOrName === CustomChain.OptimisticKovan) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.OptimisticKovan,\n\t\t\t\t\tchainId: 69,\n\t\t\t\t\tnetworkId: 69,\n\t\t\t\t},\n\t\t\t\t// Optimism has not implemented the London hardfork yet (targeting Q1.22)\n\t\t\t\t{ hardfork: Hardfork.Berlin, ...opts },\n\t\t\t);\n\t\t}\n\n\t\tif (chainParamsOrName === CustomChain.OptimisticEthereum) {\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: CustomChain.OptimisticEthereum,\n\t\t\t\t\tchainId: 10,\n\t\t\t\t\tnetworkId: 10,\n\t\t\t\t},\n\t\t\t\t// Optimism has not implemented the London hardfork yet (targeting Q1.22)\n\t\t\t\t{ hardfork: Hardfork.Berlin, ...opts },\n\t\t\t);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\tthrow new Error(`Custom chain ${chainParamsOrName} not supported`);\n\t}\n\n\t/**\n\t * Static method to load and set common from a geth genesis json\n\t * @param genesisJson json of geth configuration\n\t * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n\t * @returns Common\n\t */\n\tpublic static fromGethGenesis(\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tgenesisJson: any,\n\t\t{ chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts,\n\t): Common {\n\t\tconst genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge);\n\t\tconst common = new Common({\n\t\t\tchain: genesisParams.name ?? 'custom',\n\t\t\tcustomChains: [genesisParams],\n\t\t\teips,\n\t\t\thardfork: hardfork ?? genesisParams.hardfork,\n\t\t});\n\t\tif (genesisHash !== undefined) {\n\t\t\tcommon.setForkHashes(genesisHash);\n\t\t}\n\t\treturn common;\n\t}\n\n\t/**\n\t * Static method to determine if a {@link chainId} is supported as a standard chain\n\t * @param chainId bigint id (`1`) of a standard chain\n\t * @returns boolean\n\t */\n\tpublic static isSupportedChainId(chainId: bigint): boolean {\n\t\tconst initializedChains = this._getInitializedChains();\n\t\treturn Boolean((initializedChains.names as ChainName)[chainId.toString()]);\n\t}\n\n\tprivate static _getChainParams(\n\t\t_chain: string | number | Chain | bigint,\n\t\tcustomChains?: ChainConfig[],\n\t): ChainConfig {\n\t\tlet chain = _chain;\n\t\tconst initializedChains = this._getInitializedChains(customChains);\n\t\tif (typeof chain === 'number' || typeof chain === 'bigint') {\n\t\t\tchain = chain.toString();\n\n\t\t\tif ((initializedChains.names as ChainName)[chain]) {\n\t\t\t\tconst name: string = (initializedChains.names as ChainName)[chain];\n\t\t\t\treturn initializedChains[name] as ChainConfig;\n\t\t\t}\n\n\t\t\tthrow new Error(`Chain with ID ${chain} not supported`);\n\t\t}\n\n\t\tif (initializedChains[chain] !== undefined) {\n\t\t\treturn initializedChains[chain] as ChainConfig;\n\t\t}\n\n\t\tthrow new Error(`Chain with name ${chain} not supported`);\n\t}\n\n\tpublic constructor(opts: CommonOpts) {\n\t\tsuper();\n\t\tthis._customChains = opts.customChains ?? [];\n\t\tthis._chainParams = this.setChain(opts.chain);\n\t\tthis.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge;\n\t\t// Assign hardfork changes in the sequence of the applied hardforks\n\t\tthis.HARDFORK_CHANGES = this.hardforks().map(hf => [\n\t\t\thf.name as HardforkSpecKeys,\n\t\t\tHARDFORK_SPECS[hf.name as HardforkSpecKeys],\n\t\t]);\n\t\tthis._hardfork = this.DEFAULT_HARDFORK;\n\t\tif (opts.hardfork !== undefined) {\n\t\t\tthis.setHardfork(opts.hardfork);\n\t\t}\n\t\tif (opts.eips) {\n\t\t\tthis.setEIPs(opts.eips);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the chain\n\t * @param chain String ('mainnet') or Number (1) chain representation.\n\t *              Or, a Dictionary of chain parameters for a private network.\n\t * @returns The dictionary with parameters set as chain\n\t */\n\tpublic setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n\t\tif (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n\t\t\tthis._chainParams = Common._getChainParams(chain, this._customChains);\n\t\t} else if (typeof chain === 'object') {\n\t\t\tif (this._customChains.length > 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Chain must be a string, number, or bigint when initialized with customChains passed in',\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\t\t\tfor (const param of required) {\n\t\t\t\tif (!(param in chain)) {\n\t\t\t\t\tthrow new Error(`Missing required chain parameter: ${param}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._chainParams = chain as ChainConfig;\n\t\t} else {\n\t\t\tthrow new Error('Wrong input format');\n\t\t}\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tif (hf.block === undefined) {\n\t\t\t\tthrow new Error(`Hardfork cannot have undefined block number`);\n\t\t\t}\n\t\t}\n\t\treturn this._chainParams;\n\t}\n\n\t/**\n\t * Sets the hardfork to get params for\n\t * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n\t */\n\tpublic setHardfork(hardfork: string | Hardfork): void {\n\t\tlet existing = false;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif (hfChanges[0] === hardfork) {\n\t\t\t\tif (this._hardfork !== hardfork) {\n\t\t\t\t\tthis._hardfork = hardfork;\n\t\t\t\t\tthis.emit('hardforkChanged', hardfork);\n\t\t\t\t}\n\t\t\t\texisting = true;\n\t\t\t}\n\t\t}\n\t\tif (!existing) {\n\t\t\tthrow new Error(`Hardfork with name ${hardfork} not supported`);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the hardfork based on the block number or an optional\n\t * total difficulty (Merge HF) provided.\n\t *\n\t * An optional TD takes precedence in case the corresponding HF block\n\t * is set to `null` or otherwise needs to match (if not an error\n\t * will be thrown).\n\t *\n\t * @param blockNumber\n\t * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n\t * @param timestamp: timestamp in seconds at which block was/is to be minted\n\t * @returns The name of the HF\n\t */\n\tpublic getHardforkByBlockNumber(\n\t\t_blockNumber: Numbers,\n\t\t_td?: Numbers,\n\t\t_timestamp?: Numbers,\n\t): string {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst td = toType(_td, TypeOutput.BigInt);\n\t\tconst timestamp = toType(_timestamp, TypeOutput.Number);\n\n\t\t// Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n\t\tconst hfs = this.hardforks().filter(\n\t\t\thf =>\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thf.block !== null ||\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.ttd !== null && hf.ttd !== undefined) ||\n\t\t\t\thf.timestamp !== undefined,\n\t\t);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tconst mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\tconst doubleTTDHF = hfs\n\t\t\t.slice(mergeIndex + 1)\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\tif (doubleTTDHF >= 0) {\n\t\t\tthrow Error(`More than one merge hardforks found with ttd specified`);\n\t\t}\n\n\t\t// Find the first hardfork that has a block number greater than `blockNumber`\n\t\t// (skips the merge hardfork since it cannot have a block number specified).\n\t\t// If timestamp is not provided, it also skips timestamps hardforks to continue\n\t\t// discovering/checking number hardforks.\n\t\tlet hfIndex = hfs.findIndex(\n\t\t\thf =>\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.block !== null && hf.block > blockNumber) ||\n\t\t\t\t(timestamp !== undefined && Number(hf.timestamp) > timestamp),\n\t\t);\n\n\t\tif (hfIndex === -1) {\n\t\t\t// all hardforks apply, set hfIndex to the last one as that's the candidate\n\t\t\thfIndex = hfs.length;\n\t\t} else if (hfIndex === 0) {\n\t\t\t// cannot have a case where a block number is before all applied hardforks\n\t\t\t// since the chain has to start with a hardfork\n\t\t\tthrow Error('Must have at least one hardfork at block 0');\n\t\t}\n\n\t\t// If timestamp is not provided, we need to rollback to the last hf with block or ttd\n\t\tif (timestamp === undefined) {\n\t\t\tconst stepBack = hfs\n\t\t\t\t.slice(0, hfIndex)\n\t\t\t\t.reverse()\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t.findIndex(hf => hf.block !== null || hf.ttd !== undefined);\n\t\t\thfIndex -= stepBack;\n\t\t}\n\t\t// Move hfIndex one back to arrive at candidate hardfork\n\t\thfIndex -= 1;\n\n\t\t// If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n\t\t// hardforks. so it will now be needed to rollback\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n\t\t\t// We're on the merge hardfork.  Let's check the TTD\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tif (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n\t\t\t\t// Merge ttd greater than current td so we're on hardfork before merge\n\t\t\t\thfIndex -= 1;\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t} else if (mergeIndex >= 0 && td !== undefined && td !== null) {\n\t\t\tif (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Maximum HF determined by total difficulty is lower than the block number HF',\n\t\t\t\t);\n\t\t\t} else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'HF determined by block number is lower than the minimum total difficulty HF',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst hfStartIndex = hfIndex;\n\t\t// Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n\t\t// This won't anyway be the case with Merge hfs\n\t\tfor (; hfIndex < hfs.length - 1; hfIndex += 1) {\n\t\t\t// break out if hfIndex + 1 is not scheduled at hfIndex\n\t\t\tif (\n\t\t\t\thfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n\t\t\t\thfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (timestamp) {\n\t\t\tconst minTimeStamp = hfs\n\t\t\t\t.slice(0, hfStartIndex)\n\t\t\t\t.reduce(\n\t\t\t\t\t(acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc),\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\tif (minTimeStamp > timestamp) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t`Maximum HF determined by timestamp is lower than the block number/ttd HF`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst maxTimeStamp = hfs\n\t\t\t\t.slice(hfIndex + 1)\n\t\t\t\t.reduce(\n\t\t\t\t\t(acc: number, hf: HardforkConfig) =>\n\t\t\t\t\t\tMath.min(Number(hf.timestamp ?? timestamp), acc),\n\t\t\t\t\ttimestamp,\n\t\t\t\t);\n\t\t\tif (maxTimeStamp < timestamp) {\n\t\t\t\tthrow Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`);\n\t\t\t}\n\t\t}\n\t\tconst hardfork = hfs[hfIndex];\n\t\treturn hardfork.name;\n\t}\n\n\t/**\n\t * Sets a new hardfork based on the block number or an optional\n\t * total difficulty (Merge HF) provided.\n\t *\n\t * An optional TD takes precedence in case the corresponding HF block\n\t * is set to `null` or otherwise needs to match (if not an error\n\t * will be thrown).\n\t *\n\t * @param blockNumber\n\t * @param td\n\t * @param timestamp\n\t * @returns The name of the HF set\n\t */\n\tpublic setHardforkByBlockNumber(\n\t\tblockNumber: Numbers,\n\t\ttd?: Numbers,\n\t\ttimestamp?: Numbers,\n\t): string {\n\t\tconst hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n\t\tthis.setHardfork(hardfork);\n\t\treturn hardfork;\n\t}\n\n\t/**\n\t * Internal helper function, returns the params for the given hardfork for the chain set\n\t * @param hardfork Hardfork name\n\t * @returns Dictionary with hardfork params or null if hardfork not on chain\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n\t\tconst hfs = this.hardforks();\n\t\tfor (const hf of hfs) {\n\t\t\tif (hf.name === hardfork) return hf;\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the active EIPs\n\t * @param eips\n\t */\n\tpublic setEIPs(eips: number[] = []) {\n\t\tfor (const eip of eips) {\n\t\t\tif (!(eip in EIPs)) {\n\t\t\t\tthrow new Error(`${eip} not supported`);\n\t\t\t}\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n\t\t\tconst minHF = this.gteHardfork(EIPs[eip].minimumHardfork);\n\t\t\tif (!minHF) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t`${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tif (EIPs[eip].requiredEIPs !== undefined) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tfor (const elem of EIPs[eip].requiredEIPs) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t\t\tif (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t\t\t`${eip} requires EIP ${elem}, but is not included in the EIP list`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._eips = eips;\n\t}\n\n\t/**\n\t * Returns a parameter for the current chain setup\n\t *\n\t * If the parameter is present in an EIP, the EIP always takes precedence.\n\t * Otherwise the parameter if taken from the latest applied HF with\n\t * a change on the respective parameter.\n\t *\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic param(topic: string, name: string): bigint {\n\t\t// TODO: consider the case that different active EIPs\n\t\t// can change the same parameter\n\t\tlet value;\n\t\tfor (const eip of this._eips) {\n\t\t\tvalue = this.paramByEIP(topic, name, eip);\n\t\t\tif (value !== undefined) return value;\n\t\t}\n\t\treturn this.paramByHardfork(topic, name, this._hardfork);\n\t}\n\n\t/**\n\t * Returns the parameter corresponding to a hardfork\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @param hardfork Hardfork name\n\t * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tlet value = null;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// EIP-referencing HF file (e.g. berlin.json)\n\t\t\tif ('eips' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tconst hfEIPs = hfChanges[1].eips;\n\t\t\t\tfor (const eip of hfEIPs) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\t\t\t\tconst valueEIP = this.paramByEIP(topic, name, eip);\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tvalue = typeof valueEIP === 'bigint' ? valueEIP : value;\n\t\t\t\t}\n\t\t\t\t// Parameter-inlining HF file (e.g. istanbul.json)\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif (hfChanges[1][topic] === undefined) {\n\t\t\t\t\tthrow new Error(`Topic ${topic} not defined`);\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif (hfChanges[1][topic][name] !== undefined) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tvalue = hfChanges[1][topic][name].v;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn BigInt(value ?? 0);\n\t}\n\n\t/**\n\t * Returns a parameter corresponding to an EIP\n\t * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n\t * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n\t * @param eip Number of the EIP\n\t * @returns The value requested or `undefined` if not found\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n\t\tif (!(eip in EIPs)) {\n\t\t\tthrow new Error(`${eip} not supported`);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst eipParams = EIPs[eip];\n\t\tif (!(topic in eipParams)) {\n\t\t\tthrow new Error(`Topic ${topic} not defined`);\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\tif (eipParams[topic][name] === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\tconst value = eipParams[topic][name].v;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn BigInt(value);\n\t}\n\n\t/**\n\t * Returns a parameter for the hardfork active on block number or\n\t * optional provided total difficulty (Merge HF)\n\t * @param topic Parameter topic\n\t * @param name Parameter name\n\t * @param blockNumber Block number\n\t * @param td Total difficulty\n\t *    * @returns The value requested or `BigInt(0)` if not found\n\t */\n\tpublic paramByBlock(\n\t\ttopic: string,\n\t\tname: string,\n\t\tblockNumber: Numbers,\n\t\ttd?: Numbers,\n\t\ttimestamp?: Numbers,\n\t): bigint {\n\t\tconst hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp);\n\t\treturn this.paramByHardfork(topic, name, hardfork);\n\t}\n\n\t/**\n\t * Checks if an EIP is activated by either being included in the EIPs\n\t * manually passed in with the {@link CommonOpts.eips} or in a\n\t * hardfork currently being active\n\t *\n\t * Note: this method only works for EIPs being supported\n\t * by the {@link CommonOpts.eips} constructor option\n\t * @param eip\n\t */\n\tpublic isActivatedEIP(eip: number): boolean {\n\t\tif (this.eips().includes(eip)) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tconst hf = hfChanges[1];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n\t\t\tif (this.gteHardfork(hf.name) && 'eips' in hf) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tif ((hf.eips as number[]).includes(eip)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks if set or provided hardfork is active on block number\n\t * @param hardfork Hardfork name or null (for HF set)\n\t * @param blockNumber\n\t * @returns True if HF is active on block number\n\t */\n\tpublic hardforkIsActiveOnBlock(\n\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t_hardfork: string | Hardfork | null,\n\t\t_blockNumber: Numbers,\n\t): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst hfBlock = this.hardforkBlock(hardfork);\n\t\tif (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Alias to hardforkIsActiveOnBlock when hardfork is set\n\t * @param blockNumber\n\t * @returns True if HF is active on block number\n\t */\n\tpublic activeOnBlock(blockNumber: Numbers): boolean {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn this.hardforkIsActiveOnBlock(null, blockNumber);\n\t}\n\n\t/**\n\t * Sequence based check if given or set HF1 is greater than or equal HF2\n\t * @param hardfork1 Hardfork name or null (if set)\n\t * @param hardfork2 Hardfork name\n\t * @param opts Hardfork options\n\t * @returns True if HF1 gte HF2\n\t */\n\tpublic hardforkGteHardfork(\n\t\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t\t_hardfork1: string | Hardfork | null,\n\t\thardfork2: string | Hardfork,\n\t): boolean {\n\t\tconst hardfork1 = _hardfork1 ?? this._hardfork;\n\t\tconst hardforks = this.hardforks();\n\n\t\tlet posHf1 = -1;\n\t\tlet posHf2 = -1;\n\t\tlet index = 0;\n\t\tfor (const hf of hardforks) {\n\t\t\tif (hf.name === hardfork1) posHf1 = index;\n\t\t\tif (hf.name === hardfork2) posHf2 = index;\n\t\t\tindex += 1;\n\t\t}\n\t\treturn posHf1 >= posHf2 && posHf2 !== -1;\n\t}\n\n\t/**\n\t * Alias to hardforkGteHardfork when hardfork is set\n\t * @param hardfork Hardfork name\n\t * @returns True if hardfork set is greater than hardfork provided\n\t */\n\tpublic gteHardfork(hardfork: string | Hardfork): boolean {\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn this.hardforkGteHardfork(null, hardfork);\n\t}\n\n\t/**\n\t * Returns the hardfork change block for hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block number or null if unscheduled\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkBlock(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst block = this._getHardfork(hardfork)?.block;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (block === undefined || block === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(block);\n\t}\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkTimestamp(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst timestamp = this._getHardfork(hardfork)?.timestamp;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (timestamp === undefined || timestamp === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(timestamp);\n\t}\n\n\t/**\n\t * Returns the hardfork change block for eip\n\t * @param eip EIP number\n\t * @returns Block number or null if unscheduled\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic eipBlock(eip: number): bigint | null {\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tconst hf = hfChanges[1];\n\t\t\tif ('eips' in hf) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\t\t\t\tif (hf.eips.includes(eip)) {\n\t\t\t\t\treturn this.hardforkBlock(\n\t\t\t\t\t\ttypeof hfChanges[0] === 'number' ? String(hfChanges[0]) : hfChanges[0],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Total difficulty or null if no set\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkTTD(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst ttd = this._getHardfork(hardfork)?.ttd;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (ttd === undefined || ttd === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\treturn BigInt(ttd);\n\t}\n\n\t/**\n\t * True if block number provided is the hardfork (given or set) change block\n\t * @param blockNumber Number of the block to check\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns True if blockNumber is HF block\n\t * @deprecated\n\t */\n\tpublic isHardforkBlock(_blockNumber: Numbers, _hardfork?: string | Hardfork): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst block = this.hardforkBlock(hardfork);\n\t\treturn typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false;\n\t}\n\n\t/**\n\t * Returns the change block for the next hardfork after the hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block timestamp, number or null if not available\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic nextHardforkBlockOrTimestamp(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = (_hardfork as Hardfork) ?? this._hardfork;\n\t\tconst hfs = this.hardforks();\n\t\tlet hfIndex = hfs.findIndex(hf => (hf.name as Hardfork) === hardfork);\n\t\t// If the current hardfork is merge, go one behind as merge hf is not part of these\n\t\t// calcs even if the merge hf block is set\n\t\tif (hardfork === Hardfork.Merge) {\n\t\t\thfIndex -= 1;\n\t\t}\n\t\t// Hardfork not found\n\t\tif (hfIndex < 0) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\tlet currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block;\n\t\tcurrHfTimeOrBlock =\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tcurrHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n\t\t\t\t? Number(currHfTimeOrBlock)\n\t\t\t\t: // eslint-disable-next-line no-null/no-null\n\t\t\t\t  null;\n\n\t\tconst nextHf = hfs.slice(hfIndex + 1).find(hf => {\n\t\t\tlet hfTimeOrBlock = hf.timestamp ?? hf.block;\n\t\t\thfTimeOrBlock =\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thfTimeOrBlock !== null && hfTimeOrBlock !== undefined\n\t\t\t\t\t? Number(hfTimeOrBlock)\n\t\t\t\t\t: // eslint-disable-next-line no-null/no-null\n\t\t\t\t\t  null;\n\t\t\treturn (\n\t\t\t\t(hf.name as Hardfork) !== Hardfork.Merge &&\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thfTimeOrBlock !== null &&\n\t\t\t\thfTimeOrBlock !== undefined &&\n\t\t\t\thfTimeOrBlock !== currHfTimeOrBlock\n\t\t\t);\n\t\t});\n\t\t// If no next hf found with valid block or timestamp return null\n\t\tif (nextHf === undefined) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\tconst nextHfBlock = nextHf.timestamp ?? nextHf.block;\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (nextHfBlock === null || nextHfBlock === undefined) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\n\t\treturn BigInt(nextHfBlock);\n\t}\n\n\t/**\n\t * Returns the change block for the next hardfork after the hardfork provided or set\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns Block number or null if not available\n\t * @deprecated\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic nextHardforkBlock(_hardfork?: string | Hardfork): bigint | null {\n\t\tconst hardfork = (_hardfork as Hardfork) ?? this._hardfork;\n\t\tlet hfBlock = this.hardforkBlock(hardfork);\n\t\t// If this is a merge hardfork with block not set, then we fallback to previous hardfork\n\t\t// to find the nextHardforkBlock\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfBlock === null && hardfork === Hardfork.Merge) {\n\t\t\tconst hfs = this.hardforks();\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tconst mergeIndex = hfs.findIndex(hf => hf.ttd !== null && hf.ttd !== undefined);\n\t\t\tif (mergeIndex < 0) {\n\t\t\t\tthrow Error(`Merge hardfork should have been found`);\n\t\t\t}\n\t\t\thfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (hfBlock === null) {\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn null;\n\t\t}\n\t\t// Next fork block number or null if none available\n\t\t// Logic: if accumulator is still null and on the first occurrence of\n\t\t// a block greater than the current hfBlock set the accumulator,\n\t\t// pass on the accumulator as the final result from this time on\n\t\t// eslint-disable-next-line no-null/no-null, @typescript-eslint/ban-types\n\t\tconst nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n\t\t\t// We need to ignore the merge block in our next hardfork calc\n\t\t\tconst block = BigInt(\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\thf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block,\n\t\t\t);\n\t\t\t// TypeScript can't seem to follow that the hfBlock is not null at this point\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\treturn block > hfBlock && acc === null ? block : acc;\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t}, null);\n\t\treturn nextHfBlock;\n\t}\n\n\t/**\n\t * True if block number provided is the hardfork change block following the hardfork given or set\n\t * @param blockNumber Number of the block to check\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @returns True if blockNumber is HF block\n\t * @deprecated\n\t */\n\tpublic isNextHardforkBlock(_blockNumber: Numbers, _hardfork?: string | Hardfork): boolean {\n\t\tconst blockNumber = toType(_blockNumber, TypeOutput.BigInt);\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\t// eslint-disable-next-line deprecation/deprecation\n\t\tconst nextHardforkBlock = this.nextHardforkBlock(hardfork);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber;\n\t}\n\n\t/**\n\t * Internal helper function to calculate a fork hash\n\t * @param hardfork Hardfork name\n\t * @param genesisHash Genesis block hash of the chain\n\t * @returns Fork hash as hex string\n\t */\n\tpublic _calcForkHash(hardfork: string | Hardfork, genesisHash: Uint8Array) {\n\t\tlet hfUint8Array = new Uint8Array();\n\t\tlet prevBlockOrTime = 0;\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tconst { block, timestamp, name } = hf;\n\t\t\t// Timestamp to be used for timestamp based hfs even if we may bundle\n\t\t\t// block number with them retrospectively\n\t\t\tlet blockOrTime = timestamp ?? block;\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tblockOrTime = blockOrTime !== null ? Number(blockOrTime) : null;\n\n\t\t\t// Skip for chainstart (0), not applied HFs (null) and\n\t\t\t// when already applied on same blockOrTime HFs\n\t\t\t// and on the merge since forkhash doesn't change on merge hf\n\t\t\tif (\n\t\t\t\ttypeof blockOrTime === 'number' &&\n\t\t\t\tblockOrTime !== 0 &&\n\t\t\t\tblockOrTime !== prevBlockOrTime &&\n\t\t\t\t(name as Hardfork) !== Hardfork.Merge\n\t\t\t) {\n\t\t\t\tconst hfBlockUint8Array = hexToBytes(blockOrTime.toString(16).padStart(16, '0'));\n\t\t\t\thfUint8Array = uint8ArrayConcat(hfUint8Array, hfBlockUint8Array);\n\t\t\t\tprevBlockOrTime = blockOrTime;\n\t\t\t}\n\n\t\t\tif (hf.name === hardfork) break;\n\t\t}\n\t\tconst inputUint8Array = uint8ArrayConcat(genesisHash, hfUint8Array);\n\n\t\t// CRC32 delivers result as signed (negative) 32-bit integer,\n\t\t// convert to hex string\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst forkhash = bytesToHex(intToUint8Array(crc32Uint8Array(inputUint8Array) >>> 0));\n\t\treturn forkhash;\n\t}\n\n\t/**\n\t * Returns an eth/64 compliant fork hash (EIP-2124)\n\t * @param hardfork Hardfork name, optional if HF set\n\t * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n\t */\n\tpublic forkHash(_hardfork?: string | Hardfork, genesisHash?: Uint8Array): string {\n\t\tconst hardfork = _hardfork ?? this._hardfork;\n\t\tconst data = this._getHardfork(hardfork);\n\t\tif (\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\tdata === null ||\n\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t(data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n\t\t) {\n\t\t\tconst msg = 'No fork hash calculation possible for future hardfork';\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif (data?.forkHash !== null && data?.forkHash !== undefined) {\n\t\t\treturn data.forkHash;\n\t\t}\n\t\tif (!genesisHash) throw new Error('genesisHash required for forkHash calculation');\n\t\treturn this._calcForkHash(hardfork, genesisHash);\n\t}\n\n\t/**\n\t *\n\t * @param forkHash Fork hash as a hex string\n\t * @returns Array with hardfork data (name, block, forkHash)\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tpublic hardforkForForkHash(forkHash: string): HardforkConfig | null {\n\t\tconst resArray = this.hardforks().filter((hf: HardforkConfig) => hf.forkHash === forkHash);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\treturn resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n\t}\n\n\t/**\n\t * Sets any missing forkHashes on the passed-in {@link Common} instance\n\t * @param common The {@link Common} to set the forkHashes for\n\t * @param genesisHash The genesis block hash\n\t */\n\tpublic setForkHashes(genesisHash: Uint8Array) {\n\t\tfor (const hf of this.hardforks()) {\n\t\t\tconst blockOrTime = hf.timestamp ?? hf.block;\n\t\t\tif (\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t(hf.forkHash === null || hf.forkHash === undefined) &&\n\t\t\t\t// eslint-disable-next-line no-null/no-null\n\t\t\t\t((blockOrTime !== null && blockOrTime !== undefined) ||\n\t\t\t\t\ttypeof hf.ttd !== 'undefined')\n\t\t\t) {\n\t\t\t\thf.forkHash = this.forkHash(hf.name, genesisHash);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the Genesis parameters of the current chain\n\t * @returns Genesis dictionary\n\t */\n\tpublic genesis(): GenesisBlockConfig {\n\t\treturn this._chainParams.genesis;\n\t}\n\n\t/**\n\t * Returns the hardforks for current chain\n\t * @returns {Array} Array with arrays of hardforks\n\t */\n\tpublic hardforks(): HardforkConfig[] {\n\t\treturn this._chainParams.hardforks;\n\t}\n\n\t/**\n\t * Returns bootstrap nodes for the current chain\n\t * @returns {Dictionary} Dict with bootstrap nodes\n\t */\n\tpublic bootstrapNodes(): BootstrapNodeConfig[] | undefined {\n\t\treturn this._chainParams.bootstrapNodes;\n\t}\n\n\t/**\n\t * Returns DNS networks for the current chain\n\t * @returns {String[]} Array of DNS ENR urls\n\t */\n\tpublic dnsNetworks(): string[] {\n\t\treturn this._chainParams.dnsNetworks!;\n\t}\n\n\t/**\n\t * Returns the hardfork set\n\t * @returns Hardfork name\n\t */\n\tpublic hardfork(): string | Hardfork {\n\t\treturn this._hardfork;\n\t}\n\n\t/**\n\t * Returns the Id of current chain\n\t * @returns chain Id\n\t */\n\tpublic chainId(): bigint {\n\t\treturn BigInt(this._chainParams.chainId);\n\t}\n\n\t/**\n\t * Returns the name of current chain\n\t * @returns chain name (lower case)\n\t */\n\tpublic chainName(): string {\n\t\treturn this._chainParams.name;\n\t}\n\n\t/**\n\t * Returns the Id of current network\n\t * @returns network Id\n\t */\n\tpublic networkId(): bigint {\n\t\treturn BigInt(this._chainParams.networkId);\n\t}\n\n\t/**\n\t * Returns the active EIPs\n\t * @returns List of EIPs\n\t */\n\tpublic eips(): number[] {\n\t\treturn this._eips;\n\t}\n\n\t/**\n\t * Returns the consensus type of the network\n\t * Possible values: \"pow\"|\"poa\"|\"pos\"\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusType(): string | ConsensusType {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus.type;\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value ?? this._chainParams.consensus.type;\n\t}\n\n\t/**\n\t * Returns the concrete consensus implementation\n\t * algorithm or protocol for the network\n\t * e.g. \"ethash\" for \"pow\" consensus type,\n\t * \"clique\" for \"poa\" consensus type or\n\t * \"casper\" for \"pos\" consensus type.\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusAlgorithm(): string | ConsensusAlgorithm {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus.algorithm;\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn value ?? (this._chainParams.consensus.algorithm as ConsensusAlgorithm);\n\t}\n\n\t/**\n\t * Returns a dictionary with consensus configuration\n\t * parameters based on the consensus algorithm\n\t *\n\t * Expected returns (parameters must be present in\n\t * the respective chain json files):\n\t *\n\t * ethash: empty object\n\t * clique: period, epoch\n\t * casper: empty object\n\t *\n\t * Note: This value can update along a Hardfork.\n\t */\n\tpublic consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n\t\tconst hardfork = this.hardfork();\n\n\t\tlet value;\n\t\tfor (const hfChanges of this.HARDFORK_CHANGES) {\n\t\t\tif ('consensus' in hfChanges[1]) {\n\t\t\t\t// The config parameter is named after the respective consensus algorithm\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment\n\t\t\t\tvalue = hfChanges[1].consensus[hfChanges[1].consensus.algorithm];\n\t\t\t}\n\t\t\tif (hfChanges[0] === hardfork) break;\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn (\n\t\t\tvalue ??\n\t\t\tthis._chainParams.consensus[this.consensusAlgorithm() as ConsensusAlgorithm] ??\n\t\t\t{}\n\t\t);\n\t}\n\n\t/**\n\t * Returns a deep copy of this {@link Common} instance.\n\t */\n\tpublic copy(): Common {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment\n\t\tconst copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n\t\tcopy.removeAllListeners();\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\treturn copy;\n\t}\n\n\tpublic static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n\t\tconst names: ChainName = {};\n\t\tfor (const [name, id] of Object.entries(Chain)) {\n\t\t\tnames[id] = name.toLowerCase();\n\t\t}\n\t\tconst chains = { mainnet, goerli, sepolia } as ChainsConfig;\n\t\tif (customChains) {\n\t\t\tfor (const chain of customChains) {\n\t\t\t\tconst { name } = chain;\n\t\t\t\tnames[chain.chainId.toString()] = name;\n\t\t\t\tchains[name] = chain;\n\t\t\t}\n\t\t}\n\t\tchains.names = names;\n\t\treturn chains;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4870, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/types.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport type { HexString, Numbers } from 'web3-types';\n\nimport type { Common } from '../common/common.js';\n// eslint-disable-next-line require-extensions/require-extensions\nimport type { Uint8ArrayLike, PrefixedHexString } from '../common/types';\nimport { Address } from './address.js';\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n\t/**\n\t * Tx supports EIP-155 replay protection\n\t * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n\t */\n\tEIP155ReplayProtection = 155,\n\n\t/**\n\t * Tx supports EIP-1559 gas fee market mechanism\n\t * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n\t */\n\tEIP1559FeeMarket = 1559,\n\n\t/**\n\t * Tx is a typed transaction as defined in EIP-2718\n\t * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n\t */\n\tEIP2718TypedTransaction = 2718,\n\n\t/**\n\t * Tx supports access list generation as defined in EIP-2930\n\t * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n\t */\n\tEIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n\t/**\n\t * A {@link Common} object defining the chain and hardfork for the transaction.\n\t *\n\t * Object will be internally copied so that tx behavior don't incidentally\n\t * change on future HF changes.\n\t *\n\t * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n\t *\n\t * Current default hardfork: `istanbul`\n\t */\n\tcommon?: Common;\n\t/**\n\t * A transaction object by default gets frozen along initialization. This gives you\n\t * strong additional security guarantees on the consistency of the tx parameters.\n\t * It also enables tx hash caching when the `hash()` method is called multiple times.\n\t *\n\t * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n\t * add additional properties - it is strongly encouraged that you do the freeze yourself\n\t * within your code instead.\n\t *\n\t * Default: true\n\t */\n\tfreeze?: boolean;\n\n\t/**\n\t * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n\t * Gas cost for initcode size analysis will still be charged. Use with caution.\n\t */\n\tallowUnlimitedInitCodeSize?: boolean;\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n\taddress: PrefixedHexString;\n\tstorageKeys: PrefixedHexString[];\n};\n\n/*\n * An Access List as a tuple of [address: Uint8Array, storageKeys: Uint8Array[]]\n */\nexport type AccessListUint8ArrayItem = [Uint8Array, Uint8Array[]];\nexport type AccessListUint8Array = AccessListUint8ArrayItem[];\nexport type AccessList = AccessListItem[];\n\nexport function isAccessListUint8Array(\n\tinput: AccessListUint8Array | AccessList,\n): input is AccessListUint8Array {\n\tif (input.length === 0) {\n\t\treturn true;\n\t}\n\tconst firstItem = input[0];\n\tif (Array.isArray(firstItem)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isAccessList(input: AccessListUint8Array | AccessList): input is AccessList {\n\treturn !isAccessListUint8Array(input); // This is exactly the same method, except the output is negated.\n}\n\nexport interface ECDSASignature {\n\tv: bigint;\n\tr: Uint8Array;\n\ts: Uint8Array;\n}\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n\t/**\n\t * The transaction's nonce.\n\t */\n\tnonce?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction's gas price.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tgasPrice?: Numbers | Uint8Array | null;\n\n\t/**\n\t * The transaction's gas limit.\n\t */\n\tgasLimit?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction's the address is sent to.\n\t */\n\tto?: Address | Uint8Array | HexString;\n\n\t/**\n\t * The amount of Ether sent.\n\t */\n\tvalue?: Numbers | Uint8Array;\n\n\t/**\n\t * This will contain the data of the message or the init of a contract.\n\t */\n\tdata?: Uint8ArrayLike;\n\n\t/**\n\t * EC recovery ID.\n\t */\n\tv?: Numbers | Uint8Array;\n\n\t/**\n\t * EC signature parameter.\n\t */\n\tr?: Numbers | Uint8Array;\n\n\t/**\n\t * EC signature parameter.\n\t */\n\ts?: Numbers | Uint8Array;\n\n\t/**\n\t * The transaction type\n\t */\n\n\ttype?: Numbers;\n};\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n\t/**\n\t * The transaction's chain ID\n\t */\n\tchainId?: Numbers;\n\n\t/**\n\t * The access list which contains the addresses/storage slots which the transaction wishes to access\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\taccessList?: AccessListUint8Array | AccessList | null;\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n\t/**\n\t * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n\t * transactions and should always be undefined for this specific transaction type.\n\t */\n\t// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-redundant-type-constituents\n\tgasPrice?: never | null;\n\t/**\n\t * The maximum inclusion fee per gas (this fee is given to the miner)\n\t */\n\tmaxPriorityFeePerGas?: Numbers | Uint8Array;\n\t/**\n\t * The maximum total fee\n\t */\n\tmaxFeePerGas?: Numbers | Uint8Array;\n}\n\n/**\n * Uint8Array values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Uint8Array[];\n\n/**\n * Uint8Array values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tAccessListUint8Array,\n\tUint8Array?,\n\tUint8Array?,\n\tUint8Array?,\n];\n\n/**\n * Uint8Array values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tUint8Array,\n\tAccessListUint8Array,\n\tUint8Array?,\n\tUint8Array?,\n\tUint8Array?,\n];\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] };\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n\tnonce?: string;\n\tgasPrice?: string;\n\tgasLimit?: string;\n\tto?: string;\n\tdata?: string;\n\tv?: string;\n\tr?: string;\n\ts?: string;\n\tvalue?: string;\n\tchainId?: string;\n\taccessList?: JsonAccessListItem[];\n\ttype?: string;\n\tmaxPriorityFeePerGas?: string;\n\tmaxFeePerGas?: string;\n\tmaxFeePerDataGas?: string;\n\tversionedHashes?: string[];\n}\n"],"names":[],"mappings":"AAuBA;;;GAGG;;;;;AACH,IAAY,UAwBX;AAxBD,CAAA,SAAY,UAAU;IACrB;;;OAGG,CACH,UAAA,CAAA,UAAA,CAAA,yBAAA,GAAA,IAAA,GAAA,wBAA4B,CAAA;IAE5B;;;OAGG,CACH,UAAA,CAAA,UAAA,CAAA,mBAAA,GAAA,KAAA,GAAA,kBAAuB,CAAA;IAEvB;;;OAGG,CACH,UAAA,CAAA,UAAA,CAAA,0BAAA,GAAA,KAAA,GAAA,yBAA8B,CAAA;IAE9B;;;OAGG,CACH,UAAA,CAAA,UAAA,CAAA,qBAAA,GAAA,KAAA,GAAA,oBAAyB,CAAA;AAC1B,CAAC,EAxBW,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAwBrB;AAqDK,SAAU,sBAAsB,CACrC,KAAwC;IAExC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC;IACb,CAAC;IACD,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;IACb,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC;AAEK,SAAU,YAAY,CAAC,KAAwC;IACpE,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,iEAAiE;AACzG,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4916, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/address.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex, uint8ArrayEquals } from 'web3-utils';\nimport { secp256k1 } from './constants.js';\nimport { assertIsUint8Array, zeros } from '../common/utils.js';\n\nexport class Address {\n\tpublic readonly buf: Uint8Array;\n\n\tpublic constructor(buf: Uint8Array) {\n\t\tif (buf.length !== 20) {\n\t\t\tthrow new Error('Invalid address length');\n\t\t}\n\t\tthis.buf = buf;\n\t}\n\n\t/**\n\t * Returns the zero address.\n\t */\n\tpublic static zero(): Address {\n\t\treturn new Address(zeros(20));\n\t}\n\n\t/**\n\t * Is address equal to another.\n\t */\n\tpublic equals(address: Address): boolean {\n\t\treturn uint8ArrayEquals(this.buf, address.buf);\n\t}\n\n\t/**\n\t * Is address zero.\n\t */\n\tpublic isZero(): boolean {\n\t\treturn this.equals(Address.zero());\n\t}\n\n\t/**\n\t * Returns hex encoding of address.\n\t */\n\tpublic toString(): string {\n\t\treturn bytesToHex(this.buf);\n\t}\n\n\t/**\n\t * Returns Uint8Array representation of address.\n\t */\n\tpublic toArray(): Uint8Array {\n\t\treturn this.buf;\n\t}\n\n\t/**\n\t * Returns the ethereum address of a given public key.\n\t * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n\t * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n\t * @param sanitize Accept public keys in other formats\n\t */\n\tpublic static publicToAddress(_pubKey: Uint8Array, sanitize = false): Uint8Array {\n\t\tlet pubKey = _pubKey;\n\t\tassertIsUint8Array(pubKey);\n\t\tif (sanitize && pubKey.length !== 64) {\n\t\t\tpubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1);\n\t\t}\n\t\tif (pubKey.length !== 64) {\n\t\t\tthrow new Error('Expected pubKey to be of length 64');\n\t\t}\n\t\t// Only take the lower 160bits of the hash\n\t\treturn keccak256(pubKey).slice(-20);\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;AACF,OAAO,EAAE,SAAS,EAAE,MAAM,iCAAiC,CAAC;;AAE5D,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;;AAF/D,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;;;;;AAIpD,MAAO,OAAO;IAGnB,YAAmB,GAAe,CAAA;QACjC,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YACvB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAED;;OAEG,CACI,MAAM,CAAC,IAAI,GAAA;QACjB,OAAO,IAAI,OAAO,kPAAC,QAAA,AAAK,EAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED;;OAEG,CACI,MAAM,CAAC,OAAgB,EAAA;QAC7B,OAAO,2OAAA,AAAgB,EAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAED;;OAEG,CACI,MAAM,GAAA;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACpC,CAAC;IAED;;OAEG,CACI,QAAQ,GAAA;QACd,+NAAO,aAAA,AAAU,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG,CACI,OAAO,GAAA;QACb,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAED;;;;;OAKG,CACI,MAAM,CAAC,eAAe,CAAC,OAAmB,EAAE,QAAQ,GAAG,KAAK,EAAA;QAClE,IAAI,MAAM,GAAG,OAAO,CAAC;QACrB,sQAAA,AAAkB,EAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YACtC,MAAM,gPAAG,YAAS,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YAC1B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACvD,CAAC;QACD,0CAA0C;QAC1C,0OAAO,YAAA,AAAS,EAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;CACD","ignoreList":[0]}},
    {"offset": {"line": 4994, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5000, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/utils.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { HexString } from 'web3-types';\nimport { bytesToHex } from 'web3-utils';\nimport { setLengthLeft, toUint8Array } from '../common/utils.js';\nimport type { AccessList, AccessListUint8Array, AccessListItem } from './types.js';\nimport { isAccessList } from './types.js';\n\nimport type { Common } from '../common/common.js';\n\nexport const checkMaxInitCodeSize = (common: Common, length: number) => {\n\tconst maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n\tif (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n\t\tthrow new Error(\n\t\t\t`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n\t\t\t\t'vm',\n\t\t\t\t'maxInitCodeSize',\n\t\t\t)}`,\n\t\t);\n\t}\n};\n\nexport const getAccessListData = (accessList: AccessListUint8Array | AccessList) => {\n\tlet AccessListJSON;\n\tlet uint8arrayAccessList;\n\tif (isAccessList(accessList)) {\n\t\tAccessListJSON = accessList;\n\t\tconst newAccessList: AccessListUint8Array = [];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < accessList.length; i += 1) {\n\t\t\tconst item: AccessListItem = accessList[i];\n\t\t\tconst addressBytes = toUint8Array(item.address);\n\t\t\tconst storageItems: Uint8Array[] = [];\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\t\tfor (let index = 0; index < item.storageKeys.length; index += 1) {\n\t\t\t\tstorageItems.push(toUint8Array(item.storageKeys[index]));\n\t\t\t}\n\t\t\tnewAccessList.push([addressBytes, storageItems]);\n\t\t}\n\t\tuint8arrayAccessList = newAccessList;\n\t} else {\n\t\tuint8arrayAccessList = accessList ?? [];\n\t\t// build the JSON\n\t\tconst json: AccessList = [];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < uint8arrayAccessList.length; i += 1) {\n\t\t\tconst data = uint8arrayAccessList[i];\n\t\t\tconst address = bytesToHex(data[0]);\n\t\t\tconst storageKeys: string[] = [];\n\t\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\t\tfor (let item = 0; item < data[1].length; item += 1) {\n\t\t\t\tstorageKeys.push(bytesToHex(data[1][item]));\n\t\t\t}\n\t\t\tconst jsonItem: AccessListItem = {\n\t\t\t\taddress,\n\t\t\t\tstorageKeys,\n\t\t\t};\n\t\t\tjson.push(jsonItem);\n\t\t}\n\t\tAccessListJSON = json;\n\t}\n\n\treturn {\n\t\tAccessListJSON,\n\t\taccessList: uint8arrayAccessList,\n\t};\n};\n\nexport const verifyAccessList = (accessList: AccessListUint8Array) => {\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let key = 0; key < accessList.length; key += 1) {\n\t\tconst accessListItem = accessList[key];\n\t\tconst address = accessListItem[0];\n\t\tconst storageSlots = accessListItem[1];\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n\t\tif ((<Array<unknown>>accessListItem)[2] !== undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.',\n\t\t\t);\n\t\t}\n\t\tif (address.length !== 20) {\n\t\t\tthrow new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {\n\t\t\tif (storageSlots[storageSlot].length !== 32) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Invalid EIP-2930 transaction: storage slot length should be 32 bytes',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const getAccessListJSON = (\n\taccessList: AccessListUint8Array,\n): {\n\taddress: HexString;\n\tstorageKeys: HexString[];\n}[] => {\n\tconst accessListJSON: { address: HexString; storageKeys: HexString[] }[] = [];\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let index = 0; index < accessList.length; index += 1) {\n\t\tconst item = accessList[index];\n\t\tconst JSONItem: { address: HexString; storageKeys: HexString[] } = {\n\t\t\taddress: bytesToHex(setLengthLeft(item[0], 20)),\n\t\t\tstorageKeys: [],\n\t\t};\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n\t\tconst storageSlots: Uint8Array[] = item && item[1];\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let slot = 0; slot < storageSlots.length; slot += 1) {\n\t\t\tconst storageSlot = storageSlots[slot];\n\t\t\tJSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)));\n\t\t}\n\t\taccessListJSON.push(JSONItem);\n\t}\n\treturn accessListJSON;\n};\n\nexport const getDataFeeEIP2930 = (accessList: AccessListUint8Array, common: Common): number => {\n\tconst accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n\tconst accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n\n\tlet slots = 0;\n\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\tfor (let index = 0; index < accessList.length; index += 1) {\n\t\tconst item = accessList[index];\n\t\tconst storageSlots = item[1];\n\t\tslots += storageSlots.length;\n\t}\n\n\tconst addresses = accessList.length;\n\treturn addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n};\n"],"names":[],"mappings":";;;;;;;AAiBA,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAC;AACxC,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAEjE,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;;;;;AAInC,MAAM,oBAAoB,GAAG,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE;IACtE,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IAC9D,IAAI,eAAe,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,eAAe,EAAE,CAAC;QACzD,MAAM,IAAI,KAAK,CACd,CAAA,0DAAA,EAA6D,MAAM,CAAA,kBAAA,EAAqB,MAAM,CAAC,KAAK,CACnG,IAAI,EACJ,iBAAiB,CACjB,EAAE,CACH,CAAC;IACH,CAAC;AACF,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,UAA6C,EAAE,EAAE;IAClF,IAAI,cAAc,CAAC;IACnB,IAAI,oBAAoB,CAAC;IACzB,IAAI,4PAAA,AAAY,EAAC,UAAU,CAAC,EAAE,CAAC;QAC9B,cAAc,GAAG,UAAU,CAAC;QAC5B,MAAM,aAAa,GAAyB,EAAE,CAAC;QAC/C,4DAA4D;QAC5D,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAE,CAAC;YAC/C,MAAM,IAAI,GAAmB,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,YAAY,oPAAG,eAAA,AAAY,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChD,MAAM,YAAY,GAAiB,EAAE,CAAC;YACtC,4DAA4D;YAC5D,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAE,CAAC;gBACjE,YAAY,CAAC,IAAI,kPAAC,eAAA,AAAY,EAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC;YACD,aAAa,CAAC,IAAI,CAAC;gBAAC,YAAY;gBAAE,YAAY;aAAC,CAAC,CAAC;QAClD,CAAC;QACD,oBAAoB,GAAG,aAAa,CAAC;IACtC,CAAC,MAAM,CAAC;QACP,oBAAoB,GAAG,UAAU,KAAA,QAAV,UAAU,KAAA,KAAA,IAAV,UAAU,GAAI,EAAE,CAAC;QACxC,iBAAiB;QACjB,MAAM,IAAI,GAAe,EAAE,CAAC;QAC5B,4DAA4D;QAC5D,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAE,CAAC;YACzD,MAAM,IAAI,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,OAAO,2NAAG,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,WAAW,GAAa,EAAE,CAAC;YACjC,4DAA4D;YAC5D,IAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,CAAE,CAAC;gBACrD,WAAW,CAAC,IAAI,yNAAC,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC;YACD,MAAM,QAAQ,GAAmB;gBAChC,OAAO;gBACP,WAAW;aACX,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC;QACD,cAAc,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,OAAO;QACN,cAAc;QACd,UAAU,EAAE,oBAAoB;KAChC,CAAC;AACH,CAAC,CAAC;AAEK,MAAM,gBAAgB,GAAG,CAAC,UAAgC,EAAE,EAAE;IACpE,4DAA4D;IAC5D,IAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAE,CAAC;QACrD,MAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;QACvC,qHAAqH;QACrH,IAAqB,cAAe,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC;YACvD,MAAM,IAAI,KAAK,CACd,sGAAsG,CACtG,CAAC;QACH,CAAC;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;QACpF,CAAC;QACD,4DAA4D;QAC5D,IAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,YAAY,CAAC,MAAM,EAAE,WAAW,IAAI,CAAC,CAAE,CAAC;YAC/E,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;gBAC7C,MAAM,IAAI,KAAK,CACd,sEAAsE,CACtE,CAAC;YACH,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAChC,UAAgC,EAI7B,EAAE;IACL,MAAM,cAAc,GAAuD,EAAE,CAAC;IAC9E,4DAA4D;IAC5D,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAE,CAAC;QAC3D,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAqD;YAClE,OAAO,0NAAE,aAAA,AAAU,mPAAC,gBAAA,AAAa,EAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C,WAAW,EAAE,EAAE;SACf,CAAC;QACF,oEAAoE;QACpE,MAAM,YAAY,GAAiB,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACnD,4DAA4D;QAC5D,IAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,CAAE,CAAC;YAC1D,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YACvC,QAAQ,CAAC,WAAW,CAAC,IAAI,yNAAC,aAAA,AAAU,mPAAC,gBAAA,AAAa,EAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC;QACD,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;IACD,OAAO,cAAc,CAAC;AACvB,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,UAAgC,EAAE,MAAc,EAAU,EAAE;IAC7F,MAAM,wBAAwB,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,0BAA0B,CAAC,CAAC;IACvF,MAAM,qBAAqB,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC;IAEjF,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,4DAA4D;IAC5D,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAE,CAAC;QAC3D,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,KAAK,IAAI,YAAY,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC;IACpC,OAAO,SAAS,GAAG,MAAM,CAAC,qBAAqB,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AAC7F,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5127, "column": 0}, "map": {"version":3,"file":"baseTransaction.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/baseTransaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Common as CommonType, Numbers } from 'web3-types';\nimport { bytesToHex } from 'web3-utils';\nimport { MAX_INTEGER, MAX_UINT64, SECP256K1_ORDER_DIV_2, secp256k1 } from './constants.js';\nimport { toUint8Array, uint8ArrayToBigInt, unpadUint8Array } from '../common/utils.js';\nimport { Common } from '../common/common.js';\nimport { Hardfork, Chain } from '../common/enums.js';\nimport type {\n\tAccessListEIP2930TxData,\n\tAccessListEIP2930ValuesArray,\n\tFeeMarketEIP1559TxData,\n\tFeeMarketEIP1559ValuesArray,\n\tJsonTx,\n\tTxData,\n\tTxOptions,\n\tTxValuesArray,\n} from './types.js';\nimport { Capability, ECDSASignature } from './types.js';\nimport { Address } from './address.js';\nimport { checkMaxInitCodeSize } from './utils.js';\n\ninterface TransactionCache {\n\thash: Uint8Array | undefined;\n\tdataFee?: {\n\t\tvalue: bigint;\n\t\thardfork: string | Hardfork;\n\t};\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n\tprivate readonly _type: number;\n\n\tpublic readonly nonce: bigint;\n\tpublic readonly gasLimit: bigint;\n\tpublic readonly to?: Address;\n\tpublic readonly value: bigint;\n\tpublic readonly data: Uint8Array;\n\n\tpublic readonly v?: bigint;\n\tpublic readonly r?: bigint;\n\tpublic readonly s?: bigint;\n\n\tpublic readonly common!: Common;\n\n\tprotected cache: TransactionCache = {\n\t\thash: undefined,\n\t\tdataFee: undefined,\n\t};\n\n\tprotected readonly txOptions: TxOptions;\n\n\t/**\n\t * List of tx type defining EIPs,\n\t * e.g. 1559 (fee market) and 2930 (access lists)\n\t * for FeeMarketEIP1559Transaction objects\n\t */\n\tprotected activeCapabilities: number[] = [];\n\n\t/**\n\t * The default chain the tx falls back to if no Common\n\t * is provided and if the chain can't be derived from\n\t * a passed in chainId (only EIP-2718 typed txs) or\n\t * EIP-155 signature (legacy txs).\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_CHAIN = Chain.Mainnet;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge;\n\n\tpublic constructor(\n\t\ttxData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n\t\topts: TxOptions,\n\t) {\n\t\tconst { nonce, gasLimit, to, value, data, v, r, s, type } = txData;\n\t\tthis._type = Number(uint8ArrayToBigInt(toUint8Array(type)));\n\n\t\tthis.txOptions = opts;\n\n\t\tconst toB = toUint8Array(to === '' ? '0x' : to);\n\t\tconst vB = toUint8Array(v === '' ? '0x' : v);\n\t\tconst rB = toUint8Array(r === '' ? '0x' : r);\n\t\tconst sB = toUint8Array(s === '' ? '0x' : s);\n\n\t\tthis.nonce = uint8ArrayToBigInt(toUint8Array(nonce === '' ? '0x' : nonce));\n\t\tthis.gasLimit = uint8ArrayToBigInt(toUint8Array(gasLimit === '' ? '0x' : gasLimit));\n\t\tthis.to = toB.length > 0 ? new Address(toB) : undefined;\n\t\tthis.value = uint8ArrayToBigInt(toUint8Array(value === '' ? '0x' : value));\n\t\tthis.data = toUint8Array(data === '' ? '0x' : data);\n\n\t\tthis.v = vB.length > 0 ? uint8ArrayToBigInt(vB) : undefined;\n\t\tthis.r = rB.length > 0 ? uint8ArrayToBigInt(rB) : undefined;\n\t\tthis.s = sB.length > 0 ? uint8ArrayToBigInt(sB) : undefined;\n\n\t\tthis._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n\n\t\t// geth limits gasLimit to 2^64-1\n\t\tthis._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n\n\t\t// EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n\t\tthis._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tconst createContract = this.to === undefined || this.to === null;\n\t\tconst allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false;\n\t\tconst common = opts.common ?? this._getCommon();\n\t\tif (createContract && common.isActivatedEIP(3860) && !allowUnlimitedInitCodeSize) {\n\t\t\tcheckMaxInitCodeSize(common, this.data.length);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the transaction type.\n\t *\n\t * Note: legacy txs will return tx type `0`.\n\t */\n\tpublic get type() {\n\t\treturn this._type;\n\t}\n\n\t/**\n\t * Checks if a tx type defining capability is active\n\t * on a tx, for example the EIP-1559 fee market mechanism\n\t * or the EIP-2930 access list feature.\n\t *\n\t * Note that this is different from the tx type itself,\n\t * so EIP-2930 access lists can very well be active\n\t * on an EIP-1559 tx for example.\n\t *\n\t * This method can be useful for feature checks if the\n\t * tx type is unknown (e.g. when instantiated with\n\t * the tx factory).\n\t *\n\t * See `Capabilites` in the `types` module for a reference\n\t * on all supported capabilities.\n\t */\n\tpublic supports(capability: Capability) {\n\t\treturn this.activeCapabilities.includes(capability);\n\t}\n\n\t/**\n\t * Checks if the transaction has the minimum amount of gas required\n\t * (DataFee + TxFee + Creation Fee).\n\t */\n\tpublic validate(): boolean;\n\tpublic validate(stringError: false): boolean;\n\tpublic validate(stringError: true): string[];\n\tpublic validate(stringError = false): boolean | string[] {\n\t\tconst errors = [];\n\n\t\tif (this.getBaseFee() > this.gasLimit) {\n\t\t\terrors.push(\n\t\t\t\t`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`,\n\t\t\t);\n\t\t}\n\n\t\tif (this.isSigned() && !this.verifySignature()) {\n\t\t\terrors.push('Invalid Signature');\n\t\t}\n\n\t\treturn stringError ? errors : errors.length === 0;\n\t}\n\n\tprotected _validateYParity() {\n\t\tconst { v } = this;\n\t\tif (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n\t\t\tconst msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n\t * Reasoning: https://ethereum.stackexchange.com/a/55728\n\t */\n\tprotected _validateHighS() {\n\t\tconst { s } = this;\n\t\tif (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n\t */\n\tpublic getBaseFee(): bigint {\n\t\tconst txFee = this.common.param('gasPrices', 'tx');\n\t\tlet fee = this.getDataFee();\n\t\tif (txFee) fee += txFee;\n\t\tif (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n\t\t\tconst txCreationFee = this.common.param('gasPrices', 'txCreation');\n\t\t\tif (txCreationFee) fee += txCreationFee;\n\t\t}\n\t\treturn fee;\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tconst txDataZero = this.common.param('gasPrices', 'txDataZero');\n\t\tconst txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n\n\t\tlet cost = BigInt(0);\n\t\t// eslint-disable-next-line @typescript-eslint/prefer-for-of\n\t\tfor (let i = 0; i < this.data.length; i += 1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions, no-unused-expressions\n\t\t\tthis.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n\t\t}\n\t\t// eslint-disable-next-line no-null/no-null\n\t\tif ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n\t\t\tconst dataLength = BigInt(Math.ceil(this.data.length / 32));\n\t\t\tconst initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength;\n\t\t\tcost += initCodeCost;\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic abstract getUpfrontCost(): bigint;\n\n\t/**\n\t * If the tx's `to` is to the creation address\n\t */\n\tpublic toCreationAddress(): boolean {\n\t\treturn this.to === undefined || this.to.buf.length === 0;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of this transaction, in order.\n\t *\n\t * Use {@link BaseTransaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n\t */\n\tpublic abstract raw():\n\t\t| TxValuesArray\n\t\t| AccessListEIP2930ValuesArray\n\t\t| FeeMarketEIP1559ValuesArray;\n\n\t/**\n\t * Returns the encoding of the transaction.\n\t */\n\tpublic abstract serialize(): Uint8Array;\n\n\t// Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n\t//\n\t// Note: do not use code docs here since VS Studio is then not able to detect the\n\t// comments from the inherited methods\n\tpublic abstract getMessageToSign(hashMessage: false): Uint8Array | Uint8Array[];\n\tpublic abstract getMessageToSign(hashMessage?: true): Uint8Array;\n\n\tpublic abstract hash(): Uint8Array;\n\n\tpublic abstract getMessageToVerifySignature(): Uint8Array;\n\n\tpublic isSigned(): boolean {\n\t\tconst { v, r, s } = this;\n\t\tif (v === undefined || r === undefined || s === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Determines if the signature is valid\n\t */\n\tpublic verifySignature(): boolean {\n\t\ttry {\n\t\t\t// Main signature verification is done in `getSenderPublicKey()`\n\t\t\tconst publicKey = this.getSenderPublicKey();\n\t\t\treturn unpadUint8Array(publicKey).length !== 0;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the sender's address\n\t */\n\tpublic getSenderAddress(): Address {\n\t\treturn new Address(Address.publicToAddress(this.getSenderPublicKey()));\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic abstract getSenderPublicKey(): Uint8Array;\n\n\t/**\n\t * Signs a transaction.\n\t *\n\t * Note that the signed tx is returned as a new object,\n\t * use as follows:\n\t * ```javascript\n\t * const signedTx = tx.sign(privateKey)\n\t * ```\n\t */\n\tpublic sign(privateKey: Uint8Array): TransactionObject {\n\t\tif (privateKey.length !== 32) {\n\t\t\tconst msg = this._errorMsg('Private key must be 32 bytes in length.');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\t// Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n\t\t// and want to recreate a signature (where EIP155 should be applied)\n\t\t// Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n\t\t// 2021-06-23\n\t\tlet hackApplied = false;\n\t\tif (\n\t\t\tthis.type === 0 &&\n\t\t\tthis.common.gteHardfork('spuriousDragon') &&\n\t\t\t!this.supports(Capability.EIP155ReplayProtection)\n\t\t) {\n\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\thackApplied = true;\n\t\t}\n\n\t\tconst msgHash = this.getMessageToSign(true);\n\t\tconst { v, r, s } = this._ecsign(msgHash, privateKey);\n\t\tconst tx = this._processSignature(v, r, s);\n\n\t\t// Hack part 2\n\t\tif (hackApplied) {\n\t\t\tconst index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.activeCapabilities.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn tx;\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic abstract toJSON(): JsonTx;\n\n\t// Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n\tprotected abstract _processSignature(\n\t\tv: bigint,\n\t\tr: Uint8Array,\n\t\ts: Uint8Array,\n\t): TransactionObject;\n\n\t/**\n\t * Does chain ID checks on common and returns a common\n\t * to be used on instantiation\n\t * @hidden\n\t *\n\t * @param common - {@link Common} instance from tx options\n\t * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n\t */\n\tprotected _getCommon(common?: Common, chainId?: Numbers) {\n\t\t// TODO: this function needs to be reviewed and the code to be more clean\n\t\t// check issue https://github.com/web3/web3.js/issues/6666\n\t\t// Chain ID provided\n\t\tif (chainId !== undefined) {\n\t\t\tconst chainIdBigInt = uint8ArrayToBigInt(toUint8Array(chainId));\n\t\t\tif (common) {\n\t\t\t\tif (common.chainId() !== chainIdBigInt) {\n\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t'The chain ID does not match the chain ID of Common',\n\t\t\t\t\t);\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t\t// Common provided, chain ID does match\n\t\t\t\t// -> Return provided Common\n\t\t\t\treturn common.copy();\n\t\t\t}\n\t\t\tif (Common.isSupportedChainId(chainIdBigInt)) {\n\t\t\t\t// No Common, chain ID supported by Common\n\t\t\t\t// -> Instantiate Common with chain ID\n\t\t\t\treturn new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK });\n\t\t\t}\n\t\t\t// No Common, chain ID not supported by Common\n\t\t\t// -> Instantiate custom Common derived from DEFAULT_CHAIN\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: 'custom-chain',\n\t\t\t\t\tnetworkId: chainIdBigInt,\n\t\t\t\t\tchainId: chainIdBigInt,\n\t\t\t\t},\n\t\t\t\t{ baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK },\n\t\t\t);\n\t\t}\n\t\t// No chain ID provided\n\t\t// -> return Common provided or create new default Common\n\n\t\tif (common?.copy && typeof common?.copy === 'function') {\n\t\t\treturn common.copy();\n\t\t}\n\t\t// TODO: Recheck this next block when working on https://github.com/web3/web3.js/issues/6666\n\t\t// This block is to handle when `chainId` was not passed and the `common` object does not have `copy()`\n\t\t// If it was meant to be unsupported to process `common` in this case, an exception should be thrown instead of the following block\n\t\tif (common) {\n\t\t\tconst hardfork =\n\t\t\t\ttypeof common.hardfork === 'function'\n\t\t\t\t\t? common.hardfork()\n\t\t\t\t\t: // eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\t\t\t  (common.hardfork as unknown as string);\n\n\t\t\treturn Common.custom(\n\t\t\t\t{\n\t\t\t\t\tname: 'custom-chain',\n\t\t\t\t\tnetworkId: common.networkId\n\t\t\t\t\t\t? common.networkId()\n\t\t\t\t\t\t: BigInt((common as unknown as CommonType).customChain?.networkId) ??\n\t\t\t\t\t\t  undefined,\n\t\t\t\t\tchainId: common.chainId\n\t\t\t\t\t\t? common.chainId()\n\t\t\t\t\t\t: BigInt((common as unknown as CommonType).customChain?.chainId) ??\n\t\t\t\t\t\t  undefined,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbaseChain: this.DEFAULT_CHAIN,\n\t\t\t\t\thardfork: hardfork || this.DEFAULT_HARDFORK,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\treturn new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK });\n\t}\n\n\t/**\n\t * Validates that an object with BigInt values cannot exceed the specified bit limit.\n\t * @param values Object containing string keys and BigInt values\n\t * @param bits Number of bits to check (64 or 256)\n\t * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n\t */\n\tprotected _validateCannotExceedMaxInteger(\n\t\tvalues: { [key: string]: bigint | undefined },\n\t\tbits = 256,\n\t\tcannotEqual = false,\n\t) {\n\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\tswitch (bits) {\n\t\t\t\tcase 64:\n\t\t\t\t\tif (cannotEqual) {\n\t\t\t\t\t\tif (value !== undefined && value >= MAX_UINT64) {\n\t\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t\t`${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== undefined && value > MAX_UINT64) {\n\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 256:\n\t\t\t\t\tif (cannotEqual) {\n\t\t\t\t\t\tif (value !== undefined && value >= MAX_INTEGER) {\n\t\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t\t`${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (value !== undefined && value > MAX_INTEGER) {\n\t\t\t\t\t\tconst msg = this._errorMsg(\n\t\t\t\t\t\t\t`${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: {\n\t\t\t\t\tconst msg = this._errorMsg('unimplemented bits value');\n\t\t\t\t\tthrow new Error(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tprotected static _validateNotArray(values: { [key: string]: any }) {\n\t\tconst txDataKeys = [\n\t\t\t'nonce',\n\t\t\t'gasPrice',\n\t\t\t'gasLimit',\n\t\t\t'to',\n\t\t\t'value',\n\t\t\t'data',\n\t\t\t'v',\n\t\t\t'r',\n\t\t\t's',\n\t\t\t'type',\n\t\t\t'baseFee',\n\t\t\t'maxFeePerGas',\n\t\t\t'chainId',\n\t\t];\n\t\tfor (const [key, value] of Object.entries(values)) {\n\t\t\tif (txDataKeys.includes(key)) {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tthrow new Error(`${key} cannot be an array`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic abstract errorStr(): string;\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected abstract _errorMsg(msg: string): string;\n\n\t/**\n\t * Returns the shared error postfix part for _error() method\n\t * tx type implementations.\n\t */\n\tprotected _getSharedErrorPostfix() {\n\t\tlet hash = '';\n\t\ttry {\n\t\t\thash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)';\n\t\t} catch (e) {\n\t\t\thash = 'error';\n\t\t}\n\t\tlet isSigned = '';\n\t\ttry {\n\t\t\tisSigned = this.isSigned().toString();\n\t\t} catch (e) {\n\t\t\thash = 'error';\n\t\t}\n\t\tlet hf = '';\n\t\ttry {\n\t\t\thf = this.common.hardfork();\n\t\t} catch (e) {\n\t\t\thf = 'error';\n\t\t}\n\n\t\tlet postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `;\n\t\tpostfix += `signed=${isSigned} hf=${hf}`;\n\n\t\treturn postfix;\n\t}\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _ecsign(\n\t\tmsgHash: Uint8Array,\n\t\tprivateKey: Uint8Array,\n\t\tchainId?: bigint,\n\t): ECDSASignature {\n\t\tconst signature = secp256k1.sign(msgHash, privateKey);\n\t\tconst signatureBytes = signature.toCompactRawBytes();\n\n\t\tconst r = signatureBytes.subarray(0, 32);\n\t\tconst s = signatureBytes.subarray(32, 64);\n\n\t\tconst v =\n\t\t\tchainId === undefined\n\t\t\t\t? BigInt(signature.recovery! + 27)\n\t\t\t\t: BigInt(signature.recovery! + 35) + BigInt(chainId) * BigInt(2);\n\n\t\treturn { r, s, v };\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromSerializedTx(\n\t\t// @ts-expect-error unused variable\n\t\tserialized: Uint8Array,\n\t\t// @ts-expect-error unused variable\n\t\topts: TxOptions = {},\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n\t): any {}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromTxData(\n\t\t// @ts-expect-error unused variable\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\ttxData: any,\n\t\t// @ts-expect-error unused variable\n\t\topts: TxOptions = {},\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n\t): any {}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5553, "column": 0}, "map": {"version":3,"file":"eip1559Transaction.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/eip1559Transaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport {\n\tgetAccessListData,\n\tgetAccessListJSON,\n\tgetDataFeeEIP2930,\n\tverifyAccessList,\n} from './utils.js';\nimport {\n\tbigIntToHex,\n\ttoUint8Array,\n\tecrecover,\n\tuint8ArrayToBigInt,\n\tbigIntToUnpaddedUint8Array,\n} from '../common/utils.js';\nimport type {\n\tAccessList,\n\tAccessListUint8Array,\n\tFeeMarketEIP1559TxData,\n\tFeeMarketEIP1559ValuesArray,\n\tJsonTx,\n\tTxOptions,\n} from './types.js';\nimport type { Common } from '../common/common.js';\n\nconst TRANSACTION_TYPE = 2;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\n// eslint-disable-next-line no-use-before-define\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n\tpublic readonly chainId: bigint;\n\tpublic readonly accessList: AccessListUint8Array;\n\tpublic readonly AccessListJSON: AccessList;\n\tpublic readonly maxPriorityFeePerGas: bigint;\n\tpublic readonly maxFeePerGas: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK = 'london';\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, v, r, s }\n\t *\n\t * Notes:\n\t * - `chainId` will be set automatically if not provided\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\treturn new FeeMarketEIP1559Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tif (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(\n\t\t\t\t\tserialized.subarray(0, 1),\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t\tconst values = RLP.decode(serialized.subarray(1));\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input: must be array');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn FeeMarketEIP1559Transaction.fromValuesArray(\n\t\t\tvalues as FeeMarketEIP1559ValuesArray,\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t */\n\tpublic static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n\t\tif (values.length !== 9 && values.length !== 12) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [\n\t\t\tchainId,\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tto,\n\t\t\tvalue,\n\t\t\tdata,\n\t\t\taccessList,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t] = values;\n\n\t\tthis._validateNotArray({ chainId, v });\n\t\tvalidateNoLeadingZeroes({\n\t\t\tnonce,\n\t\t\tmaxPriorityFeePerGas,\n\t\t\tmaxFeePerGas,\n\t\t\tgasLimit,\n\t\t\tvalue,\n\t\t\tv,\n\t\t\tr,\n\t\t\ts,\n\t\t});\n\n\t\treturn new FeeMarketEIP1559Transaction(\n\t\t\t{\n\t\t\t\tchainId: uint8ArrayToBigInt(chainId),\n\t\t\t\tnonce,\n\t\t\t\tmaxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\taccessList: accessList ?? [],\n\t\t\t\tv: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\t\tconst { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData;\n\n\t\tthis.common = this._getCommon(opts.common, chainId);\n\t\tthis.chainId = this.common.chainId();\n\n\t\tif (!this.common.isActivatedEIP(1559)) {\n\t\t\tthrow new Error('EIP-1559 not enabled on Common');\n\t\t}\n\t\tthis.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);\n\n\t\t// Populate the access list fields\n\t\tconst accessListData = getAccessListData(accessList ?? []);\n\t\tthis.accessList = accessListData.accessList;\n\t\tthis.AccessListJSON = accessListData.AccessListJSON;\n\t\t// Verify the access list format.\n\t\tverifyAccessList(this.accessList);\n\n\t\tthis.maxFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxFeePerGas === '' ? '0x' : maxFeePerGas),\n\t\t);\n\t\tthis.maxPriorityFeePerGas = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas),\n\t\t);\n\n\t\tthis._validateCannotExceedMaxInteger({\n\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t});\n\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n\t\t\tconst msg = this._errorMsg(\n\t\t\t\t'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)',\n\t\t\t);\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tthis._validateYParity();\n\t\tthis._validateHighS();\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tlet cost = super.getDataFee();\n\t\tcost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: cost,\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t * @param baseFee The base fee of the block (will be set to 0 if not provided)\n\t */\n\tpublic getUpfrontCost(baseFee = BigInt(0)): bigint {\n\t\tconst prio = this.maxPriorityFeePerGas;\n\t\tconst maxBase = this.maxFeePerGas - baseFee;\n\t\tconst inclusionFeePerGas = prio < maxBase ? prio : maxBase;\n\t\tconst gasPrice = inclusionFeePerGas + baseFee;\n\t\treturn this.gasLimit * gasPrice + this.value;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-1559 transaction, in order.\n\t *\n\t * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS]`\n\t *\n\t * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): FeeMarketEIP1559ValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.chainId),\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxPriorityFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.maxFeePerGas),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.accessList,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the EIP-1559 transaction.\n\t *\n\t * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n\t * accessList, signatureYParity, signatureR, signatureS])`\n\t *\n\t * Note that in contrast to the legacy tx serialization format this is not\n\t * valid RLP any more due to the raw tx type preceding and concatenated to\n\t * the RLP encoding of the values.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\tconst base = this.raw();\n\t\treturn uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t}\n\n\t/**\n\t * Returns the serialized unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: in contrast to the legacy tx the raw message format is already\n\t * serialized and doesn't need to be RLP encoded any more.\n\t *\n\t * ```javascript\n\t * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage = true): Uint8Array {\n\t\tconst base = this.raw().slice(0, 9);\n\t\tconst message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(message);\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(this.serialize());\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(this.serialize());\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature(): Uint8Array {\n\t\treturn this.getMessageToSign();\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv! + BigInt(27), // Recover the 27 which was stripped from ecsign\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\tpublic _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn FeeMarketEIP1559Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tchainId: this.chainId,\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tmaxPriorityFeePerGas: this.maxPriorityFeePerGas,\n\t\t\t\tmaxFeePerGas: this.maxFeePerGas,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\taccessList: this.accessList,\n\t\t\t\tv: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic toJSON(): JsonTx {\n\t\tconst accessListJSON = getAccessListJSON(this.accessList);\n\n\t\treturn {\n\t\t\tchainId: bigIntToHex(this.chainId),\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tmaxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n\t\t\tmaxFeePerGas: bigIntToHex(this.maxFeePerGas),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\taccessList: accessListJSON,\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\terrorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5903, "column": 0}, "map": {"version":3,"file":"eip2930Transaction.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/eip2930Transaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport { RLP } from '@ethereumjs/rlp';\nimport { bytesToHex, hexToBytes, uint8ArrayConcat, uint8ArrayEquals } from 'web3-utils';\nimport { MAX_INTEGER } from './constants.js';\nimport {\n\tgetAccessListData,\n\tverifyAccessList,\n\tgetAccessListJSON,\n\tgetDataFeeEIP2930,\n} from './utils.js';\nimport {\n\tbigIntToHex,\n\ttoUint8Array,\n\tecrecover,\n\tuint8ArrayToBigInt,\n\tbigIntToUnpaddedUint8Array,\n} from '../common/utils.js';\nimport { BaseTransaction } from './baseTransaction.js';\nimport type {\n\tAccessList,\n\tAccessListUint8Array,\n\tAccessListEIP2930TxData,\n\tAccessListEIP2930ValuesArray,\n\tJsonTx,\n\tTxOptions,\n} from './types.js';\nimport type { Common } from '../common/common.js';\n\nconst TRANSACTION_TYPE = 1;\nconst TRANSACTION_TYPE_UINT8ARRAY = hexToBytes(TRANSACTION_TYPE.toString(16).padStart(2, '0'));\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\n// eslint-disable-next-line no-use-before-define\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n\tpublic readonly chainId: bigint;\n\tpublic readonly accessList: AccessListUint8Array;\n\tpublic readonly AccessListJSON: AccessList;\n\tpublic readonly gasPrice: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * The default HF if the tx type is active on that HF\n\t * or the first greater HF where the tx is active.\n\t *\n\t * @hidden\n\t */\n\tprotected DEFAULT_HARDFORK = 'berlin';\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * v, r, s }\n\t *\n\t * Notes:\n\t * - `chainId` will be set automatically if not provided\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n\t\treturn new AccessListEIP2930Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tif (!uint8ArrayEquals(serialized.subarray(0, 1), TRANSACTION_TYPE_UINT8ARRAY)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${bytesToHex(\n\t\t\t\t\tserialized.subarray(0, 1),\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t\tconst values = RLP.decode(Uint8Array.from(serialized.subarray(1)));\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input: must be array');\n\t\t}\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\treturn AccessListEIP2930Transaction.fromValuesArray(\n\t\t\tvalues as AccessListEIP2930ValuesArray,\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)]`\n\t */\n\tpublic static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n\t\tif (values.length !== 8 && values.length !== 11) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values;\n\n\t\tthis._validateNotArray({ chainId, v });\n\t\tvalidateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n\n\t\tconst emptyAccessList: AccessList = [];\n\n\t\treturn new AccessListEIP2930Transaction(\n\t\t\t{\n\t\t\t\tchainId: uint8ArrayToBigInt(chainId),\n\t\t\t\tnonce,\n\t\t\t\tgasPrice,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\taccessList: accessList ?? emptyAccessList,\n\t\t\t\tv: v !== undefined ? uint8ArrayToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\t\tconst { chainId, accessList, gasPrice } = txData;\n\n\t\tthis.common = this._getCommon(opts.common, chainId);\n\t\tthis.chainId = this.common.chainId();\n\n\t\t// EIP-2718 check is done in Common\n\t\tif (!this.common.isActivatedEIP(2930)) {\n\t\t\tthrow new Error('EIP-2930 not enabled on Common');\n\t\t}\n\t\tthis.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);\n\n\t\t// Populate the access list fields\n\t\tconst accessListData = getAccessListData(accessList ?? []);\n\t\tthis.accessList = accessListData.accessList;\n\t\tthis.AccessListJSON = accessListData.AccessListJSON;\n\t\t// Verify the access list format.\n\t\tverifyAccessList(this.accessList);\n\n\t\tthis.gasPrice = uint8ArrayToBigInt(toUint8Array(gasPrice === '' ? '0x' : gasPrice));\n\n\t\tthis._validateCannotExceedMaxInteger({\n\t\t\tgasPrice: this.gasPrice,\n\t\t});\n\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tthis._validateYParity();\n\t\tthis._validateHighS();\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tlet cost = super.getDataFee();\n\t\tcost += BigInt(getDataFeeEIP2930(this.accessList, this.common));\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: cost,\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn cost;\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic getUpfrontCost(): bigint {\n\t\treturn this.gasLimit * this.gasPrice + this.value;\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the EIP-2930 transaction, in order.\n\t *\n\t * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)]`\n\t *\n\t * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n\t * with {@link Block.fromValuesArray}.\n\t *\n\t * For an unsigned tx this method uses the empty UINT8ARRAY values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): AccessListEIP2930ValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.chainId),\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.accessList,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the EIP-2930 transaction.\n\t *\n\t * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n\t * signatureYParity (v), signatureR (r), signatureS (s)])`\n\t *\n\t * Note that in contrast to the legacy tx serialization format this is not\n\t * valid RLP any more due to the raw tx type preceding and concatenated to\n\t * the RLP encoding of the values.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\tconst base = this.raw();\n\t\treturn uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t}\n\n\t/**\n\t * Returns the serialized unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: in contrast to the legacy tx the raw message format is already\n\t * serialized and doesn't need to be RLP encoded any more.\n\t *\n\t * ```javascript\n\t * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage = true): Uint8Array {\n\t\tconst base = this.raw().slice(0, 8);\n\t\tconst message = uint8ArrayConcat(TRANSACTION_TYPE_UINT8ARRAY, RLP.encode(base));\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(message);\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(this.serialize());\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(this.serialize());\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature(): Uint8Array {\n\t\treturn this.getMessageToSign();\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call this method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv! + BigInt(27), // Recover the 27 which was stripped from ecsign\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\tpublic _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn AccessListEIP2930Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tchainId: this.chainId,\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tgasPrice: this.gasPrice,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\taccessList: this.accessList,\n\t\t\t\tv: v - BigInt(27), // This looks extremely hacky: /util actually adds 27 to the value, the recovery bit is either 0 or 1.\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction\n\t */\n\tpublic toJSON(): JsonTx {\n\t\tconst accessListJSON = getAccessListJSON(this.accessList);\n\n\t\treturn {\n\t\t\tchainId: bigIntToHex(this.chainId),\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tgasPrice: bigIntToHex(this.gasPrice),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\taccessList: accessListJSON,\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\t// Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n\t\terrorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6240, "column": 0}, "map": {"version":3,"file":"legacyTransaction.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/legacyTransaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { RLP } from '@ethereumjs/rlp';\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToHex } from 'web3-utils';\nimport { validateNoLeadingZeroes } from 'web3-validator';\nimport {\n\tbigIntToHex,\n\tbigIntToUnpaddedUint8Array,\n\tecrecover,\n\ttoUint8Array,\n\tuint8ArrayToBigInt,\n\tunpadUint8Array,\n} from '../common/utils.js';\nimport { MAX_INTEGER } from './constants.js';\n\nimport { BaseTransaction } from './baseTransaction.js';\n\nimport type { Common } from '../common/common.js';\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types.js';\nimport { Capability } from './types.js';\n\nconst TRANSACTION_TYPE = 0;\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n\tconst v = Number(_v);\n\tconst chainIdDoubled = Number(chainId) * 2;\n\treturn v === chainIdDoubled + 35 || v === chainIdDoubled + 36;\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\n// eslint-disable-next-line no-use-before-define\nexport class Transaction extends BaseTransaction<Transaction> {\n\tpublic readonly gasPrice: bigint;\n\n\tpublic readonly common: Common;\n\n\t/**\n\t * Instantiate a transaction from a data dictionary.\n\t *\n\t * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n\t *\n\t * Notes:\n\t * - All parameters are optional and have some basic default values\n\t */\n\tpublic static fromTxData(txData: TxData, opts: TxOptions = {}) {\n\t\treturn new Transaction(txData, opts);\n\t}\n\n\t/**\n\t * Instantiate a transaction from the serialized tx.\n\t *\n\t * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n\t */\n\tpublic static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n\t\tconst values = RLP.decode(serialized);\n\n\t\tif (!Array.isArray(values)) {\n\t\t\tthrow new Error('Invalid serialized tx input. Must be array');\n\t\t}\n\n\t\treturn this.fromValuesArray(values as Uint8Array[], opts);\n\t}\n\n\t/**\n\t * Create a transaction from a values array.\n\t *\n\t * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n\t */\n\tpublic static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n\t\t// If length is not 6, it has length 9. If v/r/s are empty Uint8Array, it is still an unsigned transaction\n\t\t// This happens if you get the RLP data from `raw()`\n\t\tif (values.length !== 6 && values.length !== 9) {\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).',\n\t\t\t);\n\t\t}\n\n\t\tconst [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values;\n\n\t\tvalidateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s });\n\n\t\treturn new Transaction(\n\t\t\t{\n\t\t\t\tnonce,\n\t\t\t\tgasPrice,\n\t\t\t\tgasLimit,\n\t\t\t\tto,\n\t\t\t\tvalue,\n\t\t\t\tdata,\n\t\t\t\tv,\n\t\t\t\tr,\n\t\t\t\ts,\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * This constructor takes the values, validates them, assigns them and freezes the object.\n\t *\n\t * It is not recommended to use this constructor directly. Instead use\n\t * the static factory methods to assist in creating a Transaction object from\n\t * varying data types.\n\t */\n\tpublic constructor(txData: TxData, opts: TxOptions = {}) {\n\t\tsuper({ ...txData, type: TRANSACTION_TYPE }, opts);\n\n\t\tthis.common = this._validateTxV(this.v, opts.common);\n\n\t\tthis.gasPrice = uint8ArrayToBigInt(\n\t\t\ttoUint8Array(txData.gasPrice === '' ? '0x' : txData.gasPrice),\n\t\t);\n\n\t\tif (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n\t\t\tconst msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\tthis._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice });\n\t\tBaseTransaction._validateNotArray(txData);\n\n\t\tif (this.common.gteHardfork('spuriousDragon')) {\n\t\t\tif (!this.isSigned()) {\n\t\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\t} else {\n\t\t\t\t// EIP155 spec:\n\t\t\t\t// If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n\t\t\t\t// then when computing the hash of a transaction for purposes of signing or recovering\n\t\t\t\t// instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n\t\t\t\t// hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n\t\t\t\t// v and chain ID meet EIP-155 conditions\n\t\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\t\tif (meetsEIP155(this.v!, this.common.chainId())) {\n\t\t\t\t\tthis.activeCapabilities.push(Capability.EIP155ReplayProtection);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst freeze = opts?.freeze ?? true;\n\t\tif (freeze) {\n\t\t\tObject.freeze(this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a Uint8Array Array of the raw Uint8Arrays of the legacy transaction, in order.\n\t *\n\t * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n\t *\n\t * For legacy txs this is also the correct format to add transactions\n\t * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n\t * for typed txs).\n\t *\n\t * For an unsigned tx this method returns the empty Uint8Array values\n\t * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n\t * representation have a look at {@link Transaction.getMessageToSign}.\n\t */\n\tpublic raw(): TxValuesArray {\n\t\treturn [\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t\tthis.v !== undefined ? bigIntToUnpaddedUint8Array(this.v) : Uint8Array.from([]),\n\t\t\tthis.r !== undefined ? bigIntToUnpaddedUint8Array(this.r) : Uint8Array.from([]),\n\t\t\tthis.s !== undefined ? bigIntToUnpaddedUint8Array(this.s) : Uint8Array.from([]),\n\t\t];\n\t}\n\n\t/**\n\t * Returns the serialized encoding of the legacy transaction.\n\t *\n\t * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n\t *\n\t * For an unsigned tx this method uses the empty Uint8Array values for the\n\t * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n\t * representation for external signing use {@link Transaction.getMessageToSign}.\n\t */\n\tpublic serialize(): Uint8Array {\n\t\treturn RLP.encode(this.raw());\n\t}\n\n\tprivate _getMessageToSign() {\n\t\tconst values = [\n\t\t\tbigIntToUnpaddedUint8Array(this.nonce),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasPrice),\n\t\t\tbigIntToUnpaddedUint8Array(this.gasLimit),\n\t\t\tthis.to !== undefined ? this.to.buf : Uint8Array.from([]),\n\t\t\tbigIntToUnpaddedUint8Array(this.value),\n\t\t\tthis.data,\n\t\t];\n\n\t\tif (this.supports(Capability.EIP155ReplayProtection)) {\n\t\t\tvalues.push(toUint8Array(this.common.chainId()));\n\t\t\tvalues.push(unpadUint8Array(toUint8Array(0)));\n\t\t\tvalues.push(unpadUint8Array(toUint8Array(0)));\n\t\t}\n\n\t\treturn values;\n\t}\n\n\t/**\n\t * Returns the unsigned tx (hashed or raw), which can be used\n\t * to sign the transaction (e.g. for sending to a hardware wallet).\n\t *\n\t * Note: the raw message message format for the legacy tx is not RLP encoded\n\t * and you might need to do yourself with:\n\t *\n\t * ```javascript\n\t * import { bufArrToArr } from '../util'\n\t * import { RLP } from '../rlp'\n\t * const message = tx.getMessageToSign(false)\n\t * const serializedMessage = RLP.encode(message) // use this for the HW wallet input\n\t * ```\n\t *\n\t * @param hashMessage - Return hashed message if set to true (default: true)\n\t */\n\tpublic getMessageToSign(hashMessage: false): Uint8Array[];\n\tpublic getMessageToSign(hashMessage?: true): Uint8Array;\n\tpublic getMessageToSign(hashMessage = true) {\n\t\tconst message = this._getMessageToSign();\n\t\tif (hashMessage) {\n\t\t\treturn keccak256(RLP.encode(message));\n\t\t}\n\t\treturn message;\n\t}\n\n\t/**\n\t * The amount of gas paid for the data in this tx\n\t */\n\tpublic getDataFee(): bigint {\n\t\tif (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n\t\t\treturn this.cache.dataFee.value;\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tthis.cache.dataFee = {\n\t\t\t\tvalue: super.getDataFee(),\n\t\t\t\thardfork: this.common.hardfork(),\n\t\t\t};\n\t\t}\n\n\t\treturn super.getDataFee();\n\t}\n\n\t/**\n\t * The up front amount that an account must have for this transaction to be valid\n\t */\n\tpublic getUpfrontCost(): bigint {\n\t\treturn this.gasLimit * this.gasPrice + this.value;\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash of the serialized tx.\n\t *\n\t * This method can only be used for signed txs (it throws otherwise).\n\t * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n\t */\n\tpublic hash(): Uint8Array {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif (Object.isFrozen(this)) {\n\t\t\tif (!this.cache.hash) {\n\t\t\t\tthis.cache.hash = keccak256(RLP.encode(this.raw()));\n\t\t\t}\n\t\t\treturn this.cache.hash;\n\t\t}\n\n\t\treturn keccak256(RLP.encode(this.raw()));\n\t}\n\n\t/**\n\t * Computes a sha3-256 hash which can be used to verify the signature\n\t */\n\tpublic getMessageToVerifySignature() {\n\t\tif (!this.isSigned()) {\n\t\t\tconst msg = this._errorMsg('This transaction is not signed');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\tconst message = this._getMessageToSign();\n\t\treturn keccak256(RLP.encode(message));\n\t}\n\n\t/**\n\t * Returns the public key of the sender\n\t */\n\tpublic getSenderPublicKey(): Uint8Array {\n\t\tconst msgHash = this.getMessageToVerifySignature();\n\n\t\tconst { v, r, s } = this;\n\n\t\tthis._validateHighS();\n\n\t\ttry {\n\t\t\treturn ecrecover(\n\t\t\t\tmsgHash,\n\t\t\t\tv!,\n\t\t\t\tbigIntToUnpaddedUint8Array(r!),\n\t\t\t\tbigIntToUnpaddedUint8Array(s!),\n\t\t\t\tthis.supports(Capability.EIP155ReplayProtection)\n\t\t\t\t\t? this.common.chainId()\n\t\t\t\t\t: undefined,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tconst msg = this._errorMsg('Invalid Signature');\n\t\t\tthrow new Error(msg);\n\t\t}\n\t}\n\n\t/**\n\t * Process the v, r, s values from the `sign` method of the base transaction.\n\t */\n\tprotected _processSignature(_v: bigint, r: Uint8Array, s: Uint8Array) {\n\t\tlet v = _v;\n\t\tif (this.supports(Capability.EIP155ReplayProtection)) {\n\t\t\tv += this.common.chainId() * BigInt(2) + BigInt(8);\n\t\t}\n\n\t\tconst opts = { ...this.txOptions, common: this.common };\n\n\t\treturn Transaction.fromTxData(\n\t\t\t{\n\t\t\t\tnonce: this.nonce,\n\t\t\t\tgasPrice: this.gasPrice,\n\t\t\t\tgasLimit: this.gasLimit,\n\t\t\t\tto: this.to,\n\t\t\t\tvalue: this.value,\n\t\t\t\tdata: this.data,\n\t\t\t\tv,\n\t\t\t\tr: uint8ArrayToBigInt(r),\n\t\t\t\ts: uint8ArrayToBigInt(s),\n\t\t\t},\n\t\t\topts,\n\t\t);\n\t}\n\n\t/**\n\t * Returns an object with the JSON representation of the transaction.\n\t */\n\tpublic toJSON(): JsonTx {\n\t\treturn {\n\t\t\tnonce: bigIntToHex(this.nonce),\n\t\t\tgasPrice: bigIntToHex(this.gasPrice),\n\t\t\tgasLimit: bigIntToHex(this.gasLimit),\n\t\t\tto: this.to !== undefined ? this.to.toString() : undefined,\n\t\t\tvalue: bigIntToHex(this.value),\n\t\t\tdata: bytesToHex(this.data),\n\t\t\tv: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n\t\t\tr: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n\t\t\ts: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n\t\t};\n\t}\n\n\t/**\n\t * Validates tx's `v` value\n\t */\n\tprivate _validateTxV(_v?: bigint, common?: Common): Common {\n\t\tlet chainIdBigInt;\n\t\tconst v = _v !== undefined ? Number(_v) : undefined;\n\t\t// Check for valid v values in the scope of a signed legacy tx\n\t\tif (v !== undefined) {\n\t\t\t// v is 1. not matching the EIP-155 chainId included case and...\n\t\t\t// v is 2. not matching the classic v=27 or v=28 case\n\t\t\tif (v < 37 && v !== 27 && v !== 28) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// No unsigned tx and EIP-155 activated and chain ID included\n\t\tif (\n\t\t\tv !== undefined &&\n\t\t\tv !== 0 &&\n\t\t\t(!common || common.gteHardfork('spuriousDragon')) &&\n\t\t\tv !== 27 &&\n\t\t\tv !== 28\n\t\t) {\n\t\t\tif (common) {\n\t\t\t\tif (!meetsEIP155(BigInt(v), common.chainId())) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Derive the original chain ID\n\t\t\t\tlet numSub;\n\t\t\t\tif ((v - 35) % 2 === 0) {\n\t\t\t\t\tnumSub = 35;\n\t\t\t\t} else {\n\t\t\t\t\tnumSub = 36;\n\t\t\t\t}\n\t\t\t\t// Use derived chain ID to create a proper Common\n\t\t\t\tchainIdBigInt = BigInt(v - numSub) / BigInt(2);\n\t\t\t}\n\t\t}\n\t\treturn this._getCommon(common, chainIdBigInt);\n\t}\n\n\t/**\n\t * Return a compact error string representation of the object\n\t */\n\tpublic errorStr() {\n\t\tlet errorStr = this._getSharedErrorPostfix();\n\t\terrorStr += ` gasPrice=${this.gasPrice}`;\n\t\treturn errorStr;\n\t}\n\n\t/**\n\t * Internal helper function to create an annotated error message\n\t *\n\t * @param msg Base error message\n\t * @hidden\n\t */\n\tprotected _errorMsg(msg: string) {\n\t\treturn `${msg} (${this.errorStr()})`;\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6589, "column": 0}, "map": {"version":3,"file":"transactionFactory.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/transactionFactory.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Numbers } from 'web3-types';\nimport { isUint8Array } from 'web3-utils';\nimport { toUint8Array, uint8ArrayToBigInt } from '../common/utils.js';\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nimport { Transaction } from './legacyTransaction.js';\nimport type { TypedTransaction } from '../types.js';\n\nimport type {\n\tAccessListEIP2930TxData,\n\tFeeMarketEIP1559TxData,\n\tTxData,\n\tTxOptions,\n} from './types.js';\nimport { BaseTransaction } from './baseTransaction.js';\n\nconst extraTxTypes: Map<Numbers, typeof BaseTransaction<unknown>> = new Map();\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class TransactionFactory {\n\t// It is not possible to instantiate a TransactionFactory object.\n\t// eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n\tprivate constructor() {}\n\n\tpublic static typeToInt(txType: Numbers) {\n\t\treturn Number(uint8ArrayToBigInt(toUint8Array(txType)));\n\t}\n\n\tpublic static registerTransactionType<NewTxTypeClass extends typeof BaseTransaction<unknown>>(\n\t\ttype: Numbers,\n\t\ttxClass: NewTxTypeClass,\n\t) {\n\t\tconst txType = TransactionFactory.typeToInt(type);\n\t\textraTxTypes.set(txType, txClass);\n\t}\n\n\t/**\n\t * Create a transaction from a `txData` object\n\t *\n\t * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n\t * @param txOptions - Options to pass on to the constructor of the transaction\n\t */\n\tpublic static fromTxData(\n\t\ttxData: TxData | TypedTransaction,\n\t\ttxOptions: TxOptions = {},\n\t): TypedTransaction {\n\t\tif (!('type' in txData) || txData.type === undefined) {\n\t\t\t// Assume legacy transaction\n\t\t\treturn Transaction.fromTxData(txData as TxData, txOptions);\n\t\t}\n\t\tconst txType = TransactionFactory.typeToInt(txData.type);\n\t\tif (txType === 0) {\n\t\t\treturn Transaction.fromTxData(txData as TxData, txOptions);\n\t\t}\n\t\tif (txType === 1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\treturn AccessListEIP2930Transaction.fromTxData(\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\t\t<AccessListEIP2930TxData>txData,\n\t\t\t\ttxOptions,\n\t\t\t);\n\t\t}\n\t\tif (txType === 2) {\n\t\t\treturn FeeMarketEIP1559Transaction.fromTxData(\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\t\t\t\t<FeeMarketEIP1559TxData>txData,\n\t\t\t\ttxOptions,\n\t\t\t);\n\t\t}\n\t\tconst ExtraTransaction = extraTxTypes.get(txType);\n\t\tif (ExtraTransaction?.fromTxData) {\n\t\t\treturn ExtraTransaction.fromTxData(txData, txOptions) as TypedTransaction;\n\t\t}\n\n\t\tthrow new Error(`Tx instantiation with type ${txType} not supported`);\n\t}\n\n\t/**\n\t * This method tries to decode serialized data.\n\t *\n\t * @param data - The data Uint8Array\n\t * @param txOptions - The transaction options\n\t */\n\tpublic static fromSerializedData(\n\t\tdata: Uint8Array,\n\t\ttxOptions: TxOptions = {},\n\t): TypedTransaction {\n\t\tif (data[0] <= 0x7f) {\n\t\t\t// Determine the type.\n\t\t\tswitch (data[0]) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n\t\t\t\tdefault: {\n\t\t\t\t\tconst ExtraTransaction = extraTxTypes.get(Number(data[0]));\n\t\t\t\t\tif (ExtraTransaction?.fromSerializedTx) {\n\t\t\t\t\t\treturn ExtraTransaction.fromSerializedTx(\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\ttxOptions,\n\t\t\t\t\t\t) as TypedTransaction;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(`TypedTransaction with ID ${data[0]} unknown`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn Transaction.fromSerializedTx(data, txOptions);\n\t\t}\n\t}\n\n\t/**\n\t * When decoding a BlockBody, in the transactions field, a field is either:\n\t * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n\t * A Uint8Array[] (Legacy Transaction)\n\t * This method returns the right transaction.\n\t *\n\t * @param data - A Uint8Array or Uint8Array[]\n\t * @param txOptions - The transaction options\n\t */\n\tpublic static fromBlockBodyData(data: Uint8Array | Uint8Array[], txOptions: TxOptions = {}) {\n\t\tif (isUint8Array(data)) {\n\t\t\treturn this.fromSerializedData(data, txOptions);\n\t\t}\n\t\tif (Array.isArray(data)) {\n\t\t\t// It is a legacy transaction\n\t\t\treturn Transaction.fromValuesArray(data, txOptions);\n\t\t}\n\t\tthrow new Error('Cannot decode transaction: unknown type input');\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6710, "column": 0}, "map": {"version":3,"file":"account.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/account.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3 accounts package contains functions to generate Ethereum accounts and sign transactions & data.\n *\n * For using accounts functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Accounts functions will be available as mentioned in following snippet.\n * ```ts\n * import {Web3} from 'web3';\n *\n * const web3 = new Web3();\n * const account = web3.eth.accounts.create();\n * const result = web3.eth.accounts.hashMessage(\"Test Message\");\n *\n * ```\n *\n * For using individual package install `web3-eth-accounts` package using `npm i web3-eth-accounts` or `yarn add web3-eth-accounts` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import {create,hashMessage} from 'web3-eth-accounts';\n *\n * const account = create();\n * const result = hashMessage(\"Test Message\");\n *\n * ```\n * @module Accounts\n *\n */\n\nimport {\n\tdecrypt as createDecipheriv,\n\tencrypt as createCipheriv,\n} from 'ethereum-cryptography/aes.js';\nimport { pbkdf2Sync } from 'ethereum-cryptography/pbkdf2.js';\nimport { scryptSync } from 'ethereum-cryptography/scrypt.js';\nimport {\n\tInvalidKdfError,\n\tInvalidPasswordError,\n\tInvalidPrivateKeyError,\n\tInvalidSignatureError,\n\tIVLengthError,\n\tKeyDerivationError,\n\tKeyStoreVersionError,\n\tPBKDF2IterationsError,\n\tPrivateKeyLengthError,\n\tTransactionSigningError,\n\tUndefinedRawTransactionError,\n} from 'web3-errors';\nimport {\n\tAddress,\n\tBytes,\n\tCipherOptions,\n\tHexString,\n\tKeyStore,\n\tPBKDF2SHA256Params,\n\tScryptParams,\n\tSignatureObject,\n\tSignResult,\n\tSignTransactionResult,\n\tTransaction,\n} from 'web3-types';\nimport {\n\tbytesToUint8Array,\n\tbytesToHex,\n\tfromUtf8,\n\thexToBytes,\n\tisUint8Array,\n\tnumberToHex,\n\trandomBytes,\n\tsha3Raw,\n\ttoChecksumAddress,\n\tuint8ArrayConcat,\n\tutf8ToHex,\n\tuuidV4,\n} from 'web3-utils';\n\nimport { isHexStrict, isNullish, isString, validator } from 'web3-validator';\nimport { secp256k1 } from './tx/constants.js';\nimport { keyStoreSchema } from './schemas.js';\nimport { TransactionFactory } from './tx/transactionFactory.js';\nimport type { TypedTransaction, Web3Account } from './types.js';\n\n/**\n * Get the private key Uint8Array after the validation.\n * Note: This function is not exported through main web3 package, so for using it directly import from accounts package.\n * @param data - Private key\n * @param ignoreLength - Optional, ignore length check during validation\n * @returns The Uint8Array private key\n *\n * ```ts\n * parseAndValidatePrivateKey(\"0x08c673022000ece7964ea4db2d9369c50442b2869cbd8fc21baaca59e18f642c\")\n *\n * > Uint8Array(32) [\n * 186,  26, 143, 168, 235, 179,  90,  75,\n * 101,  63,  84, 221, 152, 150,  30, 203,\n *   8, 113,  94, 226,  53, 213, 216,   5,\n * 194, 159,  17,  53, 219,  97, 121, 248\n * ]\n *\n * ```\n */\nexport const parseAndValidatePrivateKey = (data: Bytes, ignoreLength?: boolean): Uint8Array => {\n\tlet privateKeyUint8Array: Uint8Array;\n\n\t// To avoid the case of 1 character less in a hex string which is prefixed with '0' by using 'bytesToUint8Array'\n\tif (!ignoreLength && typeof data === 'string' && isHexStrict(data) && data.length !== 66) {\n\t\tthrow new PrivateKeyLengthError();\n\t}\n\n\ttry {\n\t\tprivateKeyUint8Array = isUint8Array(data) ? data : bytesToUint8Array(data);\n\t} catch {\n\t\tthrow new InvalidPrivateKeyError();\n\t}\n\n\tif (!ignoreLength && privateKeyUint8Array.byteLength !== 32) {\n\t\tthrow new PrivateKeyLengthError();\n\t}\n\n\treturn privateKeyUint8Array;\n};\n\n/**\n *\n * Hashes the given message. The data will be `UTF-8 HEX` decoded and enveloped as follows:\n * `\"\\x19Ethereum Signed Message:\\n\" + message.length + message` and hashed using keccak256.\n *\n * @param message - A message to hash, if its HEX it will be UTF8 decoded.\n * @param skipPrefix - (default: false) If true, the message will be not prefixed with \"\\x19Ethereum Signed Message:\\n\" + message.length\n * @returns The hashed message\n *\n * ```ts\n * web3.eth.accounts.hashMessage(\"Hello world\")\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(web3.utils.utf8ToHex(\"Hello world\")) // Will be hex decoded in hashMessage\n *\n * > \"0x8144a6fa26be252b86456491fbcd43c1de7e022241845ffea1c3df066f7cfede\"\n *\n * web3.eth.accounts.hashMessage(\"Hello world\", true)\n *\n * > \"0xed6c11b0b5b808960df26f5bfc471d04c1995b0ffd2055925ad1be28d6baadfd\"\n * ```\n */\nexport const hashMessage = (message: string, skipPrefix = false): string => {\n\tconst messageHex = isHexStrict(message) ? message : utf8ToHex(message);\n\n\tconst messageBytes = hexToBytes(messageHex);\n\n\tconst preamble = hexToBytes(\n\t\tfromUtf8(`\\x19Ethereum Signed Message:\\n${messageBytes.byteLength}`),\n\t);\n\n\tconst ethMessage = skipPrefix ? messageBytes : uint8ArrayConcat(preamble, messageBytes);\n\n\treturn sha3Raw(ethMessage); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n};\n\n/**\n * Takes a hash of a message and a private key, signs the message using the SECP256k1 elliptic curve algorithm, and returns the signature components.\n * @param hash - The hash of the message to be signed, represented as a hexadecimal string.\n * @param privateKey - The private key used to sign the message, represented as a byte array.\n * @returns - The signature Object containing the message, messageHash, signature r, s, v\n */\nexport const signMessageWithPrivateKey = (hash: HexString, privateKey: Bytes): SignResult => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\tconst signature = secp256k1.sign(hash.substring(2), privateKeyUint8Array);\n\tconst signatureBytes = signature.toCompactRawBytes();\n\tconst r = signature.r.toString(16).padStart(64, '0');\n\tconst s = signature.s.toString(16).padStart(64, '0');\n\tconst v = signature.recovery! + 27;\n\n\treturn {\n\t\tmessageHash: hash,\n\t\tv: numberToHex(v),\n\t\tr: `0x${r}`,\n\t\ts: `0x${s}`,\n\t\tsignature: `${bytesToHex(signatureBytes)}${v.toString(16)}`,\n\t};\n};\n/**\n * Signs arbitrary data with a given private key.\n * :::info\n * The value passed as the data parameter will be UTF-8 HEX decoded and wrapped as follows: \"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message\n * :::\n\n * @param data - The data to sign\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.sign('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n * message: 'Some data',\n * messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n * v: '0x1c',\n * r: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd',\n * s: '0x6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a029',\n * signature: '0xb91467e570a6466aa9e9876cbcd013baba02900b8979d43fe208a4a4f339f5fd6007e74cd82e037b800186422fc2da167c747ef045e5d18a5f5d4300f8e1a0291c'\n * }\n * ```\n */\nexport const sign = (data: string, privateKey: Bytes): SignResult => {\n\tconst hash = hashMessage(data);\n\n\tconst { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n\n\treturn {\n\t\tmessage: data,\n\t\tmessageHash,\n\t\tv,\n\t\tr,\n\t\ts,\n\t\tsignature,\n\t};\n};\n\n/**\n * Signs raw data with a given private key without adding the Ethereum-specific prefix.\n *\n * @param data - The raw data to sign. If it's a hex string, it will be used as-is. Otherwise, it will be UTF-8 encoded.\n * @param privateKey - The 32 byte private key to sign with\n * @returns The signature Object containing the message, messageHash, signature r, s, v\n *\n * ```ts\n * web3.eth.accounts.signRaw('Some data', '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n * > {\n *   message: 'Some data',\n *   messageHash: '0x43a26051362b8040b289abe93334a5e3662751aa691185ae9e9a2e1e0c169350',\n *   v: '0x1b',\n *   r: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4',\n *   s: '0x334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c',\n *   signature: '0x93da7e2ddd6b2ff1f5af0c752f052ed0d7d5bff19257db547a69cd9a879b37d4334485e42b33815fd2cf8a245a5393b282214060844a9681495df2257140e75c1b'\n * }\n * ```\n */\nexport const signRaw = (data: string, privateKey: Bytes): SignResult => {\n\t// Hash the message without the Ethereum-specific prefix\n\tconst hash = hashMessage(data, true);\n\n\t// Sign the hash with the private key\n\tconst { messageHash, v, r, s, signature } = signMessageWithPrivateKey(hash, privateKey);\n\n\treturn {\n\t\tmessage: data,\n\t\tmessageHash,\n\t\tv,\n\t\tr,\n\t\ts,\n\t\tsignature,\n\t};\n};\n\n/**\n * Signs an Ethereum transaction with a given private key.\n *\n * @param transaction - The transaction, must be a legacy, EIP2930 or EIP 1559 transaction type\n * @param privateKey -  The private key to import. This is 32 bytes of random data.\n * @returns A signTransactionResult object that contains message hash, r, s, v, transaction hash and raw transaction.\n *\n * This function is not stateful here. We need network access to get the account `nonce` and `chainId` to sign the transaction.\n * This function will rely on user to provide the full transaction to be signed. If you want to sign a partial transaction object\n * Use {@link Web3.eth.accounts.sign} instead.\n *\n * Signing a legacy transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0x118C2E5F57FD62C2B5b46a5ae9216F4FF4011a07',\n *\tvalue: '0x186A0',\n *\tgasLimit: '0x520812',\n *\tgasPrice: '0x09184e72a000',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0 }),\n * '0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318')\n *\n * > {\n * messageHash: '0x28b7b75f7ba48d588a902c1ff4d5d13cc0ca9ac0aaa39562368146923fb853bf',\n * v: '0x25',\n * r: '0x601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5',\n * s: '0x690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * rawTransaction: '0xf869808609184e72a0008352081294118c2e5f57fd62c2b5b46a5ae9216f4ff4011a07830186a08025a00601b0017b0e20dd0eeda4b895fbc1a9e8968990953482214f880bae593e71b5a0690d984493560552e3ebdcc19a65b9c301ea9ddc82d3ab8cfde60485fd5722ce',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * ```\n *\n * Signing an eip 1559 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction({\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tmaxPriorityFeePerGas: '0x3B9ACA00',\n *\tmaxFeePerGas: '0xB2D05E00',\n *\tgasLimit: '0x6A4012',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\tchainId: 1,\n *\tnonce: 0}),\n * \"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n * > {\n *  messageHash: '0x5744f24d5f0aff6c70487c8e85adf07d8564e50b08558788f00479611d7bae5f',\n * v: '0x25',\n * r: '0x78a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347',\n * s: '0x9cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * rawTransaction: '0xf8638080836a401294f0109fc8df283027b6285cc889f5aa624eac1f55830186a08025a078a5a6b2876c3985f90f82073d18d57ac299b608cc76a4ba697b8bb085048347a009cfcb40cc7d505ed17ff2d3337b51b066648f10c6b7e746117de69b2eb6358d',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n *\n * Signing an eip 2930 transaction\n * ```ts\n * import {signTransaction, Transaction} from 'web3-eth-accounts';\n *\n * signTransaction(new Transaction ({\n *\tchainId: 1,\n *\tnonce: 0,\n *\tgasPrice: '0x09184e72a000',\n *\tgasLimit: '0x2710321',\n *\tto: '0xF0109fC8DF283027b6285cc889F5aA624EaC1F55',\n *\tvalue: '0x186A0',\n *\tdata: '',\n *\taccessList: [\n *\t\t{\n *\t\t\taddress: '0x0000000000000000000000000000000000000101',\n *\t\t\tstorageKeys: [\n *\t\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n *\t\t\t\t'0x00000000000000000000000000000000000000000000000000000000000060a7',\n *\t\t\t],\n *\t\t},\n *\t],\n * }),\"0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318\")\n *\n * > {\n * messageHash: '0xc55ea24bdb4c379550a7c9a6818ac39ca33e75bc78ddb862bd82c31cc1c7a073',\n * v: '0x26',\n * r: '0x27344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098e',\n * s: '0x519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * rawTransaction: '0xf86a808609184e72a000840271032194f0109fc8df283027b6285cc889f5aa624eac1f55830186a08026a027344e77871c8b2068bc998bf28e0b5f9920867a69c455b2ed0c1c150fec098ea0519f0130a1d662841d4a28082e9c9bb0a15e0e59bb46cfc39a52f0e285dec6b9',\n * transactionHash: '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n * }\n * ```\n */\nexport const signTransaction = async (\n\ttransaction: TypedTransaction,\n\tprivateKey: HexString,\n\t// To make it compatible with rest of the API, have to keep it async\n\t// eslint-disable-next-line @typescript-eslint/require-await\n): Promise<SignTransactionResult> => {\n\tconst signedTx = transaction.sign(hexToBytes(privateKey));\n\tif (isNullish(signedTx.v) || isNullish(signedTx.r) || isNullish(signedTx.s))\n\t\tthrow new TransactionSigningError('Signer Error');\n\n\tconst validationErrors = signedTx.validate(true);\n\n\tif (validationErrors.length > 0) {\n\t\tlet errorString = 'Signer Error ';\n\t\tfor (const validationError of validationErrors) {\n\t\t\terrorString += `${errorString} ${validationError}.`;\n\t\t}\n\t\tthrow new TransactionSigningError(errorString);\n\t}\n\n\tconst rawTx = bytesToHex(signedTx.serialize());\n\tconst txHash = sha3Raw(rawTx); // using keccak in web3-utils.sha3Raw instead of SHA3 (NIST Standard) as both are different\n\n\treturn {\n\t\tmessageHash: bytesToHex(signedTx.getMessageToSign(true)),\n\t\tv: `0x${signedTx.v.toString(16)}`,\n\t\tr: `0x${signedTx.r.toString(16).padStart(64, '0')}`,\n\t\ts: `0x${signedTx.s.toString(16).padStart(64, '0')}`,\n\t\trawTransaction: rawTx,\n\t\ttransactionHash: bytesToHex(txHash),\n\t};\n};\n\n/**\n * Recovers the Ethereum address which was used to sign the given RLP encoded transaction.\n *\n * @param rawTransaction - The hex string having RLP encoded transaction\n * @returns The Ethereum address used to sign this transaction\n * ```ts\n * web3.eth.accounts.recoverTransaction('0xf869808504e3b29200831e848094f0109fc8df283027b6285cc889f5aa624eac1f55843b9aca008025a0c9cf86333bcb065d140032ecaab5d9281bde80f21b9687b3e94161de42d51895a0727a108a0b8d101465414033c3f705a9c7b826e596766046ee1183dbc8aeaa68');\n * > \"0x2c7536E3605D9C16a7a3D7b1898e529396a65c23\"\n * ```\n */\nexport const recoverTransaction = (rawTransaction: HexString): Address => {\n\tif (isNullish(rawTransaction)) throw new UndefinedRawTransactionError();\n\n\tconst tx = TransactionFactory.fromSerializedData(hexToBytes(rawTransaction));\n\n\treturn toChecksumAddress(tx.getSenderAddress().toString());\n};\n\n/**\n * Recovers the Ethereum address which was used to sign the given data\n *\n * @param data - Either a signed message, hash, or the {@link signatureObject}\n * @param signature - The raw RLP encoded signature\n * @param signatureOrV - signature or V\n * @param prefixedOrR - prefixed or R\n * @param s - S value in signature\n * @param prefixed - (default: false) If the last parameter is true, the given message will NOT automatically be prefixed with `\"\\\\x19Ethereum Signed Message:\\\\n\" + message.length + message`, and assumed to be already prefixed and hashed.\n * @returns The Ethereum address used to sign this data\n *\n * ```ts\n * const data = 'Some data';\n * const sigObj = web3.eth.accounts.sign(data, '0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728')\n *\n * > {\n *   message: 'Some data',\n *   messageHash: '0x1da44b586eb0729ff70a73c326926f6ed5a25f5b056e7f47fbc6e58d86871655',\n *   v: '0x1b',\n *   r: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f9',\n *   s: '0x53e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb150',\n *   signature: '0xa8037a6116c176a25e6fc224947fde9e79a2deaa0dd8b67b366fbdfdbffc01f953e41351267b20d4a89ebfe9c8f03c04de9b345add4a52f15bd026b63c8fb1501b'\n * }\n *\n * // now recover\n * web3.eth.accounts.recover(data, sigObj.v, sigObj.r, sigObj.s)\n *\n * > 0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\n * ```\n */\nexport const recover = (\n\tdata: string | SignatureObject,\n\tsignatureOrV?: string,\n\tprefixedOrR?: boolean | string,\n\ts?: string,\n\tprefixed?: boolean,\n): Address => {\n\tif (typeof data === 'object') {\n\t\tconst signatureStr = `${data.r}${data.s.slice(2)}${data.v.slice(2)}`;\n\t\treturn recover(data.messageHash, signatureStr, prefixedOrR);\n\t}\n\tif (typeof signatureOrV === 'string' && typeof prefixedOrR === 'string' && !isNullish(s)) {\n\t\tconst signatureStr = `${prefixedOrR}${s.slice(2)}${signatureOrV.slice(2)}`;\n\t\treturn recover(data, signatureStr, prefixed);\n\t}\n\n\tif (isNullish(signatureOrV)) throw new InvalidSignatureError('signature string undefined');\n\n\tconst V_INDEX = 130; // r = first 32 bytes, s = second 32 bytes, v = last byte of signature\n\tconst hashedMessage = prefixedOrR ? data : hashMessage(data);\n\n\tlet v = parseInt(signatureOrV.substring(V_INDEX), 16); // 0x + r + s + v\n\tif (v > 26) {\n\t\tv -= 27;\n\t}\n\n\tconst ecPublicKey = secp256k1.Signature.fromCompact(signatureOrV.slice(2, V_INDEX))\n\t\t.addRecoveryBit(v)\n\t\t.recoverPublicKey(hashedMessage.replace('0x', ''))\n\t\t.toRawBytes(false);\n\n\tconst publicHash = sha3Raw(ecPublicKey.subarray(1));\n\n\tconst address = toChecksumAddress(`0x${publicHash.slice(-40)}`);\n\n\treturn address;\n};\n\n/**\n * Get the ethereum Address from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns The Ethereum address\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToAddress(\"0xbe6383dad004f233317e46ddb46ad31b16064d14447a95cc1d8c8d4bc61c3728\")\n *\n * > \"0xEB014f8c8B418Db6b45774c326A0E64C78914dC0\"\n * ```\n */\nexport const privateKeyToAddress = (privateKey: Bytes): string => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// Get public key from private key in compressed format\n\tconst publicKey = secp256k1.getPublicKey(privateKeyUint8Array, false);\n\n\t// Uncompressed ECDSA public key contains the prefix `0x04` which is not used in the Ethereum public key\n\tconst publicKeyHash = sha3Raw(publicKey.slice(1));\n\n\t// The hash is returned as 256 bits (32 bytes) or 64 hex characters\n\t// To get the address, take the last 20 bytes of the public hash\n\tconst address = publicKeyHash.slice(-40);\n\n\treturn toChecksumAddress(`0x${address}`);\n};\n\n/**\n * Get the public key from a private key\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param isCompressed - if true, will generate a 33 byte compressed public key instead of a 65 byte public key\n * @returns The public key\n * @example\n * ```ts\n * web3.eth.accounts.privateKeyToPublicKey(\"0x1e046a882bb38236b646c9f135cf90ad90a140810f439875f2a6dd8e50fa261f\", true)\n *\n * > \"0x42beb65f179720abaa3ec9a70a539629cbbc5ec65bb57e7fc78977796837e537662dd17042e6449dc843c281067a4d6d8d1a1775a13c41901670d5de7ee6503a\" // uncompressed public key\n * ```\n */\nexport const privateKeyToPublicKey = (privateKey: Bytes, isCompressed: boolean): string => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// Get public key from private key in compressed format\n\treturn `0x${bytesToHex(secp256k1.getPublicKey(privateKeyUint8Array, isCompressed)).slice(4)}`; // 0x and removing compression byte\n};\n\n/**\n * encrypt a private key with a password, returns a V3 JSON Keystore\n *\n * Read more: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n *\n * @param privateKey - The private key to encrypt, 32 bytes.\n * @param password - The password used for encryption.\n * @param options - Options to configure to encrypt the keystore either scrypt or pbkdf2\n * @returns Returns a V3 JSON Keystore\n *\n * Encrypt using scrypt options:\n * ```ts\n *\n * web3.eth.accounts.encrypt(\n *    '0x67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n *    '123',\n *    {\n *        n: 8192,\n *\t    iv: web3.utils.hexToBytes('0xbfb43120ae00e9de110f8325143a2709'),\n *\t    salt: web3.utils.hexToBytes('0x210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'),\n *\t}).then(console.log)\n *\n * > {\n * version: 3,\n * id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n * address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n * crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *   cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *   cipher: 'aes-128-ctr',\n *   kdf: 'scrypt',\n *   kdfparams: {\n *     n: 8192,\n *     r: 8,\n *     p: 1,\n *     dklen: 32,\n *     salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *   },\n *   mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n * }\n *}\n *```\n *\n * Encrypting using pbkdf2 options:\n * ```ts\n * web3.eth.accounts.encrypt('0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n *'123',\n *{\n *\tiv: 'bfb43120ae00e9de110f8325143a2709',\n *\tsalt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *\tc: 262144,\n *\tkdf: 'pbkdf2',\n *}).then(console.log)\n *\n * >\n * {\n *   version: 3,\n *   id: '77381417-0973-4e4b-b590-8eb3ace0fe2d',\n *   address: 'b8ce9ab6943e0eced004cde8e3bbed6568b2fa01',\n *   crypto: {\n *     ciphertext: '76512156a34105fa6473ad040c666ae7b917d14c06543accc0d2dc28e6073b12',\n *     cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *     cipher: 'aes-128-ctr',\n *     kdf: 'pbkdf2',\n *     kdfparams: {\n *       dklen: 32,\n *       salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd',\n *       c: 262144,\n *       prf: 'hmac-sha256'\n *     },\n *   mac: '46eb4884e82dc43b5aa415faba53cc653b7038e9d61cc32fd643cf8c396189b7'\n *   }\n * }\n *```\n */\nexport const encrypt = async (\n\tprivateKey: Bytes,\n\tpassword: string | Uint8Array,\n\toptions?: CipherOptions,\n): Promise<KeyStore> => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey);\n\n\t// if given salt or iv is a string, convert it to a Uint8Array\n\tlet salt;\n\tif (options?.salt) {\n\t\tsalt = typeof options.salt === 'string' ? hexToBytes(options.salt) : options.salt;\n\t} else {\n\t\tsalt = randomBytes(32);\n\t}\n\n\tif (!(isString(password) || isUint8Array(password))) {\n\t\tthrow new InvalidPasswordError();\n\t}\n\n\tconst uint8ArrayPassword =\n\t\ttypeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n\n\tlet initializationVector;\n\tif (options?.iv) {\n\t\tinitializationVector = typeof options.iv === 'string' ? hexToBytes(options.iv) : options.iv;\n\t\tif (initializationVector.length !== 16) {\n\t\t\tthrow new IVLengthError();\n\t\t}\n\t} else {\n\t\tinitializationVector = randomBytes(16);\n\t}\n\n\tconst kdf = options?.kdf ?? 'scrypt';\n\n\tlet derivedKey;\n\tlet kdfparams: ScryptParams | PBKDF2SHA256Params;\n\n\t// derive key from key derivation function\n\tif (kdf === 'pbkdf2') {\n\t\tkdfparams = {\n\t\t\tdklen: options?.dklen ?? 32,\n\t\t\tsalt: bytesToHex(salt).replace('0x', ''),\n\t\t\tc: options?.c ?? 262144,\n\t\t\tprf: 'hmac-sha256',\n\t\t};\n\n\t\tif (kdfparams.c < 1000) {\n\t\t\t// error when c < 1000, pbkdf2 is less secure with less iterations\n\t\t\tthrow new PBKDF2IterationsError();\n\t\t}\n\t\tderivedKey = pbkdf2Sync(uint8ArrayPassword, salt, kdfparams.c, kdfparams.dklen, 'sha256');\n\t} else if (kdf === 'scrypt') {\n\t\tkdfparams = {\n\t\t\tn: options?.n ?? 8192,\n\t\t\tr: options?.r ?? 8,\n\t\t\tp: options?.p ?? 1,\n\t\t\tdklen: options?.dklen ?? 32,\n\t\t\tsalt: bytesToHex(salt).replace('0x', ''),\n\t\t};\n\t\tderivedKey = scryptSync(\n\t\t\tuint8ArrayPassword,\n\t\t\tsalt,\n\t\t\tkdfparams.n,\n\t\t\tkdfparams.p,\n\t\t\tkdfparams.r,\n\t\t\tkdfparams.dklen,\n\t\t);\n\t} else {\n\t\tthrow new InvalidKdfError();\n\t}\n\n\tconst cipher = await createCipheriv(\n\t\tprivateKeyUint8Array,\n\t\tderivedKey.slice(0, 16),\n\t\tinitializationVector,\n\t\t'aes-128-ctr',\n\t);\n\n\tconst ciphertext = bytesToHex(cipher).slice(2);\n\n\tconst mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), cipher)).replace('0x', '');\n\treturn {\n\t\tversion: 3,\n\t\tid: uuidV4(),\n\t\taddress: privateKeyToAddress(privateKeyUint8Array).toLowerCase().replace('0x', ''),\n\t\tcrypto: {\n\t\t\tciphertext,\n\t\t\tcipherparams: {\n\t\t\t\tiv: bytesToHex(initializationVector).replace('0x', ''),\n\t\t\t},\n\t\t\tcipher: 'aes-128-ctr',\n\t\t\tkdf,\n\t\t\tkdfparams,\n\t\t\tmac,\n\t\t},\n\t};\n};\n\n/**\n * Get an Account object from the privateKey\n *\n * @param privateKey - String or Uint8Array of 32 bytes\n * @param ignoreLength - if true, will not error check length\n * @returns A Web3Account object\n *\n * :::info\n * The `Web3Account.signTransaction` is not stateful if directly imported from accounts package and used. Network access is required to get the account `nonce` and `chainId` to sign the transaction, so use {@link Web3.eth.accounts.signTransaction} for signing transactions.\n * ::::\n *\n * ```ts\n * web3.eth.accounts.privateKeyToAccount(\"0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709\");\n *\n * >    {\n * \t\t\taddress: '0xb8CE9ab6943e0eCED004cDe8e3bBed6568B2Fa01',\n * \t\t\tprivateKey: '0x348ce564d427a3311b6536bbcff9390d69395b06ed6c486954e971d960fe8709',\n * \t\t\tsign,\n * \t\t\tsignTransaction,\n * \t\t\tencrypt,\n * \t}\n * ```\n */\nexport const privateKeyToAccount = (privateKey: Bytes, ignoreLength?: boolean): Web3Account => {\n\tconst privateKeyUint8Array = parseAndValidatePrivateKey(privateKey, ignoreLength);\n\n\treturn {\n\t\taddress: privateKeyToAddress(privateKeyUint8Array),\n\t\tprivateKey: bytesToHex(privateKeyUint8Array),\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\tsignTransaction: (_tx: Transaction) => {\n\t\t\tthrow new TransactionSigningError('Do not have network access to sign the transaction');\n\t\t},\n\t\tsign: (data: Record<string, unknown> | string) =>\n\t\t\tsign(typeof data === 'string' ? data : JSON.stringify(data), privateKeyUint8Array),\n\t\tencrypt: async (password: string, options?: Record<string, unknown>) =>\n\t\t\tencrypt(privateKeyUint8Array, password, options),\n\t};\n};\n\n/**\n *\n * Generates and returns a Web3Account object that includes the private and public key\n * For creation of private key, it uses an audited package ethereum-cryptography/secp256k1\n * that is cryptographically secure random number with certain characteristics.\n * Read more: https://www.npmjs.com/package/ethereum-cryptography#secp256k1-curve\n *\n * @returns A Web3Account object\n * ```ts\n * web3.eth.accounts.create();\n * {\n * address: '0xbD504f977021b5E5DdccD8741A368b147B3B38bB',\n * privateKey: '0x964ced1c69ad27a311c432fdc0d8211e987595f7eb34ab405a5f16bdc9563ec5',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const create = (): Web3Account => {\n\tconst privateKey = secp256k1.utils.randomPrivateKey();\n\n\treturn privateKeyToAccount(`${bytesToHex(privateKey)}`);\n};\n\n/**\n * Decrypts a v3 keystore JSON, and creates the account.\n *\n * @param keystore - the encrypted Keystore object or string to decrypt\n * @param password - The password that was used for encryption\n * @param nonStrict - if true and given a json string, the keystore will be parsed as lowercase.\n * @returns Returns the decrypted Web3Account object\n * Decrypting scrypt\n *\n * ```ts\n * web3.eth.accounts.decrypt({\n *   version: 3,\n *   id: 'c0cb0a94-4702-4492-b6e6-eb2ac404344a',\n *   address: 'cda9a91875fc35c8ac1320e098e584495d66e47c',\n *   crypto: {\n *   ciphertext: 'cb3e13e3281ff3861a3f0257fad4c9a51b0eb046f9c7821825c46b210f040b8f',\n *      cipherparams: { iv: 'bfb43120ae00e9de110f8325143a2709' },\n *      cipher: 'aes-128-ctr',\n *      kdf: 'scrypt',\n *      kdfparams: {\n *        n: 8192,\n *        r: 8,\n *        p: 1,\n *        dklen: 32,\n *        salt: '210d0ec956787d865358ac45716e6dd42e68d48e346d795746509523aeb477dd'\n *      },\n *      mac: 'efbf6d3409f37c0084a79d5fdf9a6f5d97d11447517ef1ea8374f51e581b7efd'\n *    }\n *   }, '123').then(console.log);\n *\n *\n * > {\n * address: '0xcdA9A91875fc35c8Ac1320E098e584495d66e47c',\n * privateKey: '67f476289210e3bef3c1c75e4de993ff0a00663df00def84e73aa7411eac18a6',\n * signTransaction: [Function: signTransaction],\n * sign: [Function: sign],\n * encrypt: [AsyncFunction: encrypt]\n * }\n * ```\n */\nexport const decrypt = async (\n\tkeystore: KeyStore | string,\n\tpassword: string | Uint8Array,\n\tnonStrict?: boolean,\n): Promise<Web3Account> => {\n\tconst json =\n\t\ttypeof keystore === 'object'\n\t\t\t? keystore\n\t\t\t: (JSON.parse(nonStrict ? keystore.toLowerCase() : keystore) as KeyStore);\n\n\tvalidator.validateJSONSchema(keyStoreSchema, json);\n\n\tif (json.version !== 3) throw new KeyStoreVersionError();\n\n\tconst uint8ArrayPassword =\n\t\ttypeof password === 'string' ? hexToBytes(utf8ToHex(password)) : password;\n\n\tvalidator.validate(['bytes'], [uint8ArrayPassword]);\n\n\tlet derivedKey;\n\tif (json.crypto.kdf === 'scrypt') {\n\t\tconst kdfparams = json.crypto.kdfparams as ScryptParams;\n\t\tconst uint8ArraySalt =\n\t\t\ttypeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n\t\tderivedKey = scryptSync(\n\t\t\tuint8ArrayPassword,\n\t\t\tuint8ArraySalt,\n\t\t\tkdfparams.n,\n\t\t\tkdfparams.p,\n\t\t\tkdfparams.r,\n\t\t\tkdfparams.dklen,\n\t\t);\n\t} else if (json.crypto.kdf === 'pbkdf2') {\n\t\tconst kdfparams: PBKDF2SHA256Params = json.crypto.kdfparams as PBKDF2SHA256Params;\n\n\t\tconst uint8ArraySalt =\n\t\t\ttypeof kdfparams.salt === 'string' ? hexToBytes(kdfparams.salt) : kdfparams.salt;\n\n\t\tderivedKey = pbkdf2Sync(\n\t\t\tuint8ArrayPassword,\n\t\t\tuint8ArraySalt,\n\t\t\tkdfparams.c,\n\t\t\tkdfparams.dklen,\n\t\t\t'sha256',\n\t\t);\n\t} else {\n\t\tthrow new InvalidKdfError();\n\t}\n\n\tconst ciphertext = hexToBytes(json.crypto.ciphertext);\n\tconst mac = sha3Raw(uint8ArrayConcat(derivedKey.slice(16, 32), ciphertext)).replace('0x', '');\n\n\tif (mac !== json.crypto.mac) {\n\t\tthrow new KeyDerivationError();\n\t}\n\n\tconst seed = await createDecipheriv(\n\t\thexToBytes(json.crypto.ciphertext),\n\t\tderivedKey.slice(0, 16),\n\t\thexToBytes(json.crypto.cipherparams.iv),\n\t);\n\n\treturn privateKeyToAccount(seed);\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;;;;;;;;;;;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG,CAEH,OAAO,EACN,OAAO,IAAI,gBAAgB,EAC3B,OAAO,IAAI,cAAc,GACzB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EACN,eAAe,EACf,oBAAoB,EACpB,sBAAsB,EACtB,qBAAqB,EACrB,aAAa,EACb,kBAAkB,EAClB,oBAAoB,EACpB,qBAAqB,EACrB,qBAAqB,EACrB,uBAAuB,EACvB,4BAA4B,GAC5B,MAAM,aAAa,CAAC;;;AA8BrB,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAHhE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;;;;AAf7E,OAAO,EACN,iBAAiB,EACjB,UAAU,EACV,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,WAAW,EACX,WAAW,EACX,OAAO,EACP,iBAAiB,EACjB,gBAAgB,EAChB,SAAS,EACT,MAAM,GACN,MAAM,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2Bb,MAAM,0BAA0B,GAAG,CAAC,IAAW,EAAE,YAAsB,EAAc,EAAE;IAC7F,IAAI,oBAAgC,CAAC;IAErC,gHAAgH;IAChH,IAAI,CAAC,YAAY,IAAI,OAAO,IAAI,KAAK,QAAQ,8OAAI,cAAA,AAAW,EAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;QAC1F,MAAM,wOAAI,wBAAqB,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,CAAC;QACJ,oBAAoB,2NAAG,eAAA,AAAY,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,yNAAC,oBAAA,AAAiB,EAAC,IAAI,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAA,IAAM,CAAC;QACR,MAAM,wOAAI,yBAAsB,EAAE,CAAC;IACpC,CAAC;IAED,IAAI,CAAC,YAAY,IAAI,oBAAoB,CAAC,UAAU,KAAK,EAAE,EAAE,CAAC;QAC7D,MAAM,wOAAI,wBAAqB,EAAE,CAAC;IACnC,CAAC;IAED,OAAO,oBAAoB,CAAC;AAC7B,CAAC,CAAC;AAyBK,MAAM,WAAW,GAAG,CAAC,OAAe,EAAE,UAAU,GAAG,KAAK,EAAU,EAAE;IAC1E,MAAM,UAAU,6OAAG,cAAW,AAAX,EAAY,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,wNAAC,aAAA,AAAS,EAAC,OAAO,CAAC,CAAC;IAEvE,MAAM,YAAY,2NAAG,aAAA,AAAU,EAAC,UAAU,CAAC,CAAC;IAE5C,MAAM,QAAQ,2NAAG,aAAA,AAAU,0NAC1B,WAAA,AAAQ,EAAC,CAAA,8BAAA,EAAiC,YAAY,CAAC,UAAU,EAAE,CAAC,CACpE,CAAC;IAEF,MAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,yNAAC,mBAAA,AAAgB,EAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAExF,OAAO,4NAAO,AAAP,EAAQ,UAAU,CAAC,CAAC,CAAC,2FAA2F;AACxH,CAAC,CAAC;AAQK,MAAM,yBAAyB,GAAG,CAAC,IAAe,EAAE,UAAiB,EAAc,EAAE;IAC3F,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,UAAU,CAAC,CAAC;IAEpE,MAAM,SAAS,gPAAG,YAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;IAC1E,MAAM,cAAc,GAAG,SAAS,CAAC,iBAAiB,EAAE,CAAC;IACrD,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IACrD,MAAM,CAAC,GAAG,SAAS,CAAC,QAAS,GAAG,EAAE,CAAC;IAEnC,OAAO;QACN,WAAW,EAAE,IAAI;QACjB,CAAC,0NAAE,cAAA,AAAW,EAAC,CAAC,CAAC;QACjB,CAAC,EAAE,CAAA,EAAA,EAAK,CAAC,EAAE;QACX,CAAC,EAAE,CAAA,EAAA,EAAK,CAAC,EAAE;QACX,SAAS,EAAE,2NAAG,aAAA,AAAU,EAAC,cAAc,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;KAC3D,CAAC;AACH,CAAC,CAAC;AAuBK,MAAM,IAAI,GAAG,CAAC,IAAY,EAAE,UAAiB,EAAc,EAAE;IACnE,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IAE/B,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,yBAAyB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAExF,OAAO;QACN,OAAO,EAAE,IAAI;QACb,WAAW;QACX,CAAC;QACD,CAAC;QACD,CAAC;QACD,SAAS;KACT,CAAC;AACH,CAAC,CAAC;AAqBK,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,UAAiB,EAAc,EAAE;IACtE,wDAAwD;IACxD,MAAM,IAAI,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAErC,qCAAqC;IACrC,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,yBAAyB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAExF,OAAO;QACN,OAAO,EAAE,IAAI;QACb,WAAW;QACX,CAAC;QACD,CAAC;QACD,CAAC;QACD,SAAS;KACT,CAAC;AACH,CAAC,CAAC;AA6FK,MAAM,eAAe,GAAG,CAC9B,WAA6B,EAC7B,UAAqB,EAGY,CAAE,CAAA,SAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;QACnC,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,KAAC,iOAAU,AAAV,EAAW,UAAU,CAAC,CAAC,CAAC;QAC1D,8OAAI,YAAA,AAAS,EAAC,QAAQ,CAAC,CAAC,CAAC,8OAAI,YAAA,AAAS,EAAC,QAAQ,CAAC,CAAC,CAAC,8OAAI,YAAS,AAAT,EAAU,QAAQ,CAAC,CAAC,CAAC,EAC1E,MAAM,4OAAI,0BAAuB,CAAC,cAAc,CAAC,CAAC;QAEnD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEjD,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACjC,IAAI,WAAW,GAAG,eAAe,CAAC;YAClC,KAAK,MAAM,eAAe,IAAI,gBAAgB,CAAE,CAAC;gBAChD,WAAW,IAAI,GAAG,WAAW,CAAA,CAAA,EAAI,eAAe,CAAA,CAAA,CAAG,CAAC;YACrD,CAAC;YACD,MAAM,4OAAI,0BAAuB,CAAC,WAAW,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,KAAK,2NAAG,aAAA,AAAU,EAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QAC/C,MAAM,MAAM,qNAAG,UAAA,AAAO,EAAC,KAAK,CAAC,CAAC,CAAC,2FAA2F;QAE1H,OAAO;YACN,WAAW,0NAAE,aAAA,AAAU,EAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACxD,CAAC,EAAE,CAAA,EAAA,EAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;YACjC,CAAC,EAAE,CAAA,EAAA,EAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;YACnD,CAAC,EAAE,CAAA,EAAA,EAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;YACnD,cAAc,EAAE,KAAK;YACrB,eAAe,0NAAE,aAAA,AAAU,EAAC,MAAM,CAAC;SACnC,CAAC;IACH,CAAC,CAAA,CAAC;AAYK,MAAM,kBAAkB,GAAG,CAAC,cAAyB,EAAW,EAAE;IACxE,8OAAI,YAAA,AAAS,EAAC,cAAc,CAAC,EAAE,MAAM,4OAAI,+BAA4B,EAAE,CAAC;IAExE,MAAM,EAAE,yPAAG,qBAAkB,CAAC,kBAAkB,wNAAC,cAAA,AAAU,EAAC,cAAc,CAAC,CAAC,CAAC;IAE7E,+NAAO,oBAAA,AAAiB,EAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5D,CAAC,CAAC;AAgCK,MAAM,OAAO,GAAG,CACtB,IAA8B,EAC9B,YAAqB,EACrB,WAA8B,EAC9B,CAAU,EACV,QAAkB,EACR,EAAE;IACZ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;QAC9B,MAAM,YAAY,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACrE,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IACD,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,EAAC,qPAAA,AAAS,EAAC,CAAC,CAAC,EAAE,CAAC;QAC1F,MAAM,YAAY,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3E,OAAO,OAAO,CAAC,IAAI,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,6OAAI,aAAA,AAAS,EAAC,YAAY,CAAC,EAAE,MAAM,wOAAI,wBAAqB,CAAC,4BAA4B,CAAC,CAAC;IAE3F,MAAM,OAAO,GAAG,GAAG,CAAC,CAAC,sEAAsE;IAC3F,MAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAE7D,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,iBAAiB;IACxE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;QACZ,CAAC,IAAI,EAAE,CAAC;IACT,CAAC;IAED,MAAM,WAAW,gPAAG,YAAS,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CACjF,cAAc,CAAC,CAAC,CAAC,CACjB,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CACjD,UAAU,CAAC,KAAK,CAAC,CAAC;IAEpB,MAAM,UAAU,qNAAG,UAAA,AAAO,EAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpD,MAAM,OAAO,GAAG,4OAAA,AAAiB,EAAC,CAAA,EAAA,EAAK,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEhE,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAeK,MAAM,mBAAmB,GAAG,CAAC,UAAiB,EAAU,EAAE;IAChE,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,UAAU,CAAC,CAAC;IAEpE,uDAAuD;IACvD,MAAM,SAAS,gPAAG,YAAS,CAAC,YAAY,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IAEtE,wGAAwG;IACxG,MAAM,aAAa,qNAAG,UAAA,AAAO,EAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAElD,mEAAmE;IACnE,gEAAgE;IAChE,MAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAEzC,+NAAO,oBAAA,AAAiB,EAAC,CAAA,EAAA,EAAK,OAAO,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC;AAeK,MAAM,qBAAqB,GAAG,CAAC,UAAiB,EAAE,YAAqB,EAAU,EAAE;IACzF,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,UAAU,CAAC,CAAC;IAEpE,uDAAuD;IACvD,OAAO,CAAA,EAAA,0NAAK,aAAA,AAAU,+OAAC,YAAS,CAAC,YAAY,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,mCAAmC;AACnI,CAAC,CAAC;AA6EK,MAAM,OAAO,GAAG,CACtB,UAAiB,EACjB,QAA6B,EAC7B,OAAuB,EACH,CAAE,CAAA,SAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;;QACtB,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,UAAU,CAAC,CAAC;QAEpE,8DAA8D;QAC9D,IAAI,IAAI,CAAC;QACT,IAAI,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,IAAI,EAAE,CAAC;YACnB,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,EAAC,oOAAA,AAAU,EAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QACnF,CAAC,MAAM,CAAC;YACP,IAAI,uNAAG,cAAA,AAAW,EAAC,EAAE,CAAC,CAAC;QACxB,CAAC;QAED,IAAI,CAAC,2OAAC,WAAQ,AAAR,EAAS,QAAQ,CAAC,4NAAI,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,2PAAoB,EAAE,CAAC;QAClC,CAAC;QAED,MAAM,kBAAkB,GACvB,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,yNAAC,aAAA,AAAU,0NAAC,YAAA,AAAS,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAE3E,IAAI,oBAAoB,CAAC;QACzB,IAAI,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,EAAE,EAAE,CAAC;YACjB,oBAAoB,GAAG,OAAO,OAAO,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,wNAAC,cAAA,AAAU,EAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5F,IAAI,oBAAoB,CAAC,MAAM,KAAK,EAAE,EAAE,CAAC;gBACxC,MAAM,wOAAI,gBAAa,EAAE,CAAC;YAC3B,CAAC;QACF,CAAC,MAAM,CAAC;YACP,oBAAoB,uNAAG,cAAA,AAAW,EAAC,EAAE,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,GAAG,GAAG,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,GAAG,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,QAAQ,CAAC;QAErC,IAAI,UAAU,CAAC;QACf,IAAI,SAA4C,CAAC;QAEjD,0CAA0C;QAC1C,IAAI,GAAG,KAAK,QAAQ,EAAE,CAAC;YACtB,SAAS,GAAG;gBACX,KAAK,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE;gBAC3B,IAAI,0NAAE,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;gBACxC,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,MAAM;gBACvB,GAAG,EAAE,aAAa;aAClB,CAAC;YAEF,IAAI,SAAS,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC;gBACxB,kEAAkE;gBAClE,MAAM,wOAAI,wBAAqB,EAAE,CAAC;YACnC,CAAC;YACD,UAAU,sOAAG,aAAA,AAAU,EAAC,kBAAkB,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3F,CAAC,MAAM,IAAI,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC7B,SAAS,GAAG;gBACX,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI;gBACrB,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC;gBAClB,CAAC,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,CAAC;gBAClB,KAAK,EAAE,CAAA,KAAA,OAAO,KAAA,QAAP,OAAO,KAAA,KAAA,IAAA,KAAA,IAAP,OAAO,CAAE,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,EAAE;gBAC3B,IAAI,0NAAE,aAAA,AAAU,EAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;aACxC,CAAC;YACF,UAAU,sOAAG,aAAA,AAAU,EACtB,kBAAkB,EAClB,IAAI,EACJ,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,KAAK,CACf,CAAC;QACH,CAAC,MAAM,CAAC;YACP,MAAM,wOAAI,kBAAe,EAAE,CAAC;QAC7B,CAAC;QAED,MAAM,MAAM,GAAG,sOAAM,UAAA,AAAc,EAClC,oBAAoB,EACpB,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EACvB,oBAAoB,EACpB,aAAa,CACb,CAAC;QAEF,MAAM,UAAU,GAAG,qOAAA,AAAU,EAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE/C,MAAM,GAAG,qNAAG,UAAA,AAAO,0NAAC,mBAAA,AAAgB,EAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC1F,OAAO;YACN,OAAO,EAAE,CAAC;YACV,EAAE,oNAAE,SAAA,AAAM,EAAE;YACZ,OAAO,EAAE,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;YAClF,MAAM,EAAE;gBACP,UAAU;gBACV,YAAY,EAAE;oBACb,EAAE,0NAAE,aAAU,AAAV,EAAW,oBAAoB,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;iBACtD;gBACD,MAAM,EAAE,aAAa;gBACrB,GAAG;gBACH,SAAS;gBACT,GAAG;aACH;SACD,CAAC;IACH,CAAC,CAAA,CAAC;AAyBK,MAAM,mBAAmB,GAAG,CAAC,UAAiB,EAAE,YAAsB,EAAe,EAAE;IAC7F,MAAM,oBAAoB,GAAG,0BAA0B,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IAElF,OAAO;QACN,OAAO,EAAE,mBAAmB,CAAC,oBAAoB,CAAC;QAClD,UAAU,EAAE,qOAAA,AAAU,EAAC,oBAAoB,CAAC;QAC5C,6DAA6D;QAC7D,eAAe,EAAE,CAAC,GAAgB,EAAE,EAAE;YACrC,MAAM,4OAAI,0BAAuB,CAAC,oDAAoD,CAAC,CAAC;QACzF,CAAC;QACD,IAAI,EAAE,CAAC,IAAsC,EAAE,CAC9C,CADgD,GAC5C,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,oBAAoB,CAAC;QACnF,OAAO,EAAE,CAAO,QAAgB,EAAE,OAAiC,EAAE,CAAE,CAAA,SAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;gBACtE,OAAA,OAAO,CAAC,oBAAoB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAA;YAAA,EAAA;KACjD,CAAC;AACH,CAAC,CAAC;AAqBK,MAAM,MAAM,GAAG,GAAgB,EAAE;IACvC,MAAM,UAAU,gPAAG,YAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAEtD,OAAO,mBAAmB,CAAC,2NAAG,aAAA,AAAU,EAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACzD,CAAC,CAAC;AA0CK,MAAM,OAAO,GAAG,CACtB,QAA2B,EAC3B,QAA6B,EAC7B,SAAmB,EACI,CAAE,CAAA,SAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA;QACzB,MAAM,IAAI,GACT,OAAO,QAAQ,KAAK,QAAQ,GACzB,QAAQ,GACP,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAc,CAAC;2OAE5E,YAAS,CAAC,kBAAkB,CAAC,sPAAc,EAAE,IAAI,CAAC,CAAC;QAEnD,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,MAAM,wOAAI,uBAAoB,EAAE,CAAC;QAEzD,MAAM,kBAAkB,GACvB,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,qOAAA,AAAU,0NAAC,YAAA,AAAS,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;2OAE3E,YAAS,CAAC,QAAQ,CAAC;YAAC,OAAO;SAAC,EAAE;YAAC,kBAAkB;SAAC,CAAC,CAAC;QAEpD,IAAI,UAAU,CAAC;QACf,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAyB,CAAC;YACxD,MAAM,cAAc,GACnB,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,yNAAC,aAAA,AAAU,EAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;YAClF,UAAU,IAAG,+OAAA,AAAU,EACtB,kBAAkB,EAClB,cAAc,EACd,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,KAAK,CACf,CAAC;QACH,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YACzC,MAAM,SAAS,GAAuB,IAAI,CAAC,MAAM,CAAC,SAA+B,CAAC;YAElF,MAAM,cAAc,GACnB,OAAO,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,yNAAC,aAAA,AAAU,EAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;YAElF,UAAU,sOAAG,aAAA,AAAU,EACtB,kBAAkB,EAClB,cAAc,EACd,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,KAAK,EACf,QAAQ,CACR,CAAC;QACH,CAAC,MAAM,CAAC;YACP,MAAM,wOAAI,kBAAe,EAAE,CAAC;QAC7B,CAAC;QAED,MAAM,UAAU,2NAAG,aAAA,AAAU,EAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACtD,MAAM,GAAG,qNAAG,UAAA,AAAO,0NAAC,mBAAgB,AAAhB,EAAiB,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE9F,IAAI,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC7B,MAAM,IAAI,yPAAkB,EAAE,CAAC;QAChC,CAAC;QAED,MAAM,IAAI,GAAG,sOAAM,UAAA,AAAgB,0NAClC,aAAU,AAAV,EAAW,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAClC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,0NACvB,aAAU,AAAV,EAAW,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CACvC,CAAC;QAEF,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAA,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7068, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7074, "column": 0}, "map": {"version":3,"file":"types.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/types.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tHexString,\n\tSignatureObject,\n\tSignResult,\n\tSignTransactionResult,\n\tWeb3BaseWalletAccount,\n} from 'web3-types';\nimport { AccessListEIP2930Transaction, FeeMarketEIP1559Transaction, Transaction } from './tx';\n\nexport { SignatureObject, SignResult, SignTransactionResult };\n\nexport interface Web3Account extends Web3BaseWalletAccount {\n\taddress: HexString;\n\tprivateKey: HexString;\n}\n\n// To avoid dependency of \"dom\" library for TS, copying this interface within project\n/** This Web Storage API interface provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. */\nexport interface WebStorage {\n\t/** Returns the number of key/value pairs. */\n\treadonly length: number;\n\t/**\n\t * Removes all key/value pairs, if there are any.\n\t *\n\t * Dispatches a storage event on Window objects holding an equivalent Storage object.\n\t */\n\tclear(): void;\n\t/** Returns the current value associated with the given key, or null if the given key does not exist. */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tgetItem(key: string): string | null;\n\t/** Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs. */\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\tkey(index: number): string | null;\n\t/**\n\t * Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n\t *\n\t * Dispatches a storage event on Window objects holding an equivalent Storage object.\n\t */\n\tremoveItem(key: string): void;\n\t/**\n\t * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\t *\n\t * Throws a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\t *\n\t * Dispatches a storage event on Window objects holding an equivalent Storage object.\n\t */\n\tsetItem(key: string, value: string): void;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t[name: string]: any;\n}\n\nexport type TypedTransaction =\n\t| Transaction\n\t| AccessListEIP2930Transaction\n\t| FeeMarketEIP1559Transaction;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE","ignoreList":[0]}},
    {"offset": {"line": 7092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7098, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/common/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// @ethereumjs/common version 3.1.1\nexport * from './common.js';\nexport * from './enums.js';\nexport * from './types.js';\nexport * from './utils.js';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CACF,mCAAmC","ignoreList":[0]}},
    {"offset": {"line": 7120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7138, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/tx/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// @ethereumjs/tx version 4.1.1\nexport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js';\nexport { AccessListEIP2930Transaction } from './eip2930Transaction.js';\nexport { Transaction } from './legacyTransaction.js';\nexport { TransactionFactory } from './transactionFactory.js';\nexport { BaseTransaction } from './baseTransaction.js';\nexport * as txUtils from './utils.js';\nexport * from './types.js';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF,+BAA+B","ignoreList":[0]}},
    {"offset": {"line": 7163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7184, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/jamesmorgan/Developer/web3/E-VOT/frontend/e-vote-app/node_modules/.pnpm/web3-eth-accounts%404.3.1/node_modules/web3-eth-accounts/src/index.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * The web3.eth.accounts contains functions to generate Ethereum accounts and sign transactions and data.\n *\n * **_NOTE:_** This package has NOT been audited and might potentially be unsafe. Take precautions to clear memory properly, store the private keys safely, and test transaction receiving and sending functionality properly before using in production!\n *\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { create, decrypt } from 'web3-eth-accounts'; // ....\n * ```\n *\n * To use this package within the web3 object use:\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * // now you have access to the accounts class\n * web3.eth.accounts.create();\n * ```\n */\n\nexport * from './wallet.js';\nexport * from './account.js';\nexport * from './types.js';\nexport * from './schemas.js';\nexport * from './common/index.js';\nexport * from './tx/index.js';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE,CAEF;;;;;;;;;;;;;;;;;;;;GAoBG","ignoreList":[0]}},
    {"offset": {"line": 7227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}