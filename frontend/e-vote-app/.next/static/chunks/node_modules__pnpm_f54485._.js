(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules__pnpm_f54485._.js", {

"[project]/node_modules/.pnpm/@walletconnect+modal-core@2.7.0_@types+react@19.0.8_react@19.0.0/node_modules/@walletconnect/modal-core/dist/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ConfigCtrl": (()=>ConfigCtrl),
    "CoreUtil": (()=>CoreUtil),
    "EventsCtrl": (()=>EventsCtrl),
    "ExplorerCtrl": (()=>ExplorerCtrl),
    "ModalCtrl": (()=>ModalCtrl),
    "OptionsCtrl": (()=>OptionsCtrl),
    "RouterCtrl": (()=>RouterCtrl),
    "ThemeCtrl": (()=>ThemeCtrl),
    "ToastCtrl": (()=>ToastCtrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/valtio@1.11.2_@types+react@19.0.8_react@19.0.0/node_modules/valtio/esm/vanilla.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$1$2e$6_$40$babel$2b$core$40$7$2e$26$2e$0_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/next@15.1.6_@babel+core@7.26.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
;
const state$7 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    history: [
        "ConnectWallet"
    ],
    view: "ConnectWallet",
    data: void 0
});
const RouterCtrl = {
    state: state$7,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$7, ()=>callback(state$7));
    },
    push (view, data) {
        if (view !== state$7.view) {
            state$7.view = view;
            if (data) {
                state$7.data = data;
            }
            state$7.history.push(view);
        }
    },
    reset (view) {
        state$7.view = view;
        state$7.history = [
            view
        ];
    },
    replace (view) {
        if (state$7.history.length > 1) {
            state$7.history[state$7.history.length - 1] = view;
            state$7.view = view;
        }
    },
    goBack () {
        if (state$7.history.length > 1) {
            state$7.history.pop();
            const [last] = state$7.history.slice(-1);
            state$7.view = last;
        }
    },
    setData (data) {
        state$7.data = data;
    }
};
const CoreUtil = {
    WALLETCONNECT_DEEPLINK_CHOICE: "WALLETCONNECT_DEEPLINK_CHOICE",
    WCM_VERSION: "WCM_VERSION",
    RECOMMENDED_WALLET_AMOUNT: 9,
    isMobile () {
        if (typeof window !== "undefined") {
            return Boolean(window.matchMedia("(pointer:coarse)").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent));
        }
        return false;
    },
    isAndroid () {
        return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes("android");
    },
    isIos () {
        const ua = navigator.userAgent.toLowerCase();
        return CoreUtil.isMobile() && (ua.includes("iphone") || ua.includes("ipad"));
    },
    isHttpUrl (url) {
        return url.startsWith("http://") || url.startsWith("https://");
    },
    isArray (data) {
        return Array.isArray(data) && data.length > 0;
    },
    isTelegram () {
        return typeof window !== "undefined" && // eslint-disable-next-line @typescript-eslint/no-explicit-any
        (Boolean(window.TelegramWebviewProxy) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
        Boolean(window.Telegram) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
        Boolean(window.TelegramWebviewProxyProto));
    },
    formatNativeUrl (appUrl, wcUri, name) {
        if (CoreUtil.isHttpUrl(appUrl)) {
            return this.formatUniversalUrl(appUrl, wcUri, name);
        }
        let safeAppUrl = appUrl;
        if (!safeAppUrl.includes("://")) {
            safeAppUrl = appUrl.replaceAll("/", "").replaceAll(":", "");
            safeAppUrl = `${safeAppUrl}://`;
        }
        if (!safeAppUrl.endsWith("/")) {
            safeAppUrl = `${safeAppUrl}/`;
        }
        this.setWalletConnectDeepLink(safeAppUrl, name);
        const encodedWcUrl = encodeURIComponent(wcUri);
        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;
    },
    formatUniversalUrl (appUrl, wcUri, name) {
        if (!CoreUtil.isHttpUrl(appUrl)) {
            return this.formatNativeUrl(appUrl, wcUri, name);
        }
        let safeAppUrl = appUrl;
        if (safeAppUrl.startsWith("https://t.me")) {
            const formattedUri = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$next$40$15$2e$1$2e$6_$40$babel$2b$core$40$7$2e$26$2e$0_react$2d$dom$40$19$2e$0$2e$0_react$40$19$2e$0$2e$0_$5f$react$40$19$2e$0$2e$0$2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(wcUri).toString("base64").replace(/[=]/g, "");
            if (safeAppUrl.endsWith("/")) {
                safeAppUrl = safeAppUrl.slice(0, -1);
            }
            this.setWalletConnectDeepLink(safeAppUrl, name);
            const url = new URL(safeAppUrl);
            url.searchParams.set("startapp", formattedUri);
            const link = url.toString();
            return link;
        }
        if (!safeAppUrl.endsWith("/")) {
            safeAppUrl = `${safeAppUrl}/`;
        }
        this.setWalletConnectDeepLink(safeAppUrl, name);
        const encodedWcUrl = encodeURIComponent(wcUri);
        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;
    },
    async wait (miliseconds) {
        return new Promise((resolve)=>{
            setTimeout(resolve, miliseconds);
        });
    },
    openHref (href, target) {
        const adjustedTarget = this.isTelegram() ? "_blank" : target;
        window.open(href, adjustedTarget, "noreferrer noopener");
    },
    setWalletConnectDeepLink (href, name) {
        try {
            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({
                href,
                name
            }));
        } catch (e) {
            console.info("Unable to set WalletConnect deep link");
        }
    },
    setWalletConnectAndroidDeepLink (wcUri) {
        try {
            const [href] = wcUri.split("?");
            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({
                href,
                name: "Android"
            }));
        } catch (e) {
            console.info("Unable to set WalletConnect android deep link");
        }
    },
    removeWalletConnectDeepLink () {
        try {
            localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE);
        } catch (e) {
            console.info("Unable to remove WalletConnect deep link");
        }
    },
    setModalVersionInStorage () {
        try {
            if (typeof localStorage !== "undefined") {
                localStorage.setItem(CoreUtil.WCM_VERSION, "2.7.0");
            }
        } catch (e) {
            console.info("Unable to set Web3Modal version in storage");
        }
    },
    getWalletRouterData () {
        var _a;
        const routerData = (_a = RouterCtrl.state.data) == null ? void 0 : _a.Wallet;
        if (!routerData) {
            throw new Error('Missing "Wallet" view data');
        }
        return routerData;
    }
};
const isEnabled = typeof location !== "undefined" && (location.hostname.includes("localhost") || location.protocol.includes("https"));
const state$6 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    enabled: isEnabled,
    userSessionId: "",
    events: [],
    connectedWalletId: void 0
});
const EventsCtrl = {
    state: state$6,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$6.events, ()=>callback((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["snapshot"])(state$6.events[state$6.events.length - 1])));
    },
    initialize () {
        if (state$6.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) !== "undefined") {
            state$6.userSessionId = crypto.randomUUID();
        }
    },
    setConnectedWalletId (connectedWalletId) {
        state$6.connectedWalletId = connectedWalletId;
    },
    click (data) {
        if (state$6.enabled) {
            const event = {
                type: "CLICK",
                name: data.name,
                userSessionId: state$6.userSessionId,
                timestamp: Date.now(),
                data
            };
            state$6.events.push(event);
        }
    },
    track (data) {
        if (state$6.enabled) {
            const event = {
                type: "TRACK",
                name: data.name,
                userSessionId: state$6.userSessionId,
                timestamp: Date.now(),
                data
            };
            state$6.events.push(event);
        }
    },
    view (data) {
        if (state$6.enabled) {
            const event = {
                type: "VIEW",
                name: data.name,
                userSessionId: state$6.userSessionId,
                timestamp: Date.now(),
                data
            };
            state$6.events.push(event);
        }
    }
};
const state$5 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    chains: void 0,
    walletConnectUri: void 0,
    isAuth: false,
    isCustomDesktop: false,
    isCustomMobile: false,
    isDataLoaded: false,
    isUiLoaded: false
});
const OptionsCtrl = {
    state: state$5,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$5, ()=>callback(state$5));
    },
    setChains (chains) {
        state$5.chains = chains;
    },
    setWalletConnectUri (walletConnectUri) {
        state$5.walletConnectUri = walletConnectUri;
    },
    setIsCustomDesktop (isCustomDesktop) {
        state$5.isCustomDesktop = isCustomDesktop;
    },
    setIsCustomMobile (isCustomMobile) {
        state$5.isCustomMobile = isCustomMobile;
    },
    setIsDataLoaded (isDataLoaded) {
        state$5.isDataLoaded = isDataLoaded;
    },
    setIsUiLoaded (isUiLoaded) {
        state$5.isUiLoaded = isUiLoaded;
    },
    setIsAuth (isAuth) {
        state$5.isAuth = isAuth;
    }
};
const state$4 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    projectId: "",
    mobileWallets: void 0,
    desktopWallets: void 0,
    walletImages: void 0,
    chains: void 0,
    enableAuthMode: false,
    enableExplorer: true,
    explorerExcludedWalletIds: void 0,
    explorerRecommendedWalletIds: void 0,
    termsOfServiceUrl: void 0,
    privacyPolicyUrl: void 0
});
const ConfigCtrl = {
    state: state$4,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$4, ()=>callback(state$4));
    },
    setConfig (config) {
        var _a, _b;
        EventsCtrl.initialize();
        OptionsCtrl.setChains(config.chains);
        OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode));
        OptionsCtrl.setIsCustomMobile(Boolean((_a = config.mobileWallets) == null ? void 0 : _a.length));
        OptionsCtrl.setIsCustomDesktop(Boolean((_b = config.desktopWallets) == null ? void 0 : _b.length));
        CoreUtil.setModalVersionInStorage();
        Object.assign(state$4, config);
    }
};
var __defProp$2 = Object.defineProperty;
var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$2 = (obj, key, value)=>key in obj ? __defProp$2(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues$2 = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);
    if (__getOwnPropSymbols$2) for (var prop of __getOwnPropSymbols$2(b)){
        if (__propIsEnum$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);
    }
    return a;
};
const W3M_API = "https://explorer-api.walletconnect.com";
const SDK_TYPE = "wcm";
const SDK_VERSION = `js-${"2.7.0"}`;
async function fetchListings(endpoint, params) {
    const allParams = __spreadValues$2({
        sdkType: SDK_TYPE,
        sdkVersion: SDK_VERSION
    }, params);
    const url = new URL(endpoint, W3M_API);
    url.searchParams.append("projectId", ConfigCtrl.state.projectId);
    Object.entries(allParams).forEach(([key, value])=>{
        if (value) {
            url.searchParams.append(key, String(value));
        }
    });
    const request = await fetch(url);
    return request.json();
}
const ExplorerUtil = {
    async getDesktopListings (params) {
        return fetchListings("/w3m/v1/getDesktopListings", params);
    },
    async getMobileListings (params) {
        return fetchListings("/w3m/v1/getMobileListings", params);
    },
    async getInjectedListings (params) {
        return fetchListings("/w3m/v1/getInjectedListings", params);
    },
    async getAllListings (params) {
        return fetchListings("/w3m/v1/getAllListings", params);
    },
    getWalletImageUrl (imageId) {
        return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;
    },
    getAssetImageUrl (imageId) {
        return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;
    }
};
var __defProp$1 = Object.defineProperty;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value)=>key in obj ? __defProp$1(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues$1 = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);
    if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)){
        if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);
    }
    return a;
};
const isMobile = CoreUtil.isMobile();
const state$3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    wallets: {
        listings: [],
        total: 0,
        page: 1
    },
    search: {
        listings: [],
        total: 0,
        page: 1
    },
    recomendedWallets: []
});
const ExplorerCtrl = {
    state: state$3,
    async getRecomendedWallets () {
        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;
        if (explorerRecommendedWalletIds === "NONE" || explorerExcludedWalletIds === "ALL" && !explorerRecommendedWalletIds) {
            return state$3.recomendedWallets;
        }
        if (CoreUtil.isArray(explorerRecommendedWalletIds)) {
            const recommendedIds = explorerRecommendedWalletIds.join(",");
            const params = {
                recommendedIds
            };
            const { listings } = await ExplorerUtil.getAllListings(params);
            const listingsArr = Object.values(listings);
            listingsArr.sort((a, b)=>{
                const aIndex = explorerRecommendedWalletIds.indexOf(a.id);
                const bIndex = explorerRecommendedWalletIds.indexOf(b.id);
                return aIndex - bIndex;
            });
            state$3.recomendedWallets = listingsArr;
        } else {
            const { chains, isAuth } = OptionsCtrl.state;
            const chainsFilter = chains == null ? void 0 : chains.join(",");
            const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds);
            const params = {
                page: 1,
                sdks: isAuth ? "auth_v1" : void 0,
                entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,
                chains: chainsFilter,
                version: 2,
                excludedIds: isExcluded ? explorerExcludedWalletIds.join(",") : void 0
            };
            const { listings } = isMobile ? await ExplorerUtil.getMobileListings(params) : await ExplorerUtil.getDesktopListings(params);
            state$3.recomendedWallets = Object.values(listings);
        }
        return state$3.recomendedWallets;
    },
    async getWallets (params) {
        const extendedParams = __spreadValues$1({}, params);
        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;
        const { recomendedWallets } = state$3;
        if (explorerExcludedWalletIds === "ALL") {
            return state$3.wallets;
        }
        if (recomendedWallets.length) {
            extendedParams.excludedIds = recomendedWallets.map((wallet)=>wallet.id).join(",");
        } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {
            extendedParams.excludedIds = explorerRecommendedWalletIds.join(",");
        }
        if (CoreUtil.isArray(explorerExcludedWalletIds)) {
            extendedParams.excludedIds = [
                extendedParams.excludedIds,
                explorerExcludedWalletIds
            ].filter(Boolean).join(",");
        }
        if (OptionsCtrl.state.isAuth) {
            extendedParams.sdks = "auth_v1";
        }
        const { page, search } = params;
        const { listings: listingsObj, total } = isMobile ? await ExplorerUtil.getMobileListings(extendedParams) : await ExplorerUtil.getDesktopListings(extendedParams);
        const listings = Object.values(listingsObj);
        const type = search ? "search" : "wallets";
        state$3[type] = {
            listings: [
                ...state$3[type].listings,
                ...listings
            ],
            total,
            page: page != null ? page : 1
        };
        return {
            listings,
            total
        };
    },
    getWalletImageUrl (imageId) {
        return ExplorerUtil.getWalletImageUrl(imageId);
    },
    getAssetImageUrl (imageId) {
        return ExplorerUtil.getAssetImageUrl(imageId);
    },
    resetSearch () {
        state$3.search = {
            listings: [],
            total: 0,
            page: 1
        };
    }
};
const state$2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    open: false
});
const ModalCtrl = {
    state: state$2,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$2, ()=>callback(state$2));
    },
    async open (options) {
        return new Promise((resolve)=>{
            const { isUiLoaded, isDataLoaded } = OptionsCtrl.state;
            CoreUtil.removeWalletConnectDeepLink();
            OptionsCtrl.setWalletConnectUri(options == null ? void 0 : options.uri);
            OptionsCtrl.setChains(options == null ? void 0 : options.chains);
            RouterCtrl.reset("ConnectWallet");
            if (isUiLoaded && isDataLoaded) {
                state$2.open = true;
                resolve();
            } else {
                const interval = setInterval(()=>{
                    const opts = OptionsCtrl.state;
                    if (opts.isUiLoaded && opts.isDataLoaded) {
                        clearInterval(interval);
                        state$2.open = true;
                        resolve();
                    }
                }, 200);
            }
        });
    },
    close () {
        state$2.open = false;
    }
};
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __spreadValues = (a, b)=>{
    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){
        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);
    }
    return a;
};
function isDarkMode() {
    return typeof matchMedia !== "undefined" && matchMedia("(prefers-color-scheme: dark)").matches;
}
const state$1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    themeMode: isDarkMode() ? "dark" : "light"
});
const ThemeCtrl = {
    state: state$1,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state$1, ()=>callback(state$1));
    },
    setThemeConfig (theme) {
        const { themeMode, themeVariables } = theme;
        if (themeMode) {
            state$1.themeMode = themeMode;
        }
        if (themeVariables) {
            state$1.themeVariables = __spreadValues({}, themeVariables);
        }
    }
};
const state = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["proxy"])({
    open: false,
    message: "",
    variant: "success"
});
const ToastCtrl = {
    state,
    subscribe (callback) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f$valtio$40$1$2e$11$2e$2_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f$valtio$2f$esm$2f$vanilla$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribe"])(state, ()=>callback(state));
    },
    openToast (message, variant) {
        state.open = true;
        state.message = message;
        state.variant = variant;
    },
    closeToast () {
        state.open = false;
    }
};
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/.pnpm/@walletconnect+modal@2.7.0_@types+react@19.0.8_react@19.0.0/node_modules/@walletconnect/modal/dist/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "WalletConnectModal": (()=>WalletConnectModal)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/.pnpm/@walletconnect+modal-core@2.7.0_@types+react@19.0.8_react@19.0.0/node_modules/@walletconnect/modal-core/dist/index.js [app-client] (ecmascript)");
;
class WalletConnectModal {
    constructor(config){
        this.openModal = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalCtrl"].open;
        this.closeModal = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalCtrl"].close;
        this.subscribeModal = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ModalCtrl"].subscribe;
        this.setTheme = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ThemeCtrl"].setThemeConfig;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ThemeCtrl"].setThemeConfig(config);
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConfigCtrl"].setConfig(config);
        this.initUi();
    }
    async initUi() {
        if (typeof window !== "undefined") {
            await __turbopack_require__("[project]/node_modules/.pnpm/@walletconnect+modal-ui@2.7.0_@types+react@19.0.8_react@19.0.0/node_modules/@walletconnect/modal-ui/dist/index.js [app-client] (ecmascript, async loader)")(__turbopack_import__);
            const modal = document.createElement("wcm-modal");
            document.body.insertAdjacentElement("beforeend", modal);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f2e$pnpm$2f40$walletconnect$2b$modal$2d$core$40$2$2e$7$2e$0_$40$types$2b$react$40$19$2e$0$2e$8_react$40$19$2e$0$2e$0$2f$node_modules$2f40$walletconnect$2f$modal$2d$core$2f$dist$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsCtrl"].setIsUiLoaded(true);
        }
    }
}
;
 //# sourceMappingURL=index.js.map
}}),
}]);

//# sourceMappingURL=node_modules__pnpm_f54485._.js.map